// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: VehicleFleetProto.proto

#ifndef PROTOBUF_VehicleFleetProto_2eproto__INCLUDED
#define PROTOBUF_VehicleFleetProto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
#include <google/protobuf/timestamp.pb.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
namespace com {
namespace fmscloud {
namespace servicemessage {
namespace device {
namespace vehicle {
namespace protobuf {
namespace protobufmodel {
class VehicleFleetInfo;
class VehicleFleetInfoDefaultTypeInternal;
extern VehicleFleetInfoDefaultTypeInternal _VehicleFleetInfo_default_instance_;
class VehicleFleetOperation;
class VehicleFleetOperationDefaultTypeInternal;
extern VehicleFleetOperationDefaultTypeInternal _VehicleFleetOperation_default_instance_;
class VehicleFleetOperation_Fleet_node;
class VehicleFleetOperation_Fleet_nodeDefaultTypeInternal;
extern VehicleFleetOperation_Fleet_nodeDefaultTypeInternal _VehicleFleetOperation_Fleet_node_default_instance_;
class VehicleFleetResult;
class VehicleFleetResultDefaultTypeInternal;
extern VehicleFleetResultDefaultTypeInternal _VehicleFleetResult_default_instance_;
}  // namespace protobufmodel
}  // namespace protobuf
}  // namespace vehicle
}  // namespace device
}  // namespace servicemessage
}  // namespace fmscloud
}  // namespace com
namespace google {
namespace protobuf {
class Timestamp;
class TimestampDefaultTypeInternal;
extern TimestampDefaultTypeInternal _Timestamp_default_instance_;
}  // namespace protobuf
}  // namespace google

namespace com {
namespace fmscloud {
namespace servicemessage {
namespace device {
namespace vehicle {
namespace protobuf {
namespace protobufmodel {

namespace protobuf_VehicleFleetProto_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_VehicleFleetProto_2eproto

enum VehicleFleetOperation_Fleet_node_NodeType {
  VehicleFleetOperation_Fleet_node_NodeType_NODE_INVAILD = 0,
  VehicleFleetOperation_Fleet_node_NodeType_NODE_GROUPING = 1,
  VehicleFleetOperation_Fleet_node_NodeType_NODE_LEAVING = 2,
  VehicleFleetOperation_Fleet_node_NodeType_VehicleFleetOperation_Fleet_node_NodeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  VehicleFleetOperation_Fleet_node_NodeType_VehicleFleetOperation_Fleet_node_NodeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool VehicleFleetOperation_Fleet_node_NodeType_IsValid(int value);
const VehicleFleetOperation_Fleet_node_NodeType VehicleFleetOperation_Fleet_node_NodeType_NodeType_MIN = VehicleFleetOperation_Fleet_node_NodeType_NODE_INVAILD;
const VehicleFleetOperation_Fleet_node_NodeType VehicleFleetOperation_Fleet_node_NodeType_NodeType_MAX = VehicleFleetOperation_Fleet_node_NodeType_NODE_LEAVING;
const int VehicleFleetOperation_Fleet_node_NodeType_NodeType_ARRAYSIZE = VehicleFleetOperation_Fleet_node_NodeType_NodeType_MAX + 1;

enum VehicleFleetMode {
  MAN_CONTROL = 0,
  AUTO_DRIVE = 1,
  FLEET_HEADER = 2,
  FLEET_GROUPING = 3,
  FLEET_KEEP = 4,
  FLEET_LEAVING = 5,
  MODE_ERROR = 6,
  VehicleFleetMode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  VehicleFleetMode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool VehicleFleetMode_IsValid(int value);
const VehicleFleetMode VehicleFleetMode_MIN = MAN_CONTROL;
const VehicleFleetMode VehicleFleetMode_MAX = MODE_ERROR;
const int VehicleFleetMode_ARRAYSIZE = VehicleFleetMode_MAX + 1;

enum Port_Id {
  PortUnavaliable = 0,
  Port_OutSide = 1,
  Port_DSG = 2,
  Port_YSG_1 = 3,
  Port_YSG_4 = 4,
  Port_SHSHG = 5,
  Port_WGQ_2 = 6,
  Port_TAICANGGANG = 7,
  Port_Id_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Port_Id_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Port_Id_IsValid(int value);
const Port_Id Port_Id_MIN = PortUnavaliable;
const Port_Id Port_Id_MAX = Port_TAICANGGANG;
const int Port_Id_ARRAYSIZE = Port_Id_MAX + 1;

enum FleetApplyType {
  APPLY_NULL = 0,
  APPLY_JOIN_FLEET = 1,
  APPLY_FLEET_HEADER = 2,
  FleetApplyType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FleetApplyType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FleetApplyType_IsValid(int value);
const FleetApplyType FleetApplyType_MIN = APPLY_NULL;
const FleetApplyType FleetApplyType_MAX = APPLY_FLEET_HEADER;
const int FleetApplyType_ARRAYSIZE = FleetApplyType_MAX + 1;

// ===================================================================

class VehicleFleetOperation_Fleet_node : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node) */ {
 public:
  VehicleFleetOperation_Fleet_node();
  virtual ~VehicleFleetOperation_Fleet_node();

  VehicleFleetOperation_Fleet_node(const VehicleFleetOperation_Fleet_node& from);

  inline VehicleFleetOperation_Fleet_node& operator=(const VehicleFleetOperation_Fleet_node& from) {
    CopyFrom(from);
    return *this;
  }

  static const VehicleFleetOperation_Fleet_node& default_instance();

  static inline const VehicleFleetOperation_Fleet_node* internal_default_instance() {
    return reinterpret_cast<const VehicleFleetOperation_Fleet_node*>(
               &_VehicleFleetOperation_Fleet_node_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(VehicleFleetOperation_Fleet_node* other);

  // implements Message ----------------------------------------------

  inline VehicleFleetOperation_Fleet_node* New() const PROTOBUF_FINAL { return New(NULL); }

  VehicleFleetOperation_Fleet_node* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const VehicleFleetOperation_Fleet_node& from);
  void MergeFrom(const VehicleFleetOperation_Fleet_node& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(VehicleFleetOperation_Fleet_node* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef VehicleFleetOperation_Fleet_node_NodeType NodeType;
  static const NodeType NODE_INVAILD =
    VehicleFleetOperation_Fleet_node_NodeType_NODE_INVAILD;
  static const NodeType NODE_GROUPING =
    VehicleFleetOperation_Fleet_node_NodeType_NODE_GROUPING;
  static const NodeType NODE_LEAVING =
    VehicleFleetOperation_Fleet_node_NodeType_NODE_LEAVING;
  static inline bool NodeType_IsValid(int value) {
    return VehicleFleetOperation_Fleet_node_NodeType_IsValid(value);
  }
  static const NodeType NodeType_MIN =
    VehicleFleetOperation_Fleet_node_NodeType_NodeType_MIN;
  static const NodeType NodeType_MAX =
    VehicleFleetOperation_Fleet_node_NodeType_NodeType_MAX;
  static const int NodeType_ARRAYSIZE =
    VehicleFleetOperation_Fleet_node_NodeType_NodeType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // string Id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // double posX = 2;
  void clear_posx();
  static const int kPosXFieldNumber = 2;
  double posx() const;
  void set_posx(double value);

  // double posY = 3;
  void clear_posy();
  static const int kPosYFieldNumber = 3;
  double posy() const;
  void set_posy(double value);

  // .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node.NodeType nodeType = 4;
  void clear_nodetype();
  static const int kNodeTypeFieldNumber = 4;
  ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node_NodeType nodetype() const;
  void set_nodetype(::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node_NodeType value);

  // @@protoc_insertion_point(class_scope:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  double posx_;
  double posy_;
  int nodetype_;
  mutable int _cached_size_;
  friend struct protobuf_VehicleFleetProto_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VehicleFleetOperation : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation) */ {
 public:
  VehicleFleetOperation();
  virtual ~VehicleFleetOperation();

  VehicleFleetOperation(const VehicleFleetOperation& from);

  inline VehicleFleetOperation& operator=(const VehicleFleetOperation& from) {
    CopyFrom(from);
    return *this;
  }

  static const VehicleFleetOperation& default_instance();

  static inline const VehicleFleetOperation* internal_default_instance() {
    return reinterpret_cast<const VehicleFleetOperation*>(
               &_VehicleFleetOperation_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(VehicleFleetOperation* other);

  // implements Message ----------------------------------------------

  inline VehicleFleetOperation* New() const PROTOBUF_FINAL { return New(NULL); }

  VehicleFleetOperation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const VehicleFleetOperation& from);
  void MergeFrom(const VehicleFleetOperation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(VehicleFleetOperation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef VehicleFleetOperation_Fleet_node Fleet_node;

  // accessors -------------------------------------------------------

  // repeated string platoonMember = 3;
  int platoonmember_size() const;
  void clear_platoonmember();
  static const int kPlatoonMemberFieldNumber = 3;
  const ::std::string& platoonmember(int index) const;
  ::std::string* mutable_platoonmember(int index);
  void set_platoonmember(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_platoonmember(int index, ::std::string&& value);
  #endif
  void set_platoonmember(int index, const char* value);
  void set_platoonmember(int index, const char* value, size_t size);
  ::std::string* add_platoonmember();
  void add_platoonmember(const ::std::string& value);
  #if LANG_CXX11
  void add_platoonmember(::std::string&& value);
  #endif
  void add_platoonmember(const char* value);
  void add_platoonmember(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& platoonmember() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_platoonmember();

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string vehicleId = 2;
  void clear_vehicleid();
  static const int kVehicleIdFieldNumber = 2;
  const ::std::string& vehicleid() const;
  void set_vehicleid(const ::std::string& value);
  #if LANG_CXX11
  void set_vehicleid(::std::string&& value);
  #endif
  void set_vehicleid(const char* value);
  void set_vehicleid(const char* value, size_t size);
  ::std::string* mutable_vehicleid();
  ::std::string* release_vehicleid();
  void set_allocated_vehicleid(::std::string* vehicleid);

  // string signature = 10;
  void clear_signature();
  static const int kSignatureFieldNumber = 10;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_signature(::std::string&& value);
  #endif
  void set_signature(const char* value);
  void set_signature(const char* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // .google.protobuf.Timestamp startTime = 5;
  bool has_starttime() const;
  void clear_starttime();
  static const int kStartTimeFieldNumber = 5;
  const ::google::protobuf::Timestamp& starttime() const;
  ::google::protobuf::Timestamp* mutable_starttime();
  ::google::protobuf::Timestamp* release_starttime();
  void set_allocated_starttime(::google::protobuf::Timestamp* starttime);

  // .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node startNode = 6;
  bool has_startnode() const;
  void clear_startnode();
  static const int kStartNodeFieldNumber = 6;
  const ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node& startnode() const;
  ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node* mutable_startnode();
  ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node* release_startnode();
  void set_allocated_startnode(::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node* startnode);

  // .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node endNode = 7;
  bool has_endnode() const;
  void clear_endnode();
  static const int kEndNodeFieldNumber = 7;
  const ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node& endnode() const;
  ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node* mutable_endnode();
  ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node* release_endnode();
  void set_allocated_endnode(::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node* endnode);

  // int32 platoonNumber = 4;
  void clear_platoonnumber();
  static const int kPlatoonNumberFieldNumber = 4;
  ::google::protobuf::int32 platoonnumber() const;
  void set_platoonnumber(::google::protobuf::int32 value);

  // .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.Port_Id srcPort = 8;
  void clear_srcport();
  static const int kSrcPortFieldNumber = 8;
  ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::Port_Id srcport() const;
  void set_srcport(::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::Port_Id value);

  // .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.Port_Id dstPort = 9;
  void clear_dstport();
  static const int kDstPortFieldNumber = 9;
  ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::Port_Id dstport() const;
  void set_dstport(::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::Port_Id value);

  // @@protoc_insertion_point(class_scope:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> platoonmember_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr vehicleid_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  ::google::protobuf::Timestamp* starttime_;
  ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node* startnode_;
  ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node* endnode_;
  ::google::protobuf::int32 platoonnumber_;
  int srcport_;
  int dstport_;
  mutable int _cached_size_;
  friend struct protobuf_VehicleFleetProto_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VehicleFleetResult : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult) */ {
 public:
  VehicleFleetResult();
  virtual ~VehicleFleetResult();

  VehicleFleetResult(const VehicleFleetResult& from);

  inline VehicleFleetResult& operator=(const VehicleFleetResult& from) {
    CopyFrom(from);
    return *this;
  }

  static const VehicleFleetResult& default_instance();

  static inline const VehicleFleetResult* internal_default_instance() {
    return reinterpret_cast<const VehicleFleetResult*>(
               &_VehicleFleetResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(VehicleFleetResult* other);

  // implements Message ----------------------------------------------

  inline VehicleFleetResult* New() const PROTOBUF_FINAL { return New(NULL); }

  VehicleFleetResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const VehicleFleetResult& from);
  void MergeFrom(const VehicleFleetResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(VehicleFleetResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string vehicleId = 2;
  void clear_vehicleid();
  static const int kVehicleIdFieldNumber = 2;
  const ::std::string& vehicleid() const;
  void set_vehicleid(const ::std::string& value);
  #if LANG_CXX11
  void set_vehicleid(::std::string&& value);
  #endif
  void set_vehicleid(const char* value);
  void set_vehicleid(const char* value, size_t size);
  ::std::string* mutable_vehicleid();
  ::std::string* release_vehicleid();
  void set_allocated_vehicleid(::std::string* vehicleid);

  // string signature = 10;
  void clear_signature();
  static const int kSignatureFieldNumber = 10;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_signature(::std::string&& value);
  #endif
  void set_signature(const char* value);
  void set_signature(const char* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // int32 platoonNumber = 4;
  void clear_platoonnumber();
  static const int kPlatoonNumberFieldNumber = 4;
  ::google::protobuf::int32 platoonnumber() const;
  void set_platoonnumber(::google::protobuf::int32 value);

  // .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.FleetApplyType applyInfo = 5;
  void clear_applyinfo();
  static const int kApplyInfoFieldNumber = 5;
  ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::FleetApplyType applyinfo() const;
  void set_applyinfo(::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::FleetApplyType value);

  // bool applyResult = 7;
  void clear_applyresult();
  static const int kApplyResultFieldNumber = 7;
  bool applyresult() const;
  void set_applyresult(bool value);

  // @@protoc_insertion_point(class_scope:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr vehicleid_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  ::google::protobuf::int32 platoonnumber_;
  int applyinfo_;
  bool applyresult_;
  mutable int _cached_size_;
  friend struct protobuf_VehicleFleetProto_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VehicleFleetInfo : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo) */ {
 public:
  VehicleFleetInfo();
  virtual ~VehicleFleetInfo();

  VehicleFleetInfo(const VehicleFleetInfo& from);

  inline VehicleFleetInfo& operator=(const VehicleFleetInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const VehicleFleetInfo& default_instance();

  static inline const VehicleFleetInfo* internal_default_instance() {
    return reinterpret_cast<const VehicleFleetInfo*>(
               &_VehicleFleetInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(VehicleFleetInfo* other);

  // implements Message ----------------------------------------------

  inline VehicleFleetInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  VehicleFleetInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const VehicleFleetInfo& from);
  void MergeFrom(const VehicleFleetInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(VehicleFleetInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string vehicleId = 5;
  void clear_vehicleid();
  static const int kVehicleIdFieldNumber = 5;
  const ::std::string& vehicleid() const;
  void set_vehicleid(const ::std::string& value);
  #if LANG_CXX11
  void set_vehicleid(::std::string&& value);
  #endif
  void set_vehicleid(const char* value);
  void set_vehicleid(const char* value, size_t size);
  ::std::string* mutable_vehicleid();
  ::std::string* release_vehicleid();
  void set_allocated_vehicleid(::std::string* vehicleid);

  // string fmsMessageId = 6;
  void clear_fmsmessageid();
  static const int kFmsMessageIdFieldNumber = 6;
  const ::std::string& fmsmessageid() const;
  void set_fmsmessageid(const ::std::string& value);
  #if LANG_CXX11
  void set_fmsmessageid(::std::string&& value);
  #endif
  void set_fmsmessageid(const char* value);
  void set_fmsmessageid(const char* value, size_t size);
  ::std::string* mutable_fmsmessageid();
  ::std::string* release_fmsmessageid();
  void set_allocated_fmsmessageid(::std::string* fmsmessageid);

  // .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.FleetApplyType applyInfo = 1;
  void clear_applyinfo();
  static const int kApplyInfoFieldNumber = 1;
  ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::FleetApplyType applyinfo() const;
  void set_applyinfo(::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::FleetApplyType value);

  // .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetMode actualDriveMode = 2;
  void clear_actualdrivemode();
  static const int kActualDriveModeFieldNumber = 2;
  ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetMode actualdrivemode() const;
  void set_actualdrivemode(::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetMode value);

  // int32 platoonNumber = 3;
  void clear_platoonnumber();
  static const int kPlatoonNumberFieldNumber = 3;
  ::google::protobuf::int32 platoonnumber() const;
  void set_platoonnumber(::google::protobuf::int32 value);

  // int32 vehicleSquence = 4;
  void clear_vehiclesquence();
  static const int kVehicleSquenceFieldNumber = 4;
  ::google::protobuf::int32 vehiclesquence() const;
  void set_vehiclesquence(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr vehicleid_;
  ::google::protobuf::internal::ArenaStringPtr fmsmessageid_;
  int applyinfo_;
  int actualdrivemode_;
  ::google::protobuf::int32 platoonnumber_;
  ::google::protobuf::int32 vehiclesquence_;
  mutable int _cached_size_;
  friend struct protobuf_VehicleFleetProto_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// VehicleFleetOperation_Fleet_node

// string Id = 1;
inline void VehicleFleetOperation_Fleet_node::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VehicleFleetOperation_Fleet_node::id() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node.Id)
  return id_.GetNoArena();
}
inline void VehicleFleetOperation_Fleet_node::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node.Id)
}
#if LANG_CXX11
inline void VehicleFleetOperation_Fleet_node::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node.Id)
}
#endif
inline void VehicleFleetOperation_Fleet_node::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node.Id)
}
inline void VehicleFleetOperation_Fleet_node::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node.Id)
}
inline ::std::string* VehicleFleetOperation_Fleet_node::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node.Id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VehicleFleetOperation_Fleet_node::release_id() {
  // @@protoc_insertion_point(field_release:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node.Id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VehicleFleetOperation_Fleet_node::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node.Id)
}

// double posX = 2;
inline void VehicleFleetOperation_Fleet_node::clear_posx() {
  posx_ = 0;
}
inline double VehicleFleetOperation_Fleet_node::posx() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node.posX)
  return posx_;
}
inline void VehicleFleetOperation_Fleet_node::set_posx(double value) {
  
  posx_ = value;
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node.posX)
}

// double posY = 3;
inline void VehicleFleetOperation_Fleet_node::clear_posy() {
  posy_ = 0;
}
inline double VehicleFleetOperation_Fleet_node::posy() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node.posY)
  return posy_;
}
inline void VehicleFleetOperation_Fleet_node::set_posy(double value) {
  
  posy_ = value;
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node.posY)
}

// .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node.NodeType nodeType = 4;
inline void VehicleFleetOperation_Fleet_node::clear_nodetype() {
  nodetype_ = 0;
}
inline ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node_NodeType VehicleFleetOperation_Fleet_node::nodetype() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node.nodeType)
  return static_cast< ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node_NodeType >(nodetype_);
}
inline void VehicleFleetOperation_Fleet_node::set_nodetype(::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node_NodeType value) {
  
  nodetype_ = value;
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node.nodeType)
}

// -------------------------------------------------------------------

// VehicleFleetOperation

// string id = 1;
inline void VehicleFleetOperation::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VehicleFleetOperation::id() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.id)
  return id_.GetNoArena();
}
inline void VehicleFleetOperation::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.id)
}
#if LANG_CXX11
inline void VehicleFleetOperation::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.id)
}
#endif
inline void VehicleFleetOperation::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.id)
}
inline void VehicleFleetOperation::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.id)
}
inline ::std::string* VehicleFleetOperation::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VehicleFleetOperation::release_id() {
  // @@protoc_insertion_point(field_release:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VehicleFleetOperation::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.id)
}

// string vehicleId = 2;
inline void VehicleFleetOperation::clear_vehicleid() {
  vehicleid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VehicleFleetOperation::vehicleid() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.vehicleId)
  return vehicleid_.GetNoArena();
}
inline void VehicleFleetOperation::set_vehicleid(const ::std::string& value) {
  
  vehicleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.vehicleId)
}
#if LANG_CXX11
inline void VehicleFleetOperation::set_vehicleid(::std::string&& value) {
  
  vehicleid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.vehicleId)
}
#endif
inline void VehicleFleetOperation::set_vehicleid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  vehicleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.vehicleId)
}
inline void VehicleFleetOperation::set_vehicleid(const char* value, size_t size) {
  
  vehicleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.vehicleId)
}
inline ::std::string* VehicleFleetOperation::mutable_vehicleid() {
  
  // @@protoc_insertion_point(field_mutable:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.vehicleId)
  return vehicleid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VehicleFleetOperation::release_vehicleid() {
  // @@protoc_insertion_point(field_release:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.vehicleId)
  
  return vehicleid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VehicleFleetOperation::set_allocated_vehicleid(::std::string* vehicleid) {
  if (vehicleid != NULL) {
    
  } else {
    
  }
  vehicleid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vehicleid);
  // @@protoc_insertion_point(field_set_allocated:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.vehicleId)
}

// repeated string platoonMember = 3;
inline int VehicleFleetOperation::platoonmember_size() const {
  return platoonmember_.size();
}
inline void VehicleFleetOperation::clear_platoonmember() {
  platoonmember_.Clear();
}
inline const ::std::string& VehicleFleetOperation::platoonmember(int index) const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.platoonMember)
  return platoonmember_.Get(index);
}
inline ::std::string* VehicleFleetOperation::mutable_platoonmember(int index) {
  // @@protoc_insertion_point(field_mutable:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.platoonMember)
  return platoonmember_.Mutable(index);
}
inline void VehicleFleetOperation::set_platoonmember(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.platoonMember)
  platoonmember_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void VehicleFleetOperation::set_platoonmember(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.platoonMember)
  platoonmember_.Mutable(index)->assign(std::move(value));
}
#endif
inline void VehicleFleetOperation::set_platoonmember(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  platoonmember_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.platoonMember)
}
inline void VehicleFleetOperation::set_platoonmember(int index, const char* value, size_t size) {
  platoonmember_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.platoonMember)
}
inline ::std::string* VehicleFleetOperation::add_platoonmember() {
  // @@protoc_insertion_point(field_add_mutable:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.platoonMember)
  return platoonmember_.Add();
}
inline void VehicleFleetOperation::add_platoonmember(const ::std::string& value) {
  platoonmember_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.platoonMember)
}
#if LANG_CXX11
inline void VehicleFleetOperation::add_platoonmember(::std::string&& value) {
  platoonmember_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.platoonMember)
}
#endif
inline void VehicleFleetOperation::add_platoonmember(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  platoonmember_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.platoonMember)
}
inline void VehicleFleetOperation::add_platoonmember(const char* value, size_t size) {
  platoonmember_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.platoonMember)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
VehicleFleetOperation::platoonmember() const {
  // @@protoc_insertion_point(field_list:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.platoonMember)
  return platoonmember_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
VehicleFleetOperation::mutable_platoonmember() {
  // @@protoc_insertion_point(field_mutable_list:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.platoonMember)
  return &platoonmember_;
}

// int32 platoonNumber = 4;
inline void VehicleFleetOperation::clear_platoonnumber() {
  platoonnumber_ = 0;
}
inline ::google::protobuf::int32 VehicleFleetOperation::platoonnumber() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.platoonNumber)
  return platoonnumber_;
}
inline void VehicleFleetOperation::set_platoonnumber(::google::protobuf::int32 value) {
  
  platoonnumber_ = value;
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.platoonNumber)
}

// .google.protobuf.Timestamp startTime = 5;
inline bool VehicleFleetOperation::has_starttime() const {
  return this != internal_default_instance() && starttime_ != NULL;
}
inline void VehicleFleetOperation::clear_starttime() {
  if (GetArenaNoVirtual() == NULL && starttime_ != NULL) delete starttime_;
  starttime_ = NULL;
}
inline const ::google::protobuf::Timestamp& VehicleFleetOperation::starttime() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.startTime)
  return starttime_ != NULL ? *starttime_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* VehicleFleetOperation::mutable_starttime() {
  
  if (starttime_ == NULL) {
    starttime_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.startTime)
  return starttime_;
}
inline ::google::protobuf::Timestamp* VehicleFleetOperation::release_starttime() {
  // @@protoc_insertion_point(field_release:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.startTime)
  
  ::google::protobuf::Timestamp* temp = starttime_;
  starttime_ = NULL;
  return temp;
}
inline void VehicleFleetOperation::set_allocated_starttime(::google::protobuf::Timestamp* starttime) {
  delete starttime_;
  if (starttime != NULL && starttime->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_starttime = new ::google::protobuf::Timestamp;
    new_starttime->CopyFrom(*starttime);
    starttime = new_starttime;
  }
  starttime_ = starttime;
  if (starttime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.startTime)
}

// .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node startNode = 6;
inline bool VehicleFleetOperation::has_startnode() const {
  return this != internal_default_instance() && startnode_ != NULL;
}
inline void VehicleFleetOperation::clear_startnode() {
  if (GetArenaNoVirtual() == NULL && startnode_ != NULL) delete startnode_;
  startnode_ = NULL;
}
inline const ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node& VehicleFleetOperation::startnode() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.startNode)
  return startnode_ != NULL ? *startnode_
                         : *::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node::internal_default_instance();
}
inline ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node* VehicleFleetOperation::mutable_startnode() {
  
  if (startnode_ == NULL) {
    startnode_ = new ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node;
  }
  // @@protoc_insertion_point(field_mutable:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.startNode)
  return startnode_;
}
inline ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node* VehicleFleetOperation::release_startnode() {
  // @@protoc_insertion_point(field_release:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.startNode)
  
  ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node* temp = startnode_;
  startnode_ = NULL;
  return temp;
}
inline void VehicleFleetOperation::set_allocated_startnode(::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node* startnode) {
  delete startnode_;
  startnode_ = startnode;
  if (startnode) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.startNode)
}

// .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node endNode = 7;
inline bool VehicleFleetOperation::has_endnode() const {
  return this != internal_default_instance() && endnode_ != NULL;
}
inline void VehicleFleetOperation::clear_endnode() {
  if (GetArenaNoVirtual() == NULL && endnode_ != NULL) delete endnode_;
  endnode_ = NULL;
}
inline const ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node& VehicleFleetOperation::endnode() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.endNode)
  return endnode_ != NULL ? *endnode_
                         : *::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node::internal_default_instance();
}
inline ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node* VehicleFleetOperation::mutable_endnode() {
  
  if (endnode_ == NULL) {
    endnode_ = new ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node;
  }
  // @@protoc_insertion_point(field_mutable:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.endNode)
  return endnode_;
}
inline ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node* VehicleFleetOperation::release_endnode() {
  // @@protoc_insertion_point(field_release:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.endNode)
  
  ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node* temp = endnode_;
  endnode_ = NULL;
  return temp;
}
inline void VehicleFleetOperation::set_allocated_endnode(::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node* endnode) {
  delete endnode_;
  endnode_ = endnode;
  if (endnode) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.endNode)
}

// .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.Port_Id srcPort = 8;
inline void VehicleFleetOperation::clear_srcport() {
  srcport_ = 0;
}
inline ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::Port_Id VehicleFleetOperation::srcport() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.srcPort)
  return static_cast< ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::Port_Id >(srcport_);
}
inline void VehicleFleetOperation::set_srcport(::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::Port_Id value) {
  
  srcport_ = value;
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.srcPort)
}

// .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.Port_Id dstPort = 9;
inline void VehicleFleetOperation::clear_dstport() {
  dstport_ = 0;
}
inline ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::Port_Id VehicleFleetOperation::dstport() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.dstPort)
  return static_cast< ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::Port_Id >(dstport_);
}
inline void VehicleFleetOperation::set_dstport(::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::Port_Id value) {
  
  dstport_ = value;
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.dstPort)
}

// string signature = 10;
inline void VehicleFleetOperation::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VehicleFleetOperation::signature() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.signature)
  return signature_.GetNoArena();
}
inline void VehicleFleetOperation::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.signature)
}
#if LANG_CXX11
inline void VehicleFleetOperation::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.signature)
}
#endif
inline void VehicleFleetOperation::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.signature)
}
inline void VehicleFleetOperation::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.signature)
}
inline ::std::string* VehicleFleetOperation::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VehicleFleetOperation::release_signature() {
  // @@protoc_insertion_point(field_release:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VehicleFleetOperation::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.signature)
}

// -------------------------------------------------------------------

// VehicleFleetResult

// string id = 1;
inline void VehicleFleetResult::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VehicleFleetResult::id() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.id)
  return id_.GetNoArena();
}
inline void VehicleFleetResult::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.id)
}
#if LANG_CXX11
inline void VehicleFleetResult::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.id)
}
#endif
inline void VehicleFleetResult::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.id)
}
inline void VehicleFleetResult::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.id)
}
inline ::std::string* VehicleFleetResult::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VehicleFleetResult::release_id() {
  // @@protoc_insertion_point(field_release:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VehicleFleetResult::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.id)
}

// string vehicleId = 2;
inline void VehicleFleetResult::clear_vehicleid() {
  vehicleid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VehicleFleetResult::vehicleid() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.vehicleId)
  return vehicleid_.GetNoArena();
}
inline void VehicleFleetResult::set_vehicleid(const ::std::string& value) {
  
  vehicleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.vehicleId)
}
#if LANG_CXX11
inline void VehicleFleetResult::set_vehicleid(::std::string&& value) {
  
  vehicleid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.vehicleId)
}
#endif
inline void VehicleFleetResult::set_vehicleid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  vehicleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.vehicleId)
}
inline void VehicleFleetResult::set_vehicleid(const char* value, size_t size) {
  
  vehicleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.vehicleId)
}
inline ::std::string* VehicleFleetResult::mutable_vehicleid() {
  
  // @@protoc_insertion_point(field_mutable:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.vehicleId)
  return vehicleid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VehicleFleetResult::release_vehicleid() {
  // @@protoc_insertion_point(field_release:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.vehicleId)
  
  return vehicleid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VehicleFleetResult::set_allocated_vehicleid(::std::string* vehicleid) {
  if (vehicleid != NULL) {
    
  } else {
    
  }
  vehicleid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vehicleid);
  // @@protoc_insertion_point(field_set_allocated:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.vehicleId)
}

// int32 platoonNumber = 4;
inline void VehicleFleetResult::clear_platoonnumber() {
  platoonnumber_ = 0;
}
inline ::google::protobuf::int32 VehicleFleetResult::platoonnumber() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.platoonNumber)
  return platoonnumber_;
}
inline void VehicleFleetResult::set_platoonnumber(::google::protobuf::int32 value) {
  
  platoonnumber_ = value;
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.platoonNumber)
}

// .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.FleetApplyType applyInfo = 5;
inline void VehicleFleetResult::clear_applyinfo() {
  applyinfo_ = 0;
}
inline ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::FleetApplyType VehicleFleetResult::applyinfo() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.applyInfo)
  return static_cast< ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::FleetApplyType >(applyinfo_);
}
inline void VehicleFleetResult::set_applyinfo(::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::FleetApplyType value) {
  
  applyinfo_ = value;
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.applyInfo)
}

// bool applyResult = 7;
inline void VehicleFleetResult::clear_applyresult() {
  applyresult_ = false;
}
inline bool VehicleFleetResult::applyresult() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.applyResult)
  return applyresult_;
}
inline void VehicleFleetResult::set_applyresult(bool value) {
  
  applyresult_ = value;
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.applyResult)
}

// string signature = 10;
inline void VehicleFleetResult::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VehicleFleetResult::signature() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.signature)
  return signature_.GetNoArena();
}
inline void VehicleFleetResult::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.signature)
}
#if LANG_CXX11
inline void VehicleFleetResult::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.signature)
}
#endif
inline void VehicleFleetResult::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.signature)
}
inline void VehicleFleetResult::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.signature)
}
inline ::std::string* VehicleFleetResult::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VehicleFleetResult::release_signature() {
  // @@protoc_insertion_point(field_release:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VehicleFleetResult::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.signature)
}

// -------------------------------------------------------------------

// VehicleFleetInfo

// .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.FleetApplyType applyInfo = 1;
inline void VehicleFleetInfo::clear_applyinfo() {
  applyinfo_ = 0;
}
inline ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::FleetApplyType VehicleFleetInfo::applyinfo() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.applyInfo)
  return static_cast< ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::FleetApplyType >(applyinfo_);
}
inline void VehicleFleetInfo::set_applyinfo(::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::FleetApplyType value) {
  
  applyinfo_ = value;
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.applyInfo)
}

// .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetMode actualDriveMode = 2;
inline void VehicleFleetInfo::clear_actualdrivemode() {
  actualdrivemode_ = 0;
}
inline ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetMode VehicleFleetInfo::actualdrivemode() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.actualDriveMode)
  return static_cast< ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetMode >(actualdrivemode_);
}
inline void VehicleFleetInfo::set_actualdrivemode(::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetMode value) {
  
  actualdrivemode_ = value;
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.actualDriveMode)
}

// int32 platoonNumber = 3;
inline void VehicleFleetInfo::clear_platoonnumber() {
  platoonnumber_ = 0;
}
inline ::google::protobuf::int32 VehicleFleetInfo::platoonnumber() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.platoonNumber)
  return platoonnumber_;
}
inline void VehicleFleetInfo::set_platoonnumber(::google::protobuf::int32 value) {
  
  platoonnumber_ = value;
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.platoonNumber)
}

// int32 vehicleSquence = 4;
inline void VehicleFleetInfo::clear_vehiclesquence() {
  vehiclesquence_ = 0;
}
inline ::google::protobuf::int32 VehicleFleetInfo::vehiclesquence() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.vehicleSquence)
  return vehiclesquence_;
}
inline void VehicleFleetInfo::set_vehiclesquence(::google::protobuf::int32 value) {
  
  vehiclesquence_ = value;
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.vehicleSquence)
}

// string vehicleId = 5;
inline void VehicleFleetInfo::clear_vehicleid() {
  vehicleid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VehicleFleetInfo::vehicleid() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.vehicleId)
  return vehicleid_.GetNoArena();
}
inline void VehicleFleetInfo::set_vehicleid(const ::std::string& value) {
  
  vehicleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.vehicleId)
}
#if LANG_CXX11
inline void VehicleFleetInfo::set_vehicleid(::std::string&& value) {
  
  vehicleid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.vehicleId)
}
#endif
inline void VehicleFleetInfo::set_vehicleid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  vehicleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.vehicleId)
}
inline void VehicleFleetInfo::set_vehicleid(const char* value, size_t size) {
  
  vehicleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.vehicleId)
}
inline ::std::string* VehicleFleetInfo::mutable_vehicleid() {
  
  // @@protoc_insertion_point(field_mutable:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.vehicleId)
  return vehicleid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VehicleFleetInfo::release_vehicleid() {
  // @@protoc_insertion_point(field_release:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.vehicleId)
  
  return vehicleid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VehicleFleetInfo::set_allocated_vehicleid(::std::string* vehicleid) {
  if (vehicleid != NULL) {
    
  } else {
    
  }
  vehicleid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vehicleid);
  // @@protoc_insertion_point(field_set_allocated:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.vehicleId)
}

// string fmsMessageId = 6;
inline void VehicleFleetInfo::clear_fmsmessageid() {
  fmsmessageid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VehicleFleetInfo::fmsmessageid() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.fmsMessageId)
  return fmsmessageid_.GetNoArena();
}
inline void VehicleFleetInfo::set_fmsmessageid(const ::std::string& value) {
  
  fmsmessageid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.fmsMessageId)
}
#if LANG_CXX11
inline void VehicleFleetInfo::set_fmsmessageid(::std::string&& value) {
  
  fmsmessageid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.fmsMessageId)
}
#endif
inline void VehicleFleetInfo::set_fmsmessageid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  fmsmessageid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.fmsMessageId)
}
inline void VehicleFleetInfo::set_fmsmessageid(const char* value, size_t size) {
  
  fmsmessageid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.fmsMessageId)
}
inline ::std::string* VehicleFleetInfo::mutable_fmsmessageid() {
  
  // @@protoc_insertion_point(field_mutable:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.fmsMessageId)
  return fmsmessageid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VehicleFleetInfo::release_fmsmessageid() {
  // @@protoc_insertion_point(field_release:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.fmsMessageId)
  
  return fmsmessageid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VehicleFleetInfo::set_allocated_fmsmessageid(::std::string* fmsmessageid) {
  if (fmsmessageid != NULL) {
    
  } else {
    
  }
  fmsmessageid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fmsmessageid);
  // @@protoc_insertion_point(field_set_allocated:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.fmsMessageId)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace protobufmodel
}  // namespace protobuf
}  // namespace vehicle
}  // namespace device
}  // namespace servicemessage
}  // namespace fmscloud
}  // namespace com

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node_NodeType> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetMode> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::Port_Id> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::FleetApplyType> : ::google::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_VehicleFleetProto_2eproto__INCLUDED
