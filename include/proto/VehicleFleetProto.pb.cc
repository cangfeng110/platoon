// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: VehicleFleetProto.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "VehicleFleetProto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace fmscloud {
namespace servicemessage {
namespace device {
namespace vehicle {
namespace protobuf {
namespace protobufmodel {
class VehicleFleetOperation_Fleet_nodeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<VehicleFleetOperation_Fleet_node> {
} _VehicleFleetOperation_Fleet_node_default_instance_;
class VehicleFleetOperationDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<VehicleFleetOperation> {
} _VehicleFleetOperation_default_instance_;
class VehicleFleetResultDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<VehicleFleetResult> {
} _VehicleFleetResult_default_instance_;
class VehicleFleetInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<VehicleFleetInfo> {
} _VehicleFleetInfo_default_instance_;

namespace protobuf_VehicleFleetProto_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};


void TableStruct::Shutdown() {
  _VehicleFleetOperation_Fleet_node_default_instance_.Shutdown();
  _VehicleFleetOperation_default_instance_.Shutdown();
  _VehicleFleetResult_default_instance_.Shutdown();
  _VehicleFleetInfo_default_instance_.Shutdown();
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaults();
  _VehicleFleetOperation_Fleet_node_default_instance_.DefaultConstruct();
  _VehicleFleetOperation_default_instance_.DefaultConstruct();
  _VehicleFleetResult_default_instance_.DefaultConstruct();
  _VehicleFleetInfo_default_instance_.DefaultConstruct();
  _VehicleFleetOperation_default_instance_.get_mutable()->starttime_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  _VehicleFleetOperation_default_instance_.get_mutable()->startnode_ = const_cast< ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node*>(
      ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node::internal_default_instance());
  _VehicleFleetOperation_default_instance_.get_mutable()->endnode_ = const_cast< ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node*>(
      ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER

}  // namespace protobuf_VehicleFleetProto_2eproto

bool VehicleFleetOperation_Fleet_node_NodeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const VehicleFleetOperation_Fleet_node_NodeType VehicleFleetOperation_Fleet_node::NODE_INVAILD;
const VehicleFleetOperation_Fleet_node_NodeType VehicleFleetOperation_Fleet_node::NODE_GROUPING;
const VehicleFleetOperation_Fleet_node_NodeType VehicleFleetOperation_Fleet_node::NODE_LEAVING;
const VehicleFleetOperation_Fleet_node_NodeType VehicleFleetOperation_Fleet_node::NodeType_MIN;
const VehicleFleetOperation_Fleet_node_NodeType VehicleFleetOperation_Fleet_node::NodeType_MAX;
const int VehicleFleetOperation_Fleet_node::NodeType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool VehicleFleetMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

bool Port_Id_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

bool FleetApplyType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VehicleFleetOperation_Fleet_node::kIdFieldNumber;
const int VehicleFleetOperation_Fleet_node::kPosXFieldNumber;
const int VehicleFleetOperation_Fleet_node::kPosYFieldNumber;
const int VehicleFleetOperation_Fleet_node::kNodeTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VehicleFleetOperation_Fleet_node::VehicleFleetOperation_Fleet_node()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_VehicleFleetProto_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node)
}
VehicleFleetOperation_Fleet_node::VehicleFleetOperation_Fleet_node(const VehicleFleetOperation_Fleet_node& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  ::memcpy(&posx_, &from.posx_,
    reinterpret_cast<char*>(&nodetype_) -
    reinterpret_cast<char*>(&posx_) + sizeof(nodetype_));
  // @@protoc_insertion_point(copy_constructor:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node)
}

void VehicleFleetOperation_Fleet_node::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&posx_, 0, reinterpret_cast<char*>(&nodetype_) -
    reinterpret_cast<char*>(&posx_) + sizeof(nodetype_));
  _cached_size_ = 0;
}

VehicleFleetOperation_Fleet_node::~VehicleFleetOperation_Fleet_node() {
  // @@protoc_insertion_point(destructor:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node)
  SharedDtor();
}

void VehicleFleetOperation_Fleet_node::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VehicleFleetOperation_Fleet_node::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const VehicleFleetOperation_Fleet_node& VehicleFleetOperation_Fleet_node::default_instance() {
  protobuf_VehicleFleetProto_2eproto::InitDefaults();
  return *internal_default_instance();
}

VehicleFleetOperation_Fleet_node* VehicleFleetOperation_Fleet_node::New(::google::protobuf::Arena* arena) const {
  VehicleFleetOperation_Fleet_node* n = new VehicleFleetOperation_Fleet_node;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VehicleFleetOperation_Fleet_node::Clear() {
// @@protoc_insertion_point(message_clear_start:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&posx_, 0, reinterpret_cast<char*>(&nodetype_) -
    reinterpret_cast<char*>(&posx_) + sizeof(nodetype_));
}

bool VehicleFleetOperation_Fleet_node::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node.Id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double posX = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &posx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double posY = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &posy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node.NodeType nodeType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nodetype(static_cast< ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node_NodeType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node)
  return false;
#undef DO_
}

void VehicleFleetOperation_Fleet_node::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node.Id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // double posX = 2;
  if (this->posx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->posx(), output);
  }

  // double posY = 3;
  if (this->posy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->posy(), output);
  }

  // .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node.NodeType nodeType = 4;
  if (this->nodetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->nodetype(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node)
}

size_t VehicleFleetOperation_Fleet_node::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node)
  size_t total_size = 0;

  // string Id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // double posX = 2;
  if (this->posx() != 0) {
    total_size += 1 + 8;
  }

  // double posY = 3;
  if (this->posy() != 0) {
    total_size += 1 + 8;
  }

  // .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node.NodeType nodeType = 4;
  if (this->nodetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nodetype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VehicleFleetOperation_Fleet_node::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const VehicleFleetOperation_Fleet_node*>(&from));
}

void VehicleFleetOperation_Fleet_node::MergeFrom(const VehicleFleetOperation_Fleet_node& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.posx() != 0) {
    set_posx(from.posx());
  }
  if (from.posy() != 0) {
    set_posy(from.posy());
  }
  if (from.nodetype() != 0) {
    set_nodetype(from.nodetype());
  }
}

void VehicleFleetOperation_Fleet_node::CopyFrom(const VehicleFleetOperation_Fleet_node& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleFleetOperation_Fleet_node::IsInitialized() const {
  return true;
}

void VehicleFleetOperation_Fleet_node::Swap(VehicleFleetOperation_Fleet_node* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VehicleFleetOperation_Fleet_node::InternalSwap(VehicleFleetOperation_Fleet_node* other) {
  id_.Swap(&other->id_);
  std::swap(posx_, other->posx_);
  std::swap(posy_, other->posy_);
  std::swap(nodetype_, other->nodetype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string VehicleFleetOperation_Fleet_node::GetTypeName() const {
  return "com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VehicleFleetOperation_Fleet_node

// string Id = 1;
void VehicleFleetOperation_Fleet_node::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& VehicleFleetOperation_Fleet_node::id() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node.Id)
  return id_.GetNoArena();
}
void VehicleFleetOperation_Fleet_node::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node.Id)
}
#if LANG_CXX11
void VehicleFleetOperation_Fleet_node::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node.Id)
}
#endif
void VehicleFleetOperation_Fleet_node::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node.Id)
}
void VehicleFleetOperation_Fleet_node::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node.Id)
}
::std::string* VehicleFleetOperation_Fleet_node::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node.Id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VehicleFleetOperation_Fleet_node::release_id() {
  // @@protoc_insertion_point(field_release:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node.Id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VehicleFleetOperation_Fleet_node::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node.Id)
}

// double posX = 2;
void VehicleFleetOperation_Fleet_node::clear_posx() {
  posx_ = 0;
}
double VehicleFleetOperation_Fleet_node::posx() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node.posX)
  return posx_;
}
void VehicleFleetOperation_Fleet_node::set_posx(double value) {
  
  posx_ = value;
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node.posX)
}

// double posY = 3;
void VehicleFleetOperation_Fleet_node::clear_posy() {
  posy_ = 0;
}
double VehicleFleetOperation_Fleet_node::posy() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node.posY)
  return posy_;
}
void VehicleFleetOperation_Fleet_node::set_posy(double value) {
  
  posy_ = value;
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node.posY)
}

// .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node.NodeType nodeType = 4;
void VehicleFleetOperation_Fleet_node::clear_nodetype() {
  nodetype_ = 0;
}
::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node_NodeType VehicleFleetOperation_Fleet_node::nodetype() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node.nodeType)
  return static_cast< ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node_NodeType >(nodetype_);
}
void VehicleFleetOperation_Fleet_node::set_nodetype(::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node_NodeType value) {
  
  nodetype_ = value;
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node.nodeType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VehicleFleetOperation::kIdFieldNumber;
const int VehicleFleetOperation::kVehicleIdFieldNumber;
const int VehicleFleetOperation::kPlatoonMemberFieldNumber;
const int VehicleFleetOperation::kPlatoonNumberFieldNumber;
const int VehicleFleetOperation::kStartTimeFieldNumber;
const int VehicleFleetOperation::kStartNodeFieldNumber;
const int VehicleFleetOperation::kEndNodeFieldNumber;
const int VehicleFleetOperation::kSrcPortFieldNumber;
const int VehicleFleetOperation::kDstPortFieldNumber;
const int VehicleFleetOperation::kSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VehicleFleetOperation::VehicleFleetOperation()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_VehicleFleetProto_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation)
}
VehicleFleetOperation::VehicleFleetOperation(const VehicleFleetOperation& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      platoonmember_(from.platoonmember_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  vehicleid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vehicleid().size() > 0) {
    vehicleid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vehicleid_);
  }
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signature().size() > 0) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  if (from.has_starttime()) {
    starttime_ = new ::google::protobuf::Timestamp(*from.starttime_);
  } else {
    starttime_ = NULL;
  }
  if (from.has_startnode()) {
    startnode_ = new ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node(*from.startnode_);
  } else {
    startnode_ = NULL;
  }
  if (from.has_endnode()) {
    endnode_ = new ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node(*from.endnode_);
  } else {
    endnode_ = NULL;
  }
  ::memcpy(&platoonnumber_, &from.platoonnumber_,
    reinterpret_cast<char*>(&dstport_) -
    reinterpret_cast<char*>(&platoonnumber_) + sizeof(dstport_));
  // @@protoc_insertion_point(copy_constructor:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation)
}

void VehicleFleetOperation::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vehicleid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&starttime_, 0, reinterpret_cast<char*>(&dstport_) -
    reinterpret_cast<char*>(&starttime_) + sizeof(dstport_));
  _cached_size_ = 0;
}

VehicleFleetOperation::~VehicleFleetOperation() {
  // @@protoc_insertion_point(destructor:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation)
  SharedDtor();
}

void VehicleFleetOperation::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vehicleid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete starttime_;
  }
  if (this != internal_default_instance()) {
    delete startnode_;
  }
  if (this != internal_default_instance()) {
    delete endnode_;
  }
}

void VehicleFleetOperation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const VehicleFleetOperation& VehicleFleetOperation::default_instance() {
  protobuf_VehicleFleetProto_2eproto::InitDefaults();
  return *internal_default_instance();
}

VehicleFleetOperation* VehicleFleetOperation::New(::google::protobuf::Arena* arena) const {
  VehicleFleetOperation* n = new VehicleFleetOperation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VehicleFleetOperation::Clear() {
// @@protoc_insertion_point(message_clear_start:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation)
  platoonmember_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vehicleid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && starttime_ != NULL) {
    delete starttime_;
  }
  starttime_ = NULL;
  if (GetArenaNoVirtual() == NULL && startnode_ != NULL) {
    delete startnode_;
  }
  startnode_ = NULL;
  if (GetArenaNoVirtual() == NULL && endnode_ != NULL) {
    delete endnode_;
  }
  endnode_ = NULL;
  ::memset(&platoonnumber_, 0, reinterpret_cast<char*>(&dstport_) -
    reinterpret_cast<char*>(&platoonnumber_) + sizeof(dstport_));
}

bool VehicleFleetOperation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string vehicleId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vehicleid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vehicleid().data(), this->vehicleid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.vehicleId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string platoonMember = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_platoonmember()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->platoonmember(this->platoonmember_size() - 1).data(),
            this->platoonmember(this->platoonmember_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.platoonMember"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 platoonNumber = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &platoonnumber_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp startTime = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_starttime()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node startNode = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_startnode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node endNode = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_endnode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.Port_Id srcPort = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_srcport(static_cast< ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::Port_Id >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.Port_Id dstPort = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_dstport(static_cast< ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::Port_Id >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string signature = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signature()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->signature().data(), this->signature().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.signature"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation)
  return false;
#undef DO_
}

void VehicleFleetOperation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string vehicleId = 2;
  if (this->vehicleid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vehicleid().data(), this->vehicleid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.vehicleId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->vehicleid(), output);
  }

  // repeated string platoonMember = 3;
  for (int i = 0, n = this->platoonmember_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->platoonmember(i).data(), this->platoonmember(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.platoonMember");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->platoonmember(i), output);
  }

  // int32 platoonNumber = 4;
  if (this->platoonnumber() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->platoonnumber(), output);
  }

  // .google.protobuf.Timestamp startTime = 5;
  if (this->has_starttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->starttime_, output);
  }

  // .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node startNode = 6;
  if (this->has_startnode()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      6, *this->startnode_, output);
  }

  // .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node endNode = 7;
  if (this->has_endnode()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      7, *this->endnode_, output);
  }

  // .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.Port_Id srcPort = 8;
  if (this->srcport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->srcport(), output);
  }

  // .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.Port_Id dstPort = 9;
  if (this->dstport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->dstport(), output);
  }

  // string signature = 10;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), this->signature().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->signature(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation)
}

size_t VehicleFleetOperation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation)
  size_t total_size = 0;

  // repeated string platoonMember = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->platoonmember_size());
  for (int i = 0, n = this->platoonmember_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->platoonmember(i));
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string vehicleId = 2;
  if (this->vehicleid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vehicleid());
  }

  // string signature = 10;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->signature());
  }

  // .google.protobuf.Timestamp startTime = 5;
  if (this->has_starttime()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->starttime_);
  }

  // .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node startNode = 6;
  if (this->has_startnode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->startnode_);
  }

  // .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node endNode = 7;
  if (this->has_endnode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->endnode_);
  }

  // int32 platoonNumber = 4;
  if (this->platoonnumber() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->platoonnumber());
  }

  // .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.Port_Id srcPort = 8;
  if (this->srcport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->srcport());
  }

  // .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.Port_Id dstPort = 9;
  if (this->dstport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->dstport());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VehicleFleetOperation::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const VehicleFleetOperation*>(&from));
}

void VehicleFleetOperation::MergeFrom(const VehicleFleetOperation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  platoonmember_.MergeFrom(from.platoonmember_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.vehicleid().size() > 0) {

    vehicleid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vehicleid_);
  }
  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  if (from.has_starttime()) {
    mutable_starttime()->::google::protobuf::Timestamp::MergeFrom(from.starttime());
  }
  if (from.has_startnode()) {
    mutable_startnode()->::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node::MergeFrom(from.startnode());
  }
  if (from.has_endnode()) {
    mutable_endnode()->::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node::MergeFrom(from.endnode());
  }
  if (from.platoonnumber() != 0) {
    set_platoonnumber(from.platoonnumber());
  }
  if (from.srcport() != 0) {
    set_srcport(from.srcport());
  }
  if (from.dstport() != 0) {
    set_dstport(from.dstport());
  }
}

void VehicleFleetOperation::CopyFrom(const VehicleFleetOperation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleFleetOperation::IsInitialized() const {
  return true;
}

void VehicleFleetOperation::Swap(VehicleFleetOperation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VehicleFleetOperation::InternalSwap(VehicleFleetOperation* other) {
  platoonmember_.InternalSwap(&other->platoonmember_);
  id_.Swap(&other->id_);
  vehicleid_.Swap(&other->vehicleid_);
  signature_.Swap(&other->signature_);
  std::swap(starttime_, other->starttime_);
  std::swap(startnode_, other->startnode_);
  std::swap(endnode_, other->endnode_);
  std::swap(platoonnumber_, other->platoonnumber_);
  std::swap(srcport_, other->srcport_);
  std::swap(dstport_, other->dstport_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string VehicleFleetOperation::GetTypeName() const {
  return "com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VehicleFleetOperation

// string id = 1;
void VehicleFleetOperation::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& VehicleFleetOperation::id() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.id)
  return id_.GetNoArena();
}
void VehicleFleetOperation::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.id)
}
#if LANG_CXX11
void VehicleFleetOperation::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.id)
}
#endif
void VehicleFleetOperation::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.id)
}
void VehicleFleetOperation::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.id)
}
::std::string* VehicleFleetOperation::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VehicleFleetOperation::release_id() {
  // @@protoc_insertion_point(field_release:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VehicleFleetOperation::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.id)
}

// string vehicleId = 2;
void VehicleFleetOperation::clear_vehicleid() {
  vehicleid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& VehicleFleetOperation::vehicleid() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.vehicleId)
  return vehicleid_.GetNoArena();
}
void VehicleFleetOperation::set_vehicleid(const ::std::string& value) {
  
  vehicleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.vehicleId)
}
#if LANG_CXX11
void VehicleFleetOperation::set_vehicleid(::std::string&& value) {
  
  vehicleid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.vehicleId)
}
#endif
void VehicleFleetOperation::set_vehicleid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  vehicleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.vehicleId)
}
void VehicleFleetOperation::set_vehicleid(const char* value, size_t size) {
  
  vehicleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.vehicleId)
}
::std::string* VehicleFleetOperation::mutable_vehicleid() {
  
  // @@protoc_insertion_point(field_mutable:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.vehicleId)
  return vehicleid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VehicleFleetOperation::release_vehicleid() {
  // @@protoc_insertion_point(field_release:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.vehicleId)
  
  return vehicleid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VehicleFleetOperation::set_allocated_vehicleid(::std::string* vehicleid) {
  if (vehicleid != NULL) {
    
  } else {
    
  }
  vehicleid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vehicleid);
  // @@protoc_insertion_point(field_set_allocated:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.vehicleId)
}

// repeated string platoonMember = 3;
int VehicleFleetOperation::platoonmember_size() const {
  return platoonmember_.size();
}
void VehicleFleetOperation::clear_platoonmember() {
  platoonmember_.Clear();
}
const ::std::string& VehicleFleetOperation::platoonmember(int index) const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.platoonMember)
  return platoonmember_.Get(index);
}
::std::string* VehicleFleetOperation::mutable_platoonmember(int index) {
  // @@protoc_insertion_point(field_mutable:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.platoonMember)
  return platoonmember_.Mutable(index);
}
void VehicleFleetOperation::set_platoonmember(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.platoonMember)
  platoonmember_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void VehicleFleetOperation::set_platoonmember(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.platoonMember)
  platoonmember_.Mutable(index)->assign(std::move(value));
}
#endif
void VehicleFleetOperation::set_platoonmember(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  platoonmember_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.platoonMember)
}
void VehicleFleetOperation::set_platoonmember(int index, const char* value, size_t size) {
  platoonmember_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.platoonMember)
}
::std::string* VehicleFleetOperation::add_platoonmember() {
  // @@protoc_insertion_point(field_add_mutable:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.platoonMember)
  return platoonmember_.Add();
}
void VehicleFleetOperation::add_platoonmember(const ::std::string& value) {
  platoonmember_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.platoonMember)
}
#if LANG_CXX11
void VehicleFleetOperation::add_platoonmember(::std::string&& value) {
  platoonmember_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.platoonMember)
}
#endif
void VehicleFleetOperation::add_platoonmember(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  platoonmember_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.platoonMember)
}
void VehicleFleetOperation::add_platoonmember(const char* value, size_t size) {
  platoonmember_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.platoonMember)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
VehicleFleetOperation::platoonmember() const {
  // @@protoc_insertion_point(field_list:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.platoonMember)
  return platoonmember_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
VehicleFleetOperation::mutable_platoonmember() {
  // @@protoc_insertion_point(field_mutable_list:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.platoonMember)
  return &platoonmember_;
}

// int32 platoonNumber = 4;
void VehicleFleetOperation::clear_platoonnumber() {
  platoonnumber_ = 0;
}
::google::protobuf::int32 VehicleFleetOperation::platoonnumber() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.platoonNumber)
  return platoonnumber_;
}
void VehicleFleetOperation::set_platoonnumber(::google::protobuf::int32 value) {
  
  platoonnumber_ = value;
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.platoonNumber)
}

// .google.protobuf.Timestamp startTime = 5;
bool VehicleFleetOperation::has_starttime() const {
  return this != internal_default_instance() && starttime_ != NULL;
}
void VehicleFleetOperation::clear_starttime() {
  if (GetArenaNoVirtual() == NULL && starttime_ != NULL) delete starttime_;
  starttime_ = NULL;
}
const ::google::protobuf::Timestamp& VehicleFleetOperation::starttime() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.startTime)
  return starttime_ != NULL ? *starttime_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* VehicleFleetOperation::mutable_starttime() {
  
  if (starttime_ == NULL) {
    starttime_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.startTime)
  return starttime_;
}
::google::protobuf::Timestamp* VehicleFleetOperation::release_starttime() {
  // @@protoc_insertion_point(field_release:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.startTime)
  
  ::google::protobuf::Timestamp* temp = starttime_;
  starttime_ = NULL;
  return temp;
}
void VehicleFleetOperation::set_allocated_starttime(::google::protobuf::Timestamp* starttime) {
  delete starttime_;
  if (starttime != NULL && starttime->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_starttime = new ::google::protobuf::Timestamp;
    new_starttime->CopyFrom(*starttime);
    starttime = new_starttime;
  }
  starttime_ = starttime;
  if (starttime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.startTime)
}

// .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node startNode = 6;
bool VehicleFleetOperation::has_startnode() const {
  return this != internal_default_instance() && startnode_ != NULL;
}
void VehicleFleetOperation::clear_startnode() {
  if (GetArenaNoVirtual() == NULL && startnode_ != NULL) delete startnode_;
  startnode_ = NULL;
}
const ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node& VehicleFleetOperation::startnode() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.startNode)
  return startnode_ != NULL ? *startnode_
                         : *::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node::internal_default_instance();
}
::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node* VehicleFleetOperation::mutable_startnode() {
  
  if (startnode_ == NULL) {
    startnode_ = new ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node;
  }
  // @@protoc_insertion_point(field_mutable:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.startNode)
  return startnode_;
}
::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node* VehicleFleetOperation::release_startnode() {
  // @@protoc_insertion_point(field_release:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.startNode)
  
  ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node* temp = startnode_;
  startnode_ = NULL;
  return temp;
}
void VehicleFleetOperation::set_allocated_startnode(::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node* startnode) {
  delete startnode_;
  startnode_ = startnode;
  if (startnode) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.startNode)
}

// .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.Fleet_node endNode = 7;
bool VehicleFleetOperation::has_endnode() const {
  return this != internal_default_instance() && endnode_ != NULL;
}
void VehicleFleetOperation::clear_endnode() {
  if (GetArenaNoVirtual() == NULL && endnode_ != NULL) delete endnode_;
  endnode_ = NULL;
}
const ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node& VehicleFleetOperation::endnode() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.endNode)
  return endnode_ != NULL ? *endnode_
                         : *::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node::internal_default_instance();
}
::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node* VehicleFleetOperation::mutable_endnode() {
  
  if (endnode_ == NULL) {
    endnode_ = new ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node;
  }
  // @@protoc_insertion_point(field_mutable:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.endNode)
  return endnode_;
}
::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node* VehicleFleetOperation::release_endnode() {
  // @@protoc_insertion_point(field_release:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.endNode)
  
  ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node* temp = endnode_;
  endnode_ = NULL;
  return temp;
}
void VehicleFleetOperation::set_allocated_endnode(::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetOperation_Fleet_node* endnode) {
  delete endnode_;
  endnode_ = endnode;
  if (endnode) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.endNode)
}

// .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.Port_Id srcPort = 8;
void VehicleFleetOperation::clear_srcport() {
  srcport_ = 0;
}
::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::Port_Id VehicleFleetOperation::srcport() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.srcPort)
  return static_cast< ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::Port_Id >(srcport_);
}
void VehicleFleetOperation::set_srcport(::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::Port_Id value) {
  
  srcport_ = value;
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.srcPort)
}

// .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.Port_Id dstPort = 9;
void VehicleFleetOperation::clear_dstport() {
  dstport_ = 0;
}
::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::Port_Id VehicleFleetOperation::dstport() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.dstPort)
  return static_cast< ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::Port_Id >(dstport_);
}
void VehicleFleetOperation::set_dstport(::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::Port_Id value) {
  
  dstport_ = value;
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.dstPort)
}

// string signature = 10;
void VehicleFleetOperation::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& VehicleFleetOperation::signature() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.signature)
  return signature_.GetNoArena();
}
void VehicleFleetOperation::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.signature)
}
#if LANG_CXX11
void VehicleFleetOperation::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.signature)
}
#endif
void VehicleFleetOperation::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.signature)
}
void VehicleFleetOperation::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.signature)
}
::std::string* VehicleFleetOperation::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VehicleFleetOperation::release_signature() {
  // @@protoc_insertion_point(field_release:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VehicleFleetOperation::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetOperation.signature)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VehicleFleetResult::kIdFieldNumber;
const int VehicleFleetResult::kVehicleIdFieldNumber;
const int VehicleFleetResult::kPlatoonNumberFieldNumber;
const int VehicleFleetResult::kApplyInfoFieldNumber;
const int VehicleFleetResult::kApplyResultFieldNumber;
const int VehicleFleetResult::kSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VehicleFleetResult::VehicleFleetResult()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_VehicleFleetProto_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult)
}
VehicleFleetResult::VehicleFleetResult(const VehicleFleetResult& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  vehicleid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vehicleid().size() > 0) {
    vehicleid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vehicleid_);
  }
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signature().size() > 0) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  ::memcpy(&platoonnumber_, &from.platoonnumber_,
    reinterpret_cast<char*>(&applyresult_) -
    reinterpret_cast<char*>(&platoonnumber_) + sizeof(applyresult_));
  // @@protoc_insertion_point(copy_constructor:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult)
}

void VehicleFleetResult::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vehicleid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&platoonnumber_, 0, reinterpret_cast<char*>(&applyresult_) -
    reinterpret_cast<char*>(&platoonnumber_) + sizeof(applyresult_));
  _cached_size_ = 0;
}

VehicleFleetResult::~VehicleFleetResult() {
  // @@protoc_insertion_point(destructor:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult)
  SharedDtor();
}

void VehicleFleetResult::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vehicleid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VehicleFleetResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const VehicleFleetResult& VehicleFleetResult::default_instance() {
  protobuf_VehicleFleetProto_2eproto::InitDefaults();
  return *internal_default_instance();
}

VehicleFleetResult* VehicleFleetResult::New(::google::protobuf::Arena* arena) const {
  VehicleFleetResult* n = new VehicleFleetResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VehicleFleetResult::Clear() {
// @@protoc_insertion_point(message_clear_start:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vehicleid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&platoonnumber_, 0, reinterpret_cast<char*>(&applyresult_) -
    reinterpret_cast<char*>(&platoonnumber_) + sizeof(applyresult_));
}

bool VehicleFleetResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string vehicleId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vehicleid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vehicleid().data(), this->vehicleid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.vehicleId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 platoonNumber = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &platoonnumber_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.FleetApplyType applyInfo = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_applyinfo(static_cast< ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::FleetApplyType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool applyResult = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &applyresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string signature = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signature()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->signature().data(), this->signature().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.signature"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult)
  return false;
#undef DO_
}

void VehicleFleetResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string vehicleId = 2;
  if (this->vehicleid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vehicleid().data(), this->vehicleid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.vehicleId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->vehicleid(), output);
  }

  // int32 platoonNumber = 4;
  if (this->platoonnumber() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->platoonnumber(), output);
  }

  // .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.FleetApplyType applyInfo = 5;
  if (this->applyinfo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->applyinfo(), output);
  }

  // bool applyResult = 7;
  if (this->applyresult() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->applyresult(), output);
  }

  // string signature = 10;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), this->signature().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->signature(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult)
}

size_t VehicleFleetResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult)
  size_t total_size = 0;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string vehicleId = 2;
  if (this->vehicleid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vehicleid());
  }

  // string signature = 10;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->signature());
  }

  // int32 platoonNumber = 4;
  if (this->platoonnumber() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->platoonnumber());
  }

  // .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.FleetApplyType applyInfo = 5;
  if (this->applyinfo() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->applyinfo());
  }

  // bool applyResult = 7;
  if (this->applyresult() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VehicleFleetResult::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const VehicleFleetResult*>(&from));
}

void VehicleFleetResult::MergeFrom(const VehicleFleetResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.vehicleid().size() > 0) {

    vehicleid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vehicleid_);
  }
  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  if (from.platoonnumber() != 0) {
    set_platoonnumber(from.platoonnumber());
  }
  if (from.applyinfo() != 0) {
    set_applyinfo(from.applyinfo());
  }
  if (from.applyresult() != 0) {
    set_applyresult(from.applyresult());
  }
}

void VehicleFleetResult::CopyFrom(const VehicleFleetResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleFleetResult::IsInitialized() const {
  return true;
}

void VehicleFleetResult::Swap(VehicleFleetResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VehicleFleetResult::InternalSwap(VehicleFleetResult* other) {
  id_.Swap(&other->id_);
  vehicleid_.Swap(&other->vehicleid_);
  signature_.Swap(&other->signature_);
  std::swap(platoonnumber_, other->platoonnumber_);
  std::swap(applyinfo_, other->applyinfo_);
  std::swap(applyresult_, other->applyresult_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string VehicleFleetResult::GetTypeName() const {
  return "com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VehicleFleetResult

// string id = 1;
void VehicleFleetResult::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& VehicleFleetResult::id() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.id)
  return id_.GetNoArena();
}
void VehicleFleetResult::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.id)
}
#if LANG_CXX11
void VehicleFleetResult::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.id)
}
#endif
void VehicleFleetResult::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.id)
}
void VehicleFleetResult::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.id)
}
::std::string* VehicleFleetResult::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VehicleFleetResult::release_id() {
  // @@protoc_insertion_point(field_release:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VehicleFleetResult::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.id)
}

// string vehicleId = 2;
void VehicleFleetResult::clear_vehicleid() {
  vehicleid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& VehicleFleetResult::vehicleid() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.vehicleId)
  return vehicleid_.GetNoArena();
}
void VehicleFleetResult::set_vehicleid(const ::std::string& value) {
  
  vehicleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.vehicleId)
}
#if LANG_CXX11
void VehicleFleetResult::set_vehicleid(::std::string&& value) {
  
  vehicleid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.vehicleId)
}
#endif
void VehicleFleetResult::set_vehicleid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  vehicleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.vehicleId)
}
void VehicleFleetResult::set_vehicleid(const char* value, size_t size) {
  
  vehicleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.vehicleId)
}
::std::string* VehicleFleetResult::mutable_vehicleid() {
  
  // @@protoc_insertion_point(field_mutable:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.vehicleId)
  return vehicleid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VehicleFleetResult::release_vehicleid() {
  // @@protoc_insertion_point(field_release:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.vehicleId)
  
  return vehicleid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VehicleFleetResult::set_allocated_vehicleid(::std::string* vehicleid) {
  if (vehicleid != NULL) {
    
  } else {
    
  }
  vehicleid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vehicleid);
  // @@protoc_insertion_point(field_set_allocated:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.vehicleId)
}

// int32 platoonNumber = 4;
void VehicleFleetResult::clear_platoonnumber() {
  platoonnumber_ = 0;
}
::google::protobuf::int32 VehicleFleetResult::platoonnumber() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.platoonNumber)
  return platoonnumber_;
}
void VehicleFleetResult::set_platoonnumber(::google::protobuf::int32 value) {
  
  platoonnumber_ = value;
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.platoonNumber)
}

// .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.FleetApplyType applyInfo = 5;
void VehicleFleetResult::clear_applyinfo() {
  applyinfo_ = 0;
}
::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::FleetApplyType VehicleFleetResult::applyinfo() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.applyInfo)
  return static_cast< ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::FleetApplyType >(applyinfo_);
}
void VehicleFleetResult::set_applyinfo(::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::FleetApplyType value) {
  
  applyinfo_ = value;
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.applyInfo)
}

// bool applyResult = 7;
void VehicleFleetResult::clear_applyresult() {
  applyresult_ = false;
}
bool VehicleFleetResult::applyresult() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.applyResult)
  return applyresult_;
}
void VehicleFleetResult::set_applyresult(bool value) {
  
  applyresult_ = value;
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.applyResult)
}

// string signature = 10;
void VehicleFleetResult::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& VehicleFleetResult::signature() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.signature)
  return signature_.GetNoArena();
}
void VehicleFleetResult::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.signature)
}
#if LANG_CXX11
void VehicleFleetResult::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.signature)
}
#endif
void VehicleFleetResult::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.signature)
}
void VehicleFleetResult::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.signature)
}
::std::string* VehicleFleetResult::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VehicleFleetResult::release_signature() {
  // @@protoc_insertion_point(field_release:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VehicleFleetResult::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetResult.signature)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VehicleFleetInfo::kApplyInfoFieldNumber;
const int VehicleFleetInfo::kActualDriveModeFieldNumber;
const int VehicleFleetInfo::kPlatoonNumberFieldNumber;
const int VehicleFleetInfo::kVehicleSquenceFieldNumber;
const int VehicleFleetInfo::kVehicleIdFieldNumber;
const int VehicleFleetInfo::kFmsMessageIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VehicleFleetInfo::VehicleFleetInfo()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_VehicleFleetProto_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo)
}
VehicleFleetInfo::VehicleFleetInfo(const VehicleFleetInfo& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vehicleid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vehicleid().size() > 0) {
    vehicleid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vehicleid_);
  }
  fmsmessageid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fmsmessageid().size() > 0) {
    fmsmessageid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fmsmessageid_);
  }
  ::memcpy(&applyinfo_, &from.applyinfo_,
    reinterpret_cast<char*>(&vehiclesquence_) -
    reinterpret_cast<char*>(&applyinfo_) + sizeof(vehiclesquence_));
  // @@protoc_insertion_point(copy_constructor:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo)
}

void VehicleFleetInfo::SharedCtor() {
  vehicleid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fmsmessageid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&applyinfo_, 0, reinterpret_cast<char*>(&vehiclesquence_) -
    reinterpret_cast<char*>(&applyinfo_) + sizeof(vehiclesquence_));
  _cached_size_ = 0;
}

VehicleFleetInfo::~VehicleFleetInfo() {
  // @@protoc_insertion_point(destructor:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo)
  SharedDtor();
}

void VehicleFleetInfo::SharedDtor() {
  vehicleid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fmsmessageid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VehicleFleetInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const VehicleFleetInfo& VehicleFleetInfo::default_instance() {
  protobuf_VehicleFleetProto_2eproto::InitDefaults();
  return *internal_default_instance();
}

VehicleFleetInfo* VehicleFleetInfo::New(::google::protobuf::Arena* arena) const {
  VehicleFleetInfo* n = new VehicleFleetInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VehicleFleetInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo)
  vehicleid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fmsmessageid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&applyinfo_, 0, reinterpret_cast<char*>(&vehiclesquence_) -
    reinterpret_cast<char*>(&applyinfo_) + sizeof(vehiclesquence_));
}

bool VehicleFleetInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.FleetApplyType applyInfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_applyinfo(static_cast< ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::FleetApplyType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetMode actualDriveMode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_actualdrivemode(static_cast< ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 platoonNumber = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &platoonnumber_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 vehicleSquence = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vehiclesquence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string vehicleId = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vehicleid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vehicleid().data(), this->vehicleid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.vehicleId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string fmsMessageId = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fmsmessageid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fmsmessageid().data(), this->fmsmessageid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.fmsMessageId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo)
  return false;
#undef DO_
}

void VehicleFleetInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.FleetApplyType applyInfo = 1;
  if (this->applyinfo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->applyinfo(), output);
  }

  // .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetMode actualDriveMode = 2;
  if (this->actualdrivemode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->actualdrivemode(), output);
  }

  // int32 platoonNumber = 3;
  if (this->platoonnumber() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->platoonnumber(), output);
  }

  // int32 vehicleSquence = 4;
  if (this->vehiclesquence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->vehiclesquence(), output);
  }

  // string vehicleId = 5;
  if (this->vehicleid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vehicleid().data(), this->vehicleid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.vehicleId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->vehicleid(), output);
  }

  // string fmsMessageId = 6;
  if (this->fmsmessageid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fmsmessageid().data(), this->fmsmessageid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.fmsMessageId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->fmsmessageid(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo)
}

size_t VehicleFleetInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo)
  size_t total_size = 0;

  // string vehicleId = 5;
  if (this->vehicleid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vehicleid());
  }

  // string fmsMessageId = 6;
  if (this->fmsmessageid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fmsmessageid());
  }

  // .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.FleetApplyType applyInfo = 1;
  if (this->applyinfo() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->applyinfo());
  }

  // .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetMode actualDriveMode = 2;
  if (this->actualdrivemode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->actualdrivemode());
  }

  // int32 platoonNumber = 3;
  if (this->platoonnumber() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->platoonnumber());
  }

  // int32 vehicleSquence = 4;
  if (this->vehiclesquence() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vehiclesquence());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VehicleFleetInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const VehicleFleetInfo*>(&from));
}

void VehicleFleetInfo::MergeFrom(const VehicleFleetInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.vehicleid().size() > 0) {

    vehicleid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vehicleid_);
  }
  if (from.fmsmessageid().size() > 0) {

    fmsmessageid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fmsmessageid_);
  }
  if (from.applyinfo() != 0) {
    set_applyinfo(from.applyinfo());
  }
  if (from.actualdrivemode() != 0) {
    set_actualdrivemode(from.actualdrivemode());
  }
  if (from.platoonnumber() != 0) {
    set_platoonnumber(from.platoonnumber());
  }
  if (from.vehiclesquence() != 0) {
    set_vehiclesquence(from.vehiclesquence());
  }
}

void VehicleFleetInfo::CopyFrom(const VehicleFleetInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleFleetInfo::IsInitialized() const {
  return true;
}

void VehicleFleetInfo::Swap(VehicleFleetInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VehicleFleetInfo::InternalSwap(VehicleFleetInfo* other) {
  vehicleid_.Swap(&other->vehicleid_);
  fmsmessageid_.Swap(&other->fmsmessageid_);
  std::swap(applyinfo_, other->applyinfo_);
  std::swap(actualdrivemode_, other->actualdrivemode_);
  std::swap(platoonnumber_, other->platoonnumber_);
  std::swap(vehiclesquence_, other->vehiclesquence_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string VehicleFleetInfo::GetTypeName() const {
  return "com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VehicleFleetInfo

// .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.FleetApplyType applyInfo = 1;
void VehicleFleetInfo::clear_applyinfo() {
  applyinfo_ = 0;
}
::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::FleetApplyType VehicleFleetInfo::applyinfo() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.applyInfo)
  return static_cast< ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::FleetApplyType >(applyinfo_);
}
void VehicleFleetInfo::set_applyinfo(::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::FleetApplyType value) {
  
  applyinfo_ = value;
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.applyInfo)
}

// .com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetMode actualDriveMode = 2;
void VehicleFleetInfo::clear_actualdrivemode() {
  actualdrivemode_ = 0;
}
::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetMode VehicleFleetInfo::actualdrivemode() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.actualDriveMode)
  return static_cast< ::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetMode >(actualdrivemode_);
}
void VehicleFleetInfo::set_actualdrivemode(::com::fmscloud::servicemessage::device::vehicle::protobuf::protobufmodel::VehicleFleetMode value) {
  
  actualdrivemode_ = value;
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.actualDriveMode)
}

// int32 platoonNumber = 3;
void VehicleFleetInfo::clear_platoonnumber() {
  platoonnumber_ = 0;
}
::google::protobuf::int32 VehicleFleetInfo::platoonnumber() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.platoonNumber)
  return platoonnumber_;
}
void VehicleFleetInfo::set_platoonnumber(::google::protobuf::int32 value) {
  
  platoonnumber_ = value;
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.platoonNumber)
}

// int32 vehicleSquence = 4;
void VehicleFleetInfo::clear_vehiclesquence() {
  vehiclesquence_ = 0;
}
::google::protobuf::int32 VehicleFleetInfo::vehiclesquence() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.vehicleSquence)
  return vehiclesquence_;
}
void VehicleFleetInfo::set_vehiclesquence(::google::protobuf::int32 value) {
  
  vehiclesquence_ = value;
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.vehicleSquence)
}

// string vehicleId = 5;
void VehicleFleetInfo::clear_vehicleid() {
  vehicleid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& VehicleFleetInfo::vehicleid() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.vehicleId)
  return vehicleid_.GetNoArena();
}
void VehicleFleetInfo::set_vehicleid(const ::std::string& value) {
  
  vehicleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.vehicleId)
}
#if LANG_CXX11
void VehicleFleetInfo::set_vehicleid(::std::string&& value) {
  
  vehicleid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.vehicleId)
}
#endif
void VehicleFleetInfo::set_vehicleid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  vehicleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.vehicleId)
}
void VehicleFleetInfo::set_vehicleid(const char* value, size_t size) {
  
  vehicleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.vehicleId)
}
::std::string* VehicleFleetInfo::mutable_vehicleid() {
  
  // @@protoc_insertion_point(field_mutable:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.vehicleId)
  return vehicleid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VehicleFleetInfo::release_vehicleid() {
  // @@protoc_insertion_point(field_release:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.vehicleId)
  
  return vehicleid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VehicleFleetInfo::set_allocated_vehicleid(::std::string* vehicleid) {
  if (vehicleid != NULL) {
    
  } else {
    
  }
  vehicleid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vehicleid);
  // @@protoc_insertion_point(field_set_allocated:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.vehicleId)
}

// string fmsMessageId = 6;
void VehicleFleetInfo::clear_fmsmessageid() {
  fmsmessageid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& VehicleFleetInfo::fmsmessageid() const {
  // @@protoc_insertion_point(field_get:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.fmsMessageId)
  return fmsmessageid_.GetNoArena();
}
void VehicleFleetInfo::set_fmsmessageid(const ::std::string& value) {
  
  fmsmessageid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.fmsMessageId)
}
#if LANG_CXX11
void VehicleFleetInfo::set_fmsmessageid(::std::string&& value) {
  
  fmsmessageid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.fmsMessageId)
}
#endif
void VehicleFleetInfo::set_fmsmessageid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  fmsmessageid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.fmsMessageId)
}
void VehicleFleetInfo::set_fmsmessageid(const char* value, size_t size) {
  
  fmsmessageid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.fmsMessageId)
}
::std::string* VehicleFleetInfo::mutable_fmsmessageid() {
  
  // @@protoc_insertion_point(field_mutable:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.fmsMessageId)
  return fmsmessageid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VehicleFleetInfo::release_fmsmessageid() {
  // @@protoc_insertion_point(field_release:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.fmsMessageId)
  
  return fmsmessageid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VehicleFleetInfo::set_allocated_fmsmessageid(::std::string* fmsmessageid) {
  if (fmsmessageid != NULL) {
    
  } else {
    
  }
  fmsmessageid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fmsmessageid);
  // @@protoc_insertion_point(field_set_allocated:com.fmscloud.servicemessage.device.vehicle.protobuf.protobufmodel.VehicleFleetInfo.fmsMessageId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protobufmodel
}  // namespace protobuf
}  // namespace vehicle
}  // namespace device
}  // namespace servicemessage
}  // namespace fmscloud
}  // namespace com

// @@protoc_insertion_point(global_scope)
