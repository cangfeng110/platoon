// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/ipc/message/protobuf/common/reserved.proto

#ifndef PROTOBUF_modules_2fipc_2fmessage_2fprotobuf_2fcommon_2freserved_2eproto__INCLUDED
#define PROTOBUF_modules_2fipc_2fmessage_2fprotobuf_2fcommon_2freserved_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
namespace atd {
namespace common {
class Reserved;
class ReservedDefaultTypeInternal;
extern ReservedDefaultTypeInternal _Reserved_default_instance_;
}  // namespace common
}  // namespace atd

namespace atd {
namespace common {

namespace protobuf_modules_2fipc_2fmessage_2fprotobuf_2fcommon_2freserved_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_modules_2fipc_2fmessage_2fprotobuf_2fcommon_2freserved_2eproto

// ===================================================================

class Reserved : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:atd.common.Reserved) */ {
 public:
  Reserved();
  virtual ~Reserved();

  Reserved(const Reserved& from);

  inline Reserved& operator=(const Reserved& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const Reserved& default_instance();

  static inline const Reserved* internal_default_instance() {
    return reinterpret_cast<const Reserved*>(
               &_Reserved_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Reserved* other);

  // implements Message ----------------------------------------------

  inline Reserved* New() const PROTOBUF_FINAL { return New(NULL); }

  Reserved* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const Reserved& from);
  void MergeFrom(const Reserved& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Reserved* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string reserved_msg = 1;
  bool has_reserved_msg() const;
  void clear_reserved_msg();
  static const int kReservedMsgFieldNumber = 1;
  const ::std::string& reserved_msg() const;
  void set_reserved_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved_msg(::std::string&& value);
  #endif
  void set_reserved_msg(const char* value);
  void set_reserved_msg(const char* value, size_t size);
  ::std::string* mutable_reserved_msg();
  ::std::string* release_reserved_msg();
  void set_allocated_reserved_msg(::std::string* reserved_msg);

  // optional string reserved_bit = 2;
  bool has_reserved_bit() const;
  void clear_reserved_bit();
  static const int kReservedBitFieldNumber = 2;
  const ::std::string& reserved_bit() const;
  void set_reserved_bit(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved_bit(::std::string&& value);
  #endif
  void set_reserved_bit(const char* value);
  void set_reserved_bit(const char* value, size_t size);
  ::std::string* mutable_reserved_bit();
  ::std::string* release_reserved_bit();
  void set_allocated_reserved_bit(::std::string* reserved_bit);

  // @@protoc_insertion_point(class_scope:atd.common.Reserved)
 private:
  void set_has_reserved_msg();
  void clear_has_reserved_msg();
  void set_has_reserved_bit();
  void clear_has_reserved_bit();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr reserved_msg_;
  ::google::protobuf::internal::ArenaStringPtr reserved_bit_;
  friend struct protobuf_modules_2fipc_2fmessage_2fprotobuf_2fcommon_2freserved_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Reserved

// optional string reserved_msg = 1;
inline bool Reserved::has_reserved_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Reserved::set_has_reserved_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Reserved::clear_has_reserved_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Reserved::clear_reserved_msg() {
  reserved_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_reserved_msg();
}
inline const ::std::string& Reserved::reserved_msg() const {
  // @@protoc_insertion_point(field_get:atd.common.Reserved.reserved_msg)
  return reserved_msg_.GetNoArena();
}
inline void Reserved::set_reserved_msg(const ::std::string& value) {
  set_has_reserved_msg();
  reserved_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:atd.common.Reserved.reserved_msg)
}
#if LANG_CXX11
inline void Reserved::set_reserved_msg(::std::string&& value) {
  set_has_reserved_msg();
  reserved_msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:atd.common.Reserved.reserved_msg)
}
#endif
inline void Reserved::set_reserved_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_reserved_msg();
  reserved_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:atd.common.Reserved.reserved_msg)
}
inline void Reserved::set_reserved_msg(const char* value, size_t size) {
  set_has_reserved_msg();
  reserved_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:atd.common.Reserved.reserved_msg)
}
inline ::std::string* Reserved::mutable_reserved_msg() {
  set_has_reserved_msg();
  // @@protoc_insertion_point(field_mutable:atd.common.Reserved.reserved_msg)
  return reserved_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Reserved::release_reserved_msg() {
  // @@protoc_insertion_point(field_release:atd.common.Reserved.reserved_msg)
  clear_has_reserved_msg();
  return reserved_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Reserved::set_allocated_reserved_msg(::std::string* reserved_msg) {
  if (reserved_msg != NULL) {
    set_has_reserved_msg();
  } else {
    clear_has_reserved_msg();
  }
  reserved_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved_msg);
  // @@protoc_insertion_point(field_set_allocated:atd.common.Reserved.reserved_msg)
}

// optional string reserved_bit = 2;
inline bool Reserved::has_reserved_bit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Reserved::set_has_reserved_bit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Reserved::clear_has_reserved_bit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Reserved::clear_reserved_bit() {
  reserved_bit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_reserved_bit();
}
inline const ::std::string& Reserved::reserved_bit() const {
  // @@protoc_insertion_point(field_get:atd.common.Reserved.reserved_bit)
  return reserved_bit_.GetNoArena();
}
inline void Reserved::set_reserved_bit(const ::std::string& value) {
  set_has_reserved_bit();
  reserved_bit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:atd.common.Reserved.reserved_bit)
}
#if LANG_CXX11
inline void Reserved::set_reserved_bit(::std::string&& value) {
  set_has_reserved_bit();
  reserved_bit_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:atd.common.Reserved.reserved_bit)
}
#endif
inline void Reserved::set_reserved_bit(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_reserved_bit();
  reserved_bit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:atd.common.Reserved.reserved_bit)
}
inline void Reserved::set_reserved_bit(const char* value, size_t size) {
  set_has_reserved_bit();
  reserved_bit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:atd.common.Reserved.reserved_bit)
}
inline ::std::string* Reserved::mutable_reserved_bit() {
  set_has_reserved_bit();
  // @@protoc_insertion_point(field_mutable:atd.common.Reserved.reserved_bit)
  return reserved_bit_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Reserved::release_reserved_bit() {
  // @@protoc_insertion_point(field_release:atd.common.Reserved.reserved_bit)
  clear_has_reserved_bit();
  return reserved_bit_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Reserved::set_allocated_reserved_bit(::std::string* reserved_bit) {
  if (reserved_bit != NULL) {
    set_has_reserved_bit();
  } else {
    clear_has_reserved_bit();
  }
  reserved_bit_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved_bit);
  // @@protoc_insertion_point(field_set_allocated:atd.common.Reserved.reserved_bit)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace common
}  // namespace atd

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_modules_2fipc_2fmessage_2fprotobuf_2fcommon_2freserved_2eproto__INCLUDED
