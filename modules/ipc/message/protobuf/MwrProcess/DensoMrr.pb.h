// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/ipc/message/protobuf/MwrProcess/DensoMrr.proto

#ifndef PROTOBUF_modules_2fipc_2fmessage_2fprotobuf_2fMwrProcess_2fDensoMrr_2eproto__INCLUDED
#define PROTOBUF_modules_2fipc_2fmessage_2fprotobuf_2fMwrProcess_2fDensoMrr_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
#include "modules/ipc/message/protobuf/common/header.pb.h"
#include "modules/ipc/message/protobuf/common/reserved.pb.h"
#include "modules/ipc/message/protobuf/localization/pose.pb.h"
// @@protoc_insertion_point(includes)
namespace atd {
namespace common {
class Header;
class HeaderDefaultTypeInternal;
extern HeaderDefaultTypeInternal _Header_default_instance_;
class Reserved;
class ReservedDefaultTypeInternal;
extern ReservedDefaultTypeInternal _Reserved_default_instance_;
}  // namespace common
namespace localization {
class Pose;
class PoseDefaultTypeInternal;
extern PoseDefaultTypeInternal _Pose_default_instance_;
}  // namespace localization
namespace mwrprocess {
class Dt_Rrecord_MRRP0Obj;
class Dt_Rrecord_MRRP0ObjDefaultTypeInternal;
extern Dt_Rrecord_MRRP0ObjDefaultTypeInternal _Dt_Rrecord_MRRP0Obj_default_instance_;
class Dt_Rrecord_MRRP1Obj;
class Dt_Rrecord_MRRP1ObjDefaultTypeInternal;
extern Dt_Rrecord_MRRP1ObjDefaultTypeInternal _Dt_Rrecord_MRRP1Obj_default_instance_;
class Dt_Rrecord_MRRP2Obj;
class Dt_Rrecord_MRRP2ObjDefaultTypeInternal;
extern Dt_Rrecord_MRRP2ObjDefaultTypeInternal _Dt_Rrecord_MRRP2Obj_default_instance_;
class Dt_Rrecord_MRRP3Obj;
class Dt_Rrecord_MRRP3ObjDefaultTypeInternal;
extern Dt_Rrecord_MRRP3ObjDefaultTypeInternal _Dt_Rrecord_MRRP3Obj_default_instance_;
class FrontDensoMRRObjs;
class FrontDensoMRRObjsDefaultTypeInternal;
extern FrontDensoMRRObjsDefaultTypeInternal _FrontDensoMRRObjs_default_instance_;
class LongRangeObj;
class LongRangeObjDefaultTypeInternal;
extern LongRangeObjDefaultTypeInternal _LongRangeObj_default_instance_;
class MidRangeObj;
class MidRangeObjDefaultTypeInternal;
extern MidRangeObjDefaultTypeInternal _MidRangeObj_default_instance_;
}  // namespace mwrprocess
}  // namespace atd

namespace atd {
namespace mwrprocess {

namespace protobuf_modules_2fipc_2fmessage_2fprotobuf_2fMwrProcess_2fDensoMrr_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_modules_2fipc_2fmessage_2fprotobuf_2fMwrProcess_2fDensoMrr_2eproto

enum Dt_Rrecord_MRRP0Obj_Status_FLag_1 {
  Dt_Rrecord_MRRP0Obj_Status_FLag_1_null = 0,
  Dt_Rrecord_MRRP0Obj_Status_FLag_1_TemporaryFlat = 2,
  Dt_Rrecord_MRRP0Obj_Status_FLag_1_TrackingTargetIsMoving = 4,
  Dt_Rrecord_MRRP0Obj_Status_FLag_1_TrackingTargetIsMovable = 8,
  Dt_Rrecord_MRRP0Obj_Status_FLag_1_TargetIsNew = 16
};
bool Dt_Rrecord_MRRP0Obj_Status_FLag_1_IsValid(int value);
const Dt_Rrecord_MRRP0Obj_Status_FLag_1 Dt_Rrecord_MRRP0Obj_Status_FLag_1_Status_FLag_1_MIN = Dt_Rrecord_MRRP0Obj_Status_FLag_1_null;
const Dt_Rrecord_MRRP0Obj_Status_FLag_1 Dt_Rrecord_MRRP0Obj_Status_FLag_1_Status_FLag_1_MAX = Dt_Rrecord_MRRP0Obj_Status_FLag_1_TargetIsNew;
const int Dt_Rrecord_MRRP0Obj_Status_FLag_1_Status_FLag_1_ARRAYSIZE = Dt_Rrecord_MRRP0Obj_Status_FLag_1_Status_FLag_1_MAX + 1;

enum Dt_Rrecord_MRRP0Obj_Status_FLag_2 {
  Dt_Rrecord_MRRP0Obj_Status_FLag_2_NormalThresholdflat = 1,
  Dt_Rrecord_MRRP0Obj_Status_FLag_2_TargetIsExtrapolated = 8
};
bool Dt_Rrecord_MRRP0Obj_Status_FLag_2_IsValid(int value);
const Dt_Rrecord_MRRP0Obj_Status_FLag_2 Dt_Rrecord_MRRP0Obj_Status_FLag_2_Status_FLag_2_MIN = Dt_Rrecord_MRRP0Obj_Status_FLag_2_NormalThresholdflat;
const Dt_Rrecord_MRRP0Obj_Status_FLag_2 Dt_Rrecord_MRRP0Obj_Status_FLag_2_Status_FLag_2_MAX = Dt_Rrecord_MRRP0Obj_Status_FLag_2_TargetIsExtrapolated;
const int Dt_Rrecord_MRRP0Obj_Status_FLag_2_Status_FLag_2_ARRAYSIZE = Dt_Rrecord_MRRP0Obj_Status_FLag_2_Status_FLag_2_MAX + 1;

enum Dt_Rrecord_MRRP1Obj_Status_Flag_5 {
  Dt_Rrecord_MRRP1Obj_Status_Flag_5_Low_threshold_flag = 1
};
bool Dt_Rrecord_MRRP1Obj_Status_Flag_5_IsValid(int value);
const Dt_Rrecord_MRRP1Obj_Status_Flag_5 Dt_Rrecord_MRRP1Obj_Status_Flag_5_Status_Flag_5_MIN = Dt_Rrecord_MRRP1Obj_Status_Flag_5_Low_threshold_flag;
const Dt_Rrecord_MRRP1Obj_Status_Flag_5 Dt_Rrecord_MRRP1Obj_Status_Flag_5_Status_Flag_5_MAX = Dt_Rrecord_MRRP1Obj_Status_Flag_5_Low_threshold_flag;
const int Dt_Rrecord_MRRP1Obj_Status_Flag_5_Status_Flag_5_ARRAYSIZE = Dt_Rrecord_MRRP1Obj_Status_Flag_5_Status_Flag_5_MAX + 1;

enum Dt_Rrecord_MRRP3Obj_Status_Flag_3 {
  Dt_Rrecord_MRRP3Obj_Status_Flag_3_lowThreshExtrapolation = 2,
  Dt_Rrecord_MRRP3Obj_Status_Flag_3_lowThreshholdFlag = 4,
  Dt_Rrecord_MRRP3Obj_Status_Flag_3_SignboardFlag = 64,
  Dt_Rrecord_MRRP3Obj_Status_Flag_3_ManholeFlag = 128
};
bool Dt_Rrecord_MRRP3Obj_Status_Flag_3_IsValid(int value);
const Dt_Rrecord_MRRP3Obj_Status_Flag_3 Dt_Rrecord_MRRP3Obj_Status_Flag_3_Status_Flag_3_MIN = Dt_Rrecord_MRRP3Obj_Status_Flag_3_lowThreshExtrapolation;
const Dt_Rrecord_MRRP3Obj_Status_Flag_3 Dt_Rrecord_MRRP3Obj_Status_Flag_3_Status_Flag_3_MAX = Dt_Rrecord_MRRP3Obj_Status_Flag_3_ManholeFlag;
const int Dt_Rrecord_MRRP3Obj_Status_Flag_3_Status_Flag_3_ARRAYSIZE = Dt_Rrecord_MRRP3Obj_Status_Flag_3_Status_Flag_3_MAX + 1;

enum Dt_Rrecord_MRRP3Obj_Radar_Fusion {
  Dt_Rrecord_MRRP3Obj_Radar_Fusion_There_is_no_Obj = 0,
  Dt_Rrecord_MRRP3Obj_Radar_Fusion_Long_MidFusion = 1,
  Dt_Rrecord_MRRP3Obj_Radar_Fusion_Long = 2,
  Dt_Rrecord_MRRP3Obj_Radar_Fusion_Mid = 3
};
bool Dt_Rrecord_MRRP3Obj_Radar_Fusion_IsValid(int value);
const Dt_Rrecord_MRRP3Obj_Radar_Fusion Dt_Rrecord_MRRP3Obj_Radar_Fusion_Radar_Fusion_MIN = Dt_Rrecord_MRRP3Obj_Radar_Fusion_There_is_no_Obj;
const Dt_Rrecord_MRRP3Obj_Radar_Fusion Dt_Rrecord_MRRP3Obj_Radar_Fusion_Radar_Fusion_MAX = Dt_Rrecord_MRRP3Obj_Radar_Fusion_Mid;
const int Dt_Rrecord_MRRP3Obj_Radar_Fusion_Radar_Fusion_ARRAYSIZE = Dt_Rrecord_MRRP3Obj_Radar_Fusion_Radar_Fusion_MAX + 1;

// ===================================================================

class Dt_Rrecord_MRRP0Obj : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:atd.mwrprocess.Dt_Rrecord_MRRP0Obj) */ {
 public:
  Dt_Rrecord_MRRP0Obj();
  virtual ~Dt_Rrecord_MRRP0Obj();

  Dt_Rrecord_MRRP0Obj(const Dt_Rrecord_MRRP0Obj& from);

  inline Dt_Rrecord_MRRP0Obj& operator=(const Dt_Rrecord_MRRP0Obj& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const Dt_Rrecord_MRRP0Obj& default_instance();

  static inline const Dt_Rrecord_MRRP0Obj* internal_default_instance() {
    return reinterpret_cast<const Dt_Rrecord_MRRP0Obj*>(
               &_Dt_Rrecord_MRRP0Obj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Dt_Rrecord_MRRP0Obj* other);

  // implements Message ----------------------------------------------

  inline Dt_Rrecord_MRRP0Obj* New() const PROTOBUF_FINAL { return New(NULL); }

  Dt_Rrecord_MRRP0Obj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const Dt_Rrecord_MRRP0Obj& from);
  void MergeFrom(const Dt_Rrecord_MRRP0Obj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Dt_Rrecord_MRRP0Obj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Dt_Rrecord_MRRP0Obj_Status_FLag_1 Status_FLag_1;
  static const Status_FLag_1 null =
    Dt_Rrecord_MRRP0Obj_Status_FLag_1_null;
  static const Status_FLag_1 TemporaryFlat =
    Dt_Rrecord_MRRP0Obj_Status_FLag_1_TemporaryFlat;
  static const Status_FLag_1 TrackingTargetIsMoving =
    Dt_Rrecord_MRRP0Obj_Status_FLag_1_TrackingTargetIsMoving;
  static const Status_FLag_1 TrackingTargetIsMovable =
    Dt_Rrecord_MRRP0Obj_Status_FLag_1_TrackingTargetIsMovable;
  static const Status_FLag_1 TargetIsNew =
    Dt_Rrecord_MRRP0Obj_Status_FLag_1_TargetIsNew;
  static inline bool Status_FLag_1_IsValid(int value) {
    return Dt_Rrecord_MRRP0Obj_Status_FLag_1_IsValid(value);
  }
  static const Status_FLag_1 Status_FLag_1_MIN =
    Dt_Rrecord_MRRP0Obj_Status_FLag_1_Status_FLag_1_MIN;
  static const Status_FLag_1 Status_FLag_1_MAX =
    Dt_Rrecord_MRRP0Obj_Status_FLag_1_Status_FLag_1_MAX;
  static const int Status_FLag_1_ARRAYSIZE =
    Dt_Rrecord_MRRP0Obj_Status_FLag_1_Status_FLag_1_ARRAYSIZE;

  typedef Dt_Rrecord_MRRP0Obj_Status_FLag_2 Status_FLag_2;
  static const Status_FLag_2 NormalThresholdflat =
    Dt_Rrecord_MRRP0Obj_Status_FLag_2_NormalThresholdflat;
  static const Status_FLag_2 TargetIsExtrapolated =
    Dt_Rrecord_MRRP0Obj_Status_FLag_2_TargetIsExtrapolated;
  static inline bool Status_FLag_2_IsValid(int value) {
    return Dt_Rrecord_MRRP0Obj_Status_FLag_2_IsValid(value);
  }
  static const Status_FLag_2 Status_FLag_2_MIN =
    Dt_Rrecord_MRRP0Obj_Status_FLag_2_Status_FLag_2_MIN;
  static const Status_FLag_2 Status_FLag_2_MAX =
    Dt_Rrecord_MRRP0Obj_Status_FLag_2_Status_FLag_2_MAX;
  static const int Status_FLag_2_ARRAYSIZE =
    Dt_Rrecord_MRRP0Obj_Status_FLag_2_Status_FLag_2_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // optional int32 synchronize_counter = 1;
  bool has_synchronize_counter() const;
  void clear_synchronize_counter();
  static const int kSynchronizeCounterFieldNumber = 1;
  ::google::protobuf::int32 synchronize_counter() const;
  void set_synchronize_counter(::google::protobuf::int32 value);

  // optional float distance = 2;
  bool has_distance() const;
  void clear_distance();
  static const int kDistanceFieldNumber = 2;
  float distance() const;
  void set_distance(float value);

  // optional int32 status_flag_1 = 3;
  bool has_status_flag_1() const;
  void clear_status_flag_1();
  static const int kStatusFlag1FieldNumber = 3;
  ::google::protobuf::int32 status_flag_1() const;
  void set_status_flag_1(::google::protobuf::int32 value);

  // optional float lateral_location = 4;
  bool has_lateral_location() const;
  void clear_lateral_location();
  static const int kLateralLocationFieldNumber = 4;
  float lateral_location() const;
  void set_lateral_location(float value);

  // optional int32 status_flag_2 = 5;
  bool has_status_flag_2() const;
  void clear_status_flag_2();
  static const int kStatusFlag2FieldNumber = 5;
  ::google::protobuf::int32 status_flag_2() const;
  void set_status_flag_2(::google::protobuf::int32 value);

  // optional float relative_speed = 6;
  bool has_relative_speed() const;
  void clear_relative_speed();
  static const int kRelativeSpeedFieldNumber = 6;
  float relative_speed() const;
  void set_relative_speed(float value);

  // optional bool isUpdated = 7;
  bool has_isupdated() const;
  void clear_isupdated();
  static const int kIsUpdatedFieldNumber = 7;
  bool isupdated() const;
  void set_isupdated(bool value);

  // @@protoc_insertion_point(class_scope:atd.mwrprocess.Dt_Rrecord_MRRP0Obj)
 private:
  void set_has_synchronize_counter();
  void clear_has_synchronize_counter();
  void set_has_distance();
  void clear_has_distance();
  void set_has_status_flag_1();
  void clear_has_status_flag_1();
  void set_has_lateral_location();
  void clear_has_lateral_location();
  void set_has_status_flag_2();
  void clear_has_status_flag_2();
  void set_has_relative_speed();
  void clear_has_relative_speed();
  void set_has_isupdated();
  void clear_has_isupdated();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 synchronize_counter_;
  float distance_;
  ::google::protobuf::int32 status_flag_1_;
  float lateral_location_;
  ::google::protobuf::int32 status_flag_2_;
  float relative_speed_;
  bool isupdated_;
  friend struct protobuf_modules_2fipc_2fmessage_2fprotobuf_2fMwrProcess_2fDensoMrr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Dt_Rrecord_MRRP1Obj : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:atd.mwrprocess.Dt_Rrecord_MRRP1Obj) */ {
 public:
  Dt_Rrecord_MRRP1Obj();
  virtual ~Dt_Rrecord_MRRP1Obj();

  Dt_Rrecord_MRRP1Obj(const Dt_Rrecord_MRRP1Obj& from);

  inline Dt_Rrecord_MRRP1Obj& operator=(const Dt_Rrecord_MRRP1Obj& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const Dt_Rrecord_MRRP1Obj& default_instance();

  static inline const Dt_Rrecord_MRRP1Obj* internal_default_instance() {
    return reinterpret_cast<const Dt_Rrecord_MRRP1Obj*>(
               &_Dt_Rrecord_MRRP1Obj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Dt_Rrecord_MRRP1Obj* other);

  // implements Message ----------------------------------------------

  inline Dt_Rrecord_MRRP1Obj* New() const PROTOBUF_FINAL { return New(NULL); }

  Dt_Rrecord_MRRP1Obj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const Dt_Rrecord_MRRP1Obj& from);
  void MergeFrom(const Dt_Rrecord_MRRP1Obj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Dt_Rrecord_MRRP1Obj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Dt_Rrecord_MRRP1Obj_Status_Flag_5 Status_Flag_5;
  static const Status_Flag_5 Low_threshold_flag =
    Dt_Rrecord_MRRP1Obj_Status_Flag_5_Low_threshold_flag;
  static inline bool Status_Flag_5_IsValid(int value) {
    return Dt_Rrecord_MRRP1Obj_Status_Flag_5_IsValid(value);
  }
  static const Status_Flag_5 Status_Flag_5_MIN =
    Dt_Rrecord_MRRP1Obj_Status_Flag_5_Status_Flag_5_MIN;
  static const Status_Flag_5 Status_Flag_5_MAX =
    Dt_Rrecord_MRRP1Obj_Status_Flag_5_Status_Flag_5_MAX;
  static const int Status_Flag_5_ARRAYSIZE =
    Dt_Rrecord_MRRP1Obj_Status_Flag_5_Status_Flag_5_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // optional int32 synchronize_counter = 1;
  bool has_synchronize_counter() const;
  void clear_synchronize_counter();
  static const int kSynchronizeCounterFieldNumber = 1;
  ::google::protobuf::int32 synchronize_counter() const;
  void set_synchronize_counter(::google::protobuf::int32 value);

  // optional float relative_acceleration = 2;
  bool has_relative_acceleration() const;
  void clear_relative_acceleration();
  static const int kRelativeAccelerationFieldNumber = 2;
  float relative_acceleration() const;
  void set_relative_acceleration(float value);

  // optional int32 target_probability = 3;
  bool has_target_probability() const;
  void clear_target_probability();
  static const int kTargetProbabilityFieldNumber = 3;
  ::google::protobuf::int32 target_probability() const;
  void set_target_probability(::google::protobuf::int32 value);

  // optional int32 status_flag_5 = 4;
  bool has_status_flag_5() const;
  void clear_status_flag_5();
  static const int kStatusFlag5FieldNumber = 4;
  ::google::protobuf::int32 status_flag_5() const;
  void set_status_flag_5(::google::protobuf::int32 value);

  // optional int32 pedestrian_likelihood = 5;
  bool has_pedestrian_likelihood() const;
  void clear_pedestrian_likelihood();
  static const int kPedestrianLikelihoodFieldNumber = 5;
  ::google::protobuf::int32 pedestrian_likelihood() const;
  void set_pedestrian_likelihood(::google::protobuf::int32 value);

  // optional float lateral_speed = 6;
  bool has_lateral_speed() const;
  void clear_lateral_speed();
  static const int kLateralSpeedFieldNumber = 6;
  float lateral_speed() const;
  void set_lateral_speed(float value);

  // optional bool isUpdated = 7;
  bool has_isupdated() const;
  void clear_isupdated();
  static const int kIsUpdatedFieldNumber = 7;
  bool isupdated() const;
  void set_isupdated(bool value);

  // @@protoc_insertion_point(class_scope:atd.mwrprocess.Dt_Rrecord_MRRP1Obj)
 private:
  void set_has_synchronize_counter();
  void clear_has_synchronize_counter();
  void set_has_relative_acceleration();
  void clear_has_relative_acceleration();
  void set_has_target_probability();
  void clear_has_target_probability();
  void set_has_status_flag_5();
  void clear_has_status_flag_5();
  void set_has_pedestrian_likelihood();
  void clear_has_pedestrian_likelihood();
  void set_has_lateral_speed();
  void clear_has_lateral_speed();
  void set_has_isupdated();
  void clear_has_isupdated();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 synchronize_counter_;
  float relative_acceleration_;
  ::google::protobuf::int32 target_probability_;
  ::google::protobuf::int32 status_flag_5_;
  ::google::protobuf::int32 pedestrian_likelihood_;
  float lateral_speed_;
  bool isupdated_;
  friend struct protobuf_modules_2fipc_2fmessage_2fprotobuf_2fMwrProcess_2fDensoMrr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Dt_Rrecord_MRRP2Obj : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:atd.mwrprocess.Dt_Rrecord_MRRP2Obj) */ {
 public:
  Dt_Rrecord_MRRP2Obj();
  virtual ~Dt_Rrecord_MRRP2Obj();

  Dt_Rrecord_MRRP2Obj(const Dt_Rrecord_MRRP2Obj& from);

  inline Dt_Rrecord_MRRP2Obj& operator=(const Dt_Rrecord_MRRP2Obj& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const Dt_Rrecord_MRRP2Obj& default_instance();

  static inline const Dt_Rrecord_MRRP2Obj* internal_default_instance() {
    return reinterpret_cast<const Dt_Rrecord_MRRP2Obj*>(
               &_Dt_Rrecord_MRRP2Obj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Dt_Rrecord_MRRP2Obj* other);

  // implements Message ----------------------------------------------

  inline Dt_Rrecord_MRRP2Obj* New() const PROTOBUF_FINAL { return New(NULL); }

  Dt_Rrecord_MRRP2Obj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const Dt_Rrecord_MRRP2Obj& from);
  void MergeFrom(const Dt_Rrecord_MRRP2Obj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Dt_Rrecord_MRRP2Obj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 synchronize_counter = 1;
  bool has_synchronize_counter() const;
  void clear_synchronize_counter();
  static const int kSynchronizeCounterFieldNumber = 1;
  ::google::protobuf::int32 synchronize_counter() const;
  void set_synchronize_counter(::google::protobuf::int32 value);

  // optional float immediate_distance = 2;
  bool has_immediate_distance() const;
  void clear_immediate_distance();
  static const int kImmediateDistanceFieldNumber = 2;
  float immediate_distance() const;
  void set_immediate_distance(float value);

  // optional float immediate_lateral_lo = 3;
  bool has_immediate_lateral_lo() const;
  void clear_immediate_lateral_lo();
  static const int kImmediateLateralLoFieldNumber = 3;
  float immediate_lateral_lo() const;
  void set_immediate_lateral_lo(float value);

  // optional bool isUpdated = 4;
  bool has_isupdated() const;
  void clear_isupdated();
  static const int kIsUpdatedFieldNumber = 4;
  bool isupdated() const;
  void set_isupdated(bool value);

  // @@protoc_insertion_point(class_scope:atd.mwrprocess.Dt_Rrecord_MRRP2Obj)
 private:
  void set_has_synchronize_counter();
  void clear_has_synchronize_counter();
  void set_has_immediate_distance();
  void clear_has_immediate_distance();
  void set_has_immediate_lateral_lo();
  void clear_has_immediate_lateral_lo();
  void set_has_isupdated();
  void clear_has_isupdated();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 synchronize_counter_;
  float immediate_distance_;
  float immediate_lateral_lo_;
  bool isupdated_;
  friend struct protobuf_modules_2fipc_2fmessage_2fprotobuf_2fMwrProcess_2fDensoMrr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Dt_Rrecord_MRRP3Obj : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:atd.mwrprocess.Dt_Rrecord_MRRP3Obj) */ {
 public:
  Dt_Rrecord_MRRP3Obj();
  virtual ~Dt_Rrecord_MRRP3Obj();

  Dt_Rrecord_MRRP3Obj(const Dt_Rrecord_MRRP3Obj& from);

  inline Dt_Rrecord_MRRP3Obj& operator=(const Dt_Rrecord_MRRP3Obj& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const Dt_Rrecord_MRRP3Obj& default_instance();

  static inline const Dt_Rrecord_MRRP3Obj* internal_default_instance() {
    return reinterpret_cast<const Dt_Rrecord_MRRP3Obj*>(
               &_Dt_Rrecord_MRRP3Obj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(Dt_Rrecord_MRRP3Obj* other);

  // implements Message ----------------------------------------------

  inline Dt_Rrecord_MRRP3Obj* New() const PROTOBUF_FINAL { return New(NULL); }

  Dt_Rrecord_MRRP3Obj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const Dt_Rrecord_MRRP3Obj& from);
  void MergeFrom(const Dt_Rrecord_MRRP3Obj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Dt_Rrecord_MRRP3Obj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Dt_Rrecord_MRRP3Obj_Status_Flag_3 Status_Flag_3;
  static const Status_Flag_3 lowThreshExtrapolation =
    Dt_Rrecord_MRRP3Obj_Status_Flag_3_lowThreshExtrapolation;
  static const Status_Flag_3 lowThreshholdFlag =
    Dt_Rrecord_MRRP3Obj_Status_Flag_3_lowThreshholdFlag;
  static const Status_Flag_3 SignboardFlag =
    Dt_Rrecord_MRRP3Obj_Status_Flag_3_SignboardFlag;
  static const Status_Flag_3 ManholeFlag =
    Dt_Rrecord_MRRP3Obj_Status_Flag_3_ManholeFlag;
  static inline bool Status_Flag_3_IsValid(int value) {
    return Dt_Rrecord_MRRP3Obj_Status_Flag_3_IsValid(value);
  }
  static const Status_Flag_3 Status_Flag_3_MIN =
    Dt_Rrecord_MRRP3Obj_Status_Flag_3_Status_Flag_3_MIN;
  static const Status_Flag_3 Status_Flag_3_MAX =
    Dt_Rrecord_MRRP3Obj_Status_Flag_3_Status_Flag_3_MAX;
  static const int Status_Flag_3_ARRAYSIZE =
    Dt_Rrecord_MRRP3Obj_Status_Flag_3_Status_Flag_3_ARRAYSIZE;

  typedef Dt_Rrecord_MRRP3Obj_Radar_Fusion Radar_Fusion;
  static const Radar_Fusion There_is_no_Obj =
    Dt_Rrecord_MRRP3Obj_Radar_Fusion_There_is_no_Obj;
  static const Radar_Fusion Long_MidFusion =
    Dt_Rrecord_MRRP3Obj_Radar_Fusion_Long_MidFusion;
  static const Radar_Fusion Long =
    Dt_Rrecord_MRRP3Obj_Radar_Fusion_Long;
  static const Radar_Fusion Mid =
    Dt_Rrecord_MRRP3Obj_Radar_Fusion_Mid;
  static inline bool Radar_Fusion_IsValid(int value) {
    return Dt_Rrecord_MRRP3Obj_Radar_Fusion_IsValid(value);
  }
  static const Radar_Fusion Radar_Fusion_MIN =
    Dt_Rrecord_MRRP3Obj_Radar_Fusion_Radar_Fusion_MIN;
  static const Radar_Fusion Radar_Fusion_MAX =
    Dt_Rrecord_MRRP3Obj_Radar_Fusion_Radar_Fusion_MAX;
  static const int Radar_Fusion_ARRAYSIZE =
    Dt_Rrecord_MRRP3Obj_Radar_Fusion_Radar_Fusion_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // optional int32 synchronize_counter = 1;
  bool has_synchronize_counter() const;
  void clear_synchronize_counter();
  static const int kSynchronizeCounterFieldNumber = 1;
  ::google::protobuf::int32 synchronize_counter() const;
  void set_synchronize_counter(::google::protobuf::int32 value);

  // optional float relative_acceleration = 2;
  bool has_relative_acceleration() const;
  void clear_relative_acceleration();
  static const int kRelativeAccelerationFieldNumber = 2;
  float relative_acceleration() const;
  void set_relative_acceleration(float value);

  // optional int32 target_probability = 3;
  bool has_target_probability() const;
  void clear_target_probability();
  static const int kTargetProbabilityFieldNumber = 3;
  ::google::protobuf::int32 target_probability() const;
  void set_target_probability(::google::protobuf::int32 value);

  // optional int32 status_flag_3 = 4;
  bool has_status_flag_3() const;
  void clear_status_flag_3();
  static const int kStatusFlag3FieldNumber = 4;
  ::google::protobuf::int32 status_flag_3() const;
  void set_status_flag_3(::google::protobuf::int32 value);

  // optional int32 status_flag_4 = 5;
  bool has_status_flag_4() const;
  void clear_status_flag_4();
  static const int kStatusFlag4FieldNumber = 5;
  ::google::protobuf::int32 status_flag_4() const;
  void set_status_flag_4(::google::protobuf::int32 value);

  // optional int32 Vehicle_Likelihood = 6;
  bool has_vehicle_likelihood() const;
  void clear_vehicle_likelihood();
  static const int kVehicleLikelihoodFieldNumber = 6;
  ::google::protobuf::int32 vehicle_likelihood() const;
  void set_vehicle_likelihood(::google::protobuf::int32 value);

  // optional .atd.mwrprocess.Dt_Rrecord_MRRP3Obj.Radar_Fusion radar_fusion_status = 8;
  bool has_radar_fusion_status() const;
  void clear_radar_fusion_status();
  static const int kRadarFusionStatusFieldNumber = 8;
  ::atd::mwrprocess::Dt_Rrecord_MRRP3Obj_Radar_Fusion radar_fusion_status() const;
  void set_radar_fusion_status(::atd::mwrprocess::Dt_Rrecord_MRRP3Obj_Radar_Fusion value);

  // optional bool Lowthreshold_manhole = 7;
  bool has_lowthreshold_manhole() const;
  void clear_lowthreshold_manhole();
  static const int kLowthresholdManholeFieldNumber = 7;
  bool lowthreshold_manhole() const;
  void set_lowthreshold_manhole(bool value);

  // optional bool isUpdated = 9;
  bool has_isupdated() const;
  void clear_isupdated();
  static const int kIsUpdatedFieldNumber = 9;
  bool isupdated() const;
  void set_isupdated(bool value);

  // @@protoc_insertion_point(class_scope:atd.mwrprocess.Dt_Rrecord_MRRP3Obj)
 private:
  void set_has_synchronize_counter();
  void clear_has_synchronize_counter();
  void set_has_relative_acceleration();
  void clear_has_relative_acceleration();
  void set_has_target_probability();
  void clear_has_target_probability();
  void set_has_vehicle_likelihood();
  void clear_has_vehicle_likelihood();
  void set_has_lowthreshold_manhole();
  void clear_has_lowthreshold_manhole();
  void set_has_radar_fusion_status();
  void clear_has_radar_fusion_status();
  void set_has_status_flag_3();
  void clear_has_status_flag_3();
  void set_has_status_flag_4();
  void clear_has_status_flag_4();
  void set_has_isupdated();
  void clear_has_isupdated();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 synchronize_counter_;
  float relative_acceleration_;
  ::google::protobuf::int32 target_probability_;
  ::google::protobuf::int32 status_flag_3_;
  ::google::protobuf::int32 status_flag_4_;
  ::google::protobuf::int32 vehicle_likelihood_;
  int radar_fusion_status_;
  bool lowthreshold_manhole_;
  bool isupdated_;
  friend struct protobuf_modules_2fipc_2fmessage_2fprotobuf_2fMwrProcess_2fDensoMrr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MidRangeObj : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:atd.mwrprocess.MidRangeObj) */ {
 public:
  MidRangeObj();
  virtual ~MidRangeObj();

  MidRangeObj(const MidRangeObj& from);

  inline MidRangeObj& operator=(const MidRangeObj& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const MidRangeObj& default_instance();

  static inline const MidRangeObj* internal_default_instance() {
    return reinterpret_cast<const MidRangeObj*>(
               &_MidRangeObj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(MidRangeObj* other);

  // implements Message ----------------------------------------------

  inline MidRangeObj* New() const PROTOBUF_FINAL { return New(NULL); }

  MidRangeObj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const MidRangeObj& from);
  void MergeFrom(const MidRangeObj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MidRangeObj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .atd.mwrprocess.Dt_Rrecord_MRRP0Obj Part0 = 1;
  bool has_part0() const;
  void clear_part0();
  static const int kPart0FieldNumber = 1;
  const ::atd::mwrprocess::Dt_Rrecord_MRRP0Obj& part0() const;
  ::atd::mwrprocess::Dt_Rrecord_MRRP0Obj* mutable_part0();
  ::atd::mwrprocess::Dt_Rrecord_MRRP0Obj* release_part0();
  void set_allocated_part0(::atd::mwrprocess::Dt_Rrecord_MRRP0Obj* part0);

  // optional .atd.mwrprocess.Dt_Rrecord_MRRP1Obj Part1 = 2;
  bool has_part1() const;
  void clear_part1();
  static const int kPart1FieldNumber = 2;
  const ::atd::mwrprocess::Dt_Rrecord_MRRP1Obj& part1() const;
  ::atd::mwrprocess::Dt_Rrecord_MRRP1Obj* mutable_part1();
  ::atd::mwrprocess::Dt_Rrecord_MRRP1Obj* release_part1();
  void set_allocated_part1(::atd::mwrprocess::Dt_Rrecord_MRRP1Obj* part1);

  // @@protoc_insertion_point(class_scope:atd.mwrprocess.MidRangeObj)
 private:
  void set_has_part0();
  void clear_has_part0();
  void set_has_part1();
  void clear_has_part1();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::atd::mwrprocess::Dt_Rrecord_MRRP0Obj* part0_;
  ::atd::mwrprocess::Dt_Rrecord_MRRP1Obj* part1_;
  friend struct protobuf_modules_2fipc_2fmessage_2fprotobuf_2fMwrProcess_2fDensoMrr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LongRangeObj : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:atd.mwrprocess.LongRangeObj) */ {
 public:
  LongRangeObj();
  virtual ~LongRangeObj();

  LongRangeObj(const LongRangeObj& from);

  inline LongRangeObj& operator=(const LongRangeObj& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const LongRangeObj& default_instance();

  static inline const LongRangeObj* internal_default_instance() {
    return reinterpret_cast<const LongRangeObj*>(
               &_LongRangeObj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(LongRangeObj* other);

  // implements Message ----------------------------------------------

  inline LongRangeObj* New() const PROTOBUF_FINAL { return New(NULL); }

  LongRangeObj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const LongRangeObj& from);
  void MergeFrom(const LongRangeObj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LongRangeObj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .atd.mwrprocess.Dt_Rrecord_MRRP0Obj Part0 = 1;
  bool has_part0() const;
  void clear_part0();
  static const int kPart0FieldNumber = 1;
  const ::atd::mwrprocess::Dt_Rrecord_MRRP0Obj& part0() const;
  ::atd::mwrprocess::Dt_Rrecord_MRRP0Obj* mutable_part0();
  ::atd::mwrprocess::Dt_Rrecord_MRRP0Obj* release_part0();
  void set_allocated_part0(::atd::mwrprocess::Dt_Rrecord_MRRP0Obj* part0);

  // optional .atd.mwrprocess.Dt_Rrecord_MRRP2Obj Part2 = 2;
  bool has_part2() const;
  void clear_part2();
  static const int kPart2FieldNumber = 2;
  const ::atd::mwrprocess::Dt_Rrecord_MRRP2Obj& part2() const;
  ::atd::mwrprocess::Dt_Rrecord_MRRP2Obj* mutable_part2();
  ::atd::mwrprocess::Dt_Rrecord_MRRP2Obj* release_part2();
  void set_allocated_part2(::atd::mwrprocess::Dt_Rrecord_MRRP2Obj* part2);

  // optional .atd.mwrprocess.Dt_Rrecord_MRRP3Obj Part3 = 3;
  bool has_part3() const;
  void clear_part3();
  static const int kPart3FieldNumber = 3;
  const ::atd::mwrprocess::Dt_Rrecord_MRRP3Obj& part3() const;
  ::atd::mwrprocess::Dt_Rrecord_MRRP3Obj* mutable_part3();
  ::atd::mwrprocess::Dt_Rrecord_MRRP3Obj* release_part3();
  void set_allocated_part3(::atd::mwrprocess::Dt_Rrecord_MRRP3Obj* part3);

  // @@protoc_insertion_point(class_scope:atd.mwrprocess.LongRangeObj)
 private:
  void set_has_part0();
  void clear_has_part0();
  void set_has_part2();
  void clear_has_part2();
  void set_has_part3();
  void clear_has_part3();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::atd::mwrprocess::Dt_Rrecord_MRRP0Obj* part0_;
  ::atd::mwrprocess::Dt_Rrecord_MRRP2Obj* part2_;
  ::atd::mwrprocess::Dt_Rrecord_MRRP3Obj* part3_;
  friend struct protobuf_modules_2fipc_2fmessage_2fprotobuf_2fMwrProcess_2fDensoMrr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FrontDensoMRRObjs : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:atd.mwrprocess.FrontDensoMRRObjs) */ {
 public:
  FrontDensoMRRObjs();
  virtual ~FrontDensoMRRObjs();

  FrontDensoMRRObjs(const FrontDensoMRRObjs& from);

  inline FrontDensoMRRObjs& operator=(const FrontDensoMRRObjs& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const FrontDensoMRRObjs& default_instance();

  static inline const FrontDensoMRRObjs* internal_default_instance() {
    return reinterpret_cast<const FrontDensoMRRObjs*>(
               &_FrontDensoMRRObjs_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(FrontDensoMRRObjs* other);

  // implements Message ----------------------------------------------

  inline FrontDensoMRRObjs* New() const PROTOBUF_FINAL { return New(NULL); }

  FrontDensoMRRObjs* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const FrontDensoMRRObjs& from);
  void MergeFrom(const FrontDensoMRRObjs& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FrontDensoMRRObjs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .atd.mwrprocess.LongRangeObj LongRangeObj_0_7 = 3;
  int longrangeobj_0_7_size() const;
  void clear_longrangeobj_0_7();
  static const int kLongRangeObj07FieldNumber = 3;
  const ::atd::mwrprocess::LongRangeObj& longrangeobj_0_7(int index) const;
  ::atd::mwrprocess::LongRangeObj* mutable_longrangeobj_0_7(int index);
  ::atd::mwrprocess::LongRangeObj* add_longrangeobj_0_7();
  ::google::protobuf::RepeatedPtrField< ::atd::mwrprocess::LongRangeObj >*
      mutable_longrangeobj_0_7();
  const ::google::protobuf::RepeatedPtrField< ::atd::mwrprocess::LongRangeObj >&
      longrangeobj_0_7() const;

  // repeated .atd.mwrprocess.MidRangeObj MidRangeObj_8_15 = 4;
  int midrangeobj_8_15_size() const;
  void clear_midrangeobj_8_15();
  static const int kMidRangeObj815FieldNumber = 4;
  const ::atd::mwrprocess::MidRangeObj& midrangeobj_8_15(int index) const;
  ::atd::mwrprocess::MidRangeObj* mutable_midrangeobj_8_15(int index);
  ::atd::mwrprocess::MidRangeObj* add_midrangeobj_8_15();
  ::google::protobuf::RepeatedPtrField< ::atd::mwrprocess::MidRangeObj >*
      mutable_midrangeobj_8_15();
  const ::google::protobuf::RepeatedPtrField< ::atd::mwrprocess::MidRangeObj >&
      midrangeobj_8_15() const;

  // optional .atd.common.Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::atd::common::Header& header() const;
  ::atd::common::Header* mutable_header();
  ::atd::common::Header* release_header();
  void set_allocated_header(::atd::common::Header* header);

  // optional .atd.common.Reserved reservedmsg = 2;
  bool has_reservedmsg() const;
  void clear_reservedmsg();
  static const int kReservedmsgFieldNumber = 2;
  const ::atd::common::Reserved& reservedmsg() const;
  ::atd::common::Reserved* mutable_reservedmsg();
  ::atd::common::Reserved* release_reservedmsg();
  void set_allocated_reservedmsg(::atd::common::Reserved* reservedmsg);

  // @@protoc_insertion_point(class_scope:atd.mwrprocess.FrontDensoMRRObjs)
 private:
  void set_has_header();
  void clear_has_header();
  void set_has_reservedmsg();
  void clear_has_reservedmsg();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::atd::mwrprocess::LongRangeObj > longrangeobj_0_7_;
  ::google::protobuf::RepeatedPtrField< ::atd::mwrprocess::MidRangeObj > midrangeobj_8_15_;
  ::atd::common::Header* header_;
  ::atd::common::Reserved* reservedmsg_;
  friend struct protobuf_modules_2fipc_2fmessage_2fprotobuf_2fMwrProcess_2fDensoMrr_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Dt_Rrecord_MRRP0Obj

// optional int32 synchronize_counter = 1;
inline bool Dt_Rrecord_MRRP0Obj::has_synchronize_counter() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Dt_Rrecord_MRRP0Obj::set_has_synchronize_counter() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Dt_Rrecord_MRRP0Obj::clear_has_synchronize_counter() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Dt_Rrecord_MRRP0Obj::clear_synchronize_counter() {
  synchronize_counter_ = 0;
  clear_has_synchronize_counter();
}
inline ::google::protobuf::int32 Dt_Rrecord_MRRP0Obj::synchronize_counter() const {
  // @@protoc_insertion_point(field_get:atd.mwrprocess.Dt_Rrecord_MRRP0Obj.synchronize_counter)
  return synchronize_counter_;
}
inline void Dt_Rrecord_MRRP0Obj::set_synchronize_counter(::google::protobuf::int32 value) {
  set_has_synchronize_counter();
  synchronize_counter_ = value;
  // @@protoc_insertion_point(field_set:atd.mwrprocess.Dt_Rrecord_MRRP0Obj.synchronize_counter)
}

// optional float distance = 2;
inline bool Dt_Rrecord_MRRP0Obj::has_distance() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Dt_Rrecord_MRRP0Obj::set_has_distance() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Dt_Rrecord_MRRP0Obj::clear_has_distance() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Dt_Rrecord_MRRP0Obj::clear_distance() {
  distance_ = 0;
  clear_has_distance();
}
inline float Dt_Rrecord_MRRP0Obj::distance() const {
  // @@protoc_insertion_point(field_get:atd.mwrprocess.Dt_Rrecord_MRRP0Obj.distance)
  return distance_;
}
inline void Dt_Rrecord_MRRP0Obj::set_distance(float value) {
  set_has_distance();
  distance_ = value;
  // @@protoc_insertion_point(field_set:atd.mwrprocess.Dt_Rrecord_MRRP0Obj.distance)
}

// optional int32 status_flag_1 = 3;
inline bool Dt_Rrecord_MRRP0Obj::has_status_flag_1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Dt_Rrecord_MRRP0Obj::set_has_status_flag_1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Dt_Rrecord_MRRP0Obj::clear_has_status_flag_1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Dt_Rrecord_MRRP0Obj::clear_status_flag_1() {
  status_flag_1_ = 0;
  clear_has_status_flag_1();
}
inline ::google::protobuf::int32 Dt_Rrecord_MRRP0Obj::status_flag_1() const {
  // @@protoc_insertion_point(field_get:atd.mwrprocess.Dt_Rrecord_MRRP0Obj.status_flag_1)
  return status_flag_1_;
}
inline void Dt_Rrecord_MRRP0Obj::set_status_flag_1(::google::protobuf::int32 value) {
  set_has_status_flag_1();
  status_flag_1_ = value;
  // @@protoc_insertion_point(field_set:atd.mwrprocess.Dt_Rrecord_MRRP0Obj.status_flag_1)
}

// optional float lateral_location = 4;
inline bool Dt_Rrecord_MRRP0Obj::has_lateral_location() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Dt_Rrecord_MRRP0Obj::set_has_lateral_location() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Dt_Rrecord_MRRP0Obj::clear_has_lateral_location() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Dt_Rrecord_MRRP0Obj::clear_lateral_location() {
  lateral_location_ = 0;
  clear_has_lateral_location();
}
inline float Dt_Rrecord_MRRP0Obj::lateral_location() const {
  // @@protoc_insertion_point(field_get:atd.mwrprocess.Dt_Rrecord_MRRP0Obj.lateral_location)
  return lateral_location_;
}
inline void Dt_Rrecord_MRRP0Obj::set_lateral_location(float value) {
  set_has_lateral_location();
  lateral_location_ = value;
  // @@protoc_insertion_point(field_set:atd.mwrprocess.Dt_Rrecord_MRRP0Obj.lateral_location)
}

// optional int32 status_flag_2 = 5;
inline bool Dt_Rrecord_MRRP0Obj::has_status_flag_2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Dt_Rrecord_MRRP0Obj::set_has_status_flag_2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Dt_Rrecord_MRRP0Obj::clear_has_status_flag_2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Dt_Rrecord_MRRP0Obj::clear_status_flag_2() {
  status_flag_2_ = 0;
  clear_has_status_flag_2();
}
inline ::google::protobuf::int32 Dt_Rrecord_MRRP0Obj::status_flag_2() const {
  // @@protoc_insertion_point(field_get:atd.mwrprocess.Dt_Rrecord_MRRP0Obj.status_flag_2)
  return status_flag_2_;
}
inline void Dt_Rrecord_MRRP0Obj::set_status_flag_2(::google::protobuf::int32 value) {
  set_has_status_flag_2();
  status_flag_2_ = value;
  // @@protoc_insertion_point(field_set:atd.mwrprocess.Dt_Rrecord_MRRP0Obj.status_flag_2)
}

// optional float relative_speed = 6;
inline bool Dt_Rrecord_MRRP0Obj::has_relative_speed() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Dt_Rrecord_MRRP0Obj::set_has_relative_speed() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Dt_Rrecord_MRRP0Obj::clear_has_relative_speed() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Dt_Rrecord_MRRP0Obj::clear_relative_speed() {
  relative_speed_ = 0;
  clear_has_relative_speed();
}
inline float Dt_Rrecord_MRRP0Obj::relative_speed() const {
  // @@protoc_insertion_point(field_get:atd.mwrprocess.Dt_Rrecord_MRRP0Obj.relative_speed)
  return relative_speed_;
}
inline void Dt_Rrecord_MRRP0Obj::set_relative_speed(float value) {
  set_has_relative_speed();
  relative_speed_ = value;
  // @@protoc_insertion_point(field_set:atd.mwrprocess.Dt_Rrecord_MRRP0Obj.relative_speed)
}

// optional bool isUpdated = 7;
inline bool Dt_Rrecord_MRRP0Obj::has_isupdated() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Dt_Rrecord_MRRP0Obj::set_has_isupdated() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Dt_Rrecord_MRRP0Obj::clear_has_isupdated() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Dt_Rrecord_MRRP0Obj::clear_isupdated() {
  isupdated_ = false;
  clear_has_isupdated();
}
inline bool Dt_Rrecord_MRRP0Obj::isupdated() const {
  // @@protoc_insertion_point(field_get:atd.mwrprocess.Dt_Rrecord_MRRP0Obj.isUpdated)
  return isupdated_;
}
inline void Dt_Rrecord_MRRP0Obj::set_isupdated(bool value) {
  set_has_isupdated();
  isupdated_ = value;
  // @@protoc_insertion_point(field_set:atd.mwrprocess.Dt_Rrecord_MRRP0Obj.isUpdated)
}

// -------------------------------------------------------------------

// Dt_Rrecord_MRRP1Obj

// optional int32 synchronize_counter = 1;
inline bool Dt_Rrecord_MRRP1Obj::has_synchronize_counter() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Dt_Rrecord_MRRP1Obj::set_has_synchronize_counter() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Dt_Rrecord_MRRP1Obj::clear_has_synchronize_counter() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Dt_Rrecord_MRRP1Obj::clear_synchronize_counter() {
  synchronize_counter_ = 0;
  clear_has_synchronize_counter();
}
inline ::google::protobuf::int32 Dt_Rrecord_MRRP1Obj::synchronize_counter() const {
  // @@protoc_insertion_point(field_get:atd.mwrprocess.Dt_Rrecord_MRRP1Obj.synchronize_counter)
  return synchronize_counter_;
}
inline void Dt_Rrecord_MRRP1Obj::set_synchronize_counter(::google::protobuf::int32 value) {
  set_has_synchronize_counter();
  synchronize_counter_ = value;
  // @@protoc_insertion_point(field_set:atd.mwrprocess.Dt_Rrecord_MRRP1Obj.synchronize_counter)
}

// optional float relative_acceleration = 2;
inline bool Dt_Rrecord_MRRP1Obj::has_relative_acceleration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Dt_Rrecord_MRRP1Obj::set_has_relative_acceleration() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Dt_Rrecord_MRRP1Obj::clear_has_relative_acceleration() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Dt_Rrecord_MRRP1Obj::clear_relative_acceleration() {
  relative_acceleration_ = 0;
  clear_has_relative_acceleration();
}
inline float Dt_Rrecord_MRRP1Obj::relative_acceleration() const {
  // @@protoc_insertion_point(field_get:atd.mwrprocess.Dt_Rrecord_MRRP1Obj.relative_acceleration)
  return relative_acceleration_;
}
inline void Dt_Rrecord_MRRP1Obj::set_relative_acceleration(float value) {
  set_has_relative_acceleration();
  relative_acceleration_ = value;
  // @@protoc_insertion_point(field_set:atd.mwrprocess.Dt_Rrecord_MRRP1Obj.relative_acceleration)
}

// optional int32 target_probability = 3;
inline bool Dt_Rrecord_MRRP1Obj::has_target_probability() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Dt_Rrecord_MRRP1Obj::set_has_target_probability() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Dt_Rrecord_MRRP1Obj::clear_has_target_probability() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Dt_Rrecord_MRRP1Obj::clear_target_probability() {
  target_probability_ = 0;
  clear_has_target_probability();
}
inline ::google::protobuf::int32 Dt_Rrecord_MRRP1Obj::target_probability() const {
  // @@protoc_insertion_point(field_get:atd.mwrprocess.Dt_Rrecord_MRRP1Obj.target_probability)
  return target_probability_;
}
inline void Dt_Rrecord_MRRP1Obj::set_target_probability(::google::protobuf::int32 value) {
  set_has_target_probability();
  target_probability_ = value;
  // @@protoc_insertion_point(field_set:atd.mwrprocess.Dt_Rrecord_MRRP1Obj.target_probability)
}

// optional int32 status_flag_5 = 4;
inline bool Dt_Rrecord_MRRP1Obj::has_status_flag_5() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Dt_Rrecord_MRRP1Obj::set_has_status_flag_5() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Dt_Rrecord_MRRP1Obj::clear_has_status_flag_5() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Dt_Rrecord_MRRP1Obj::clear_status_flag_5() {
  status_flag_5_ = 0;
  clear_has_status_flag_5();
}
inline ::google::protobuf::int32 Dt_Rrecord_MRRP1Obj::status_flag_5() const {
  // @@protoc_insertion_point(field_get:atd.mwrprocess.Dt_Rrecord_MRRP1Obj.status_flag_5)
  return status_flag_5_;
}
inline void Dt_Rrecord_MRRP1Obj::set_status_flag_5(::google::protobuf::int32 value) {
  set_has_status_flag_5();
  status_flag_5_ = value;
  // @@protoc_insertion_point(field_set:atd.mwrprocess.Dt_Rrecord_MRRP1Obj.status_flag_5)
}

// optional int32 pedestrian_likelihood = 5;
inline bool Dt_Rrecord_MRRP1Obj::has_pedestrian_likelihood() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Dt_Rrecord_MRRP1Obj::set_has_pedestrian_likelihood() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Dt_Rrecord_MRRP1Obj::clear_has_pedestrian_likelihood() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Dt_Rrecord_MRRP1Obj::clear_pedestrian_likelihood() {
  pedestrian_likelihood_ = 0;
  clear_has_pedestrian_likelihood();
}
inline ::google::protobuf::int32 Dt_Rrecord_MRRP1Obj::pedestrian_likelihood() const {
  // @@protoc_insertion_point(field_get:atd.mwrprocess.Dt_Rrecord_MRRP1Obj.pedestrian_likelihood)
  return pedestrian_likelihood_;
}
inline void Dt_Rrecord_MRRP1Obj::set_pedestrian_likelihood(::google::protobuf::int32 value) {
  set_has_pedestrian_likelihood();
  pedestrian_likelihood_ = value;
  // @@protoc_insertion_point(field_set:atd.mwrprocess.Dt_Rrecord_MRRP1Obj.pedestrian_likelihood)
}

// optional float lateral_speed = 6;
inline bool Dt_Rrecord_MRRP1Obj::has_lateral_speed() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Dt_Rrecord_MRRP1Obj::set_has_lateral_speed() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Dt_Rrecord_MRRP1Obj::clear_has_lateral_speed() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Dt_Rrecord_MRRP1Obj::clear_lateral_speed() {
  lateral_speed_ = 0;
  clear_has_lateral_speed();
}
inline float Dt_Rrecord_MRRP1Obj::lateral_speed() const {
  // @@protoc_insertion_point(field_get:atd.mwrprocess.Dt_Rrecord_MRRP1Obj.lateral_speed)
  return lateral_speed_;
}
inline void Dt_Rrecord_MRRP1Obj::set_lateral_speed(float value) {
  set_has_lateral_speed();
  lateral_speed_ = value;
  // @@protoc_insertion_point(field_set:atd.mwrprocess.Dt_Rrecord_MRRP1Obj.lateral_speed)
}

// optional bool isUpdated = 7;
inline bool Dt_Rrecord_MRRP1Obj::has_isupdated() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Dt_Rrecord_MRRP1Obj::set_has_isupdated() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Dt_Rrecord_MRRP1Obj::clear_has_isupdated() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Dt_Rrecord_MRRP1Obj::clear_isupdated() {
  isupdated_ = false;
  clear_has_isupdated();
}
inline bool Dt_Rrecord_MRRP1Obj::isupdated() const {
  // @@protoc_insertion_point(field_get:atd.mwrprocess.Dt_Rrecord_MRRP1Obj.isUpdated)
  return isupdated_;
}
inline void Dt_Rrecord_MRRP1Obj::set_isupdated(bool value) {
  set_has_isupdated();
  isupdated_ = value;
  // @@protoc_insertion_point(field_set:atd.mwrprocess.Dt_Rrecord_MRRP1Obj.isUpdated)
}

// -------------------------------------------------------------------

// Dt_Rrecord_MRRP2Obj

// optional int32 synchronize_counter = 1;
inline bool Dt_Rrecord_MRRP2Obj::has_synchronize_counter() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Dt_Rrecord_MRRP2Obj::set_has_synchronize_counter() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Dt_Rrecord_MRRP2Obj::clear_has_synchronize_counter() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Dt_Rrecord_MRRP2Obj::clear_synchronize_counter() {
  synchronize_counter_ = 0;
  clear_has_synchronize_counter();
}
inline ::google::protobuf::int32 Dt_Rrecord_MRRP2Obj::synchronize_counter() const {
  // @@protoc_insertion_point(field_get:atd.mwrprocess.Dt_Rrecord_MRRP2Obj.synchronize_counter)
  return synchronize_counter_;
}
inline void Dt_Rrecord_MRRP2Obj::set_synchronize_counter(::google::protobuf::int32 value) {
  set_has_synchronize_counter();
  synchronize_counter_ = value;
  // @@protoc_insertion_point(field_set:atd.mwrprocess.Dt_Rrecord_MRRP2Obj.synchronize_counter)
}

// optional float immediate_distance = 2;
inline bool Dt_Rrecord_MRRP2Obj::has_immediate_distance() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Dt_Rrecord_MRRP2Obj::set_has_immediate_distance() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Dt_Rrecord_MRRP2Obj::clear_has_immediate_distance() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Dt_Rrecord_MRRP2Obj::clear_immediate_distance() {
  immediate_distance_ = 0;
  clear_has_immediate_distance();
}
inline float Dt_Rrecord_MRRP2Obj::immediate_distance() const {
  // @@protoc_insertion_point(field_get:atd.mwrprocess.Dt_Rrecord_MRRP2Obj.immediate_distance)
  return immediate_distance_;
}
inline void Dt_Rrecord_MRRP2Obj::set_immediate_distance(float value) {
  set_has_immediate_distance();
  immediate_distance_ = value;
  // @@protoc_insertion_point(field_set:atd.mwrprocess.Dt_Rrecord_MRRP2Obj.immediate_distance)
}

// optional float immediate_lateral_lo = 3;
inline bool Dt_Rrecord_MRRP2Obj::has_immediate_lateral_lo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Dt_Rrecord_MRRP2Obj::set_has_immediate_lateral_lo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Dt_Rrecord_MRRP2Obj::clear_has_immediate_lateral_lo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Dt_Rrecord_MRRP2Obj::clear_immediate_lateral_lo() {
  immediate_lateral_lo_ = 0;
  clear_has_immediate_lateral_lo();
}
inline float Dt_Rrecord_MRRP2Obj::immediate_lateral_lo() const {
  // @@protoc_insertion_point(field_get:atd.mwrprocess.Dt_Rrecord_MRRP2Obj.immediate_lateral_lo)
  return immediate_lateral_lo_;
}
inline void Dt_Rrecord_MRRP2Obj::set_immediate_lateral_lo(float value) {
  set_has_immediate_lateral_lo();
  immediate_lateral_lo_ = value;
  // @@protoc_insertion_point(field_set:atd.mwrprocess.Dt_Rrecord_MRRP2Obj.immediate_lateral_lo)
}

// optional bool isUpdated = 4;
inline bool Dt_Rrecord_MRRP2Obj::has_isupdated() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Dt_Rrecord_MRRP2Obj::set_has_isupdated() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Dt_Rrecord_MRRP2Obj::clear_has_isupdated() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Dt_Rrecord_MRRP2Obj::clear_isupdated() {
  isupdated_ = false;
  clear_has_isupdated();
}
inline bool Dt_Rrecord_MRRP2Obj::isupdated() const {
  // @@protoc_insertion_point(field_get:atd.mwrprocess.Dt_Rrecord_MRRP2Obj.isUpdated)
  return isupdated_;
}
inline void Dt_Rrecord_MRRP2Obj::set_isupdated(bool value) {
  set_has_isupdated();
  isupdated_ = value;
  // @@protoc_insertion_point(field_set:atd.mwrprocess.Dt_Rrecord_MRRP2Obj.isUpdated)
}

// -------------------------------------------------------------------

// Dt_Rrecord_MRRP3Obj

// optional int32 synchronize_counter = 1;
inline bool Dt_Rrecord_MRRP3Obj::has_synchronize_counter() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Dt_Rrecord_MRRP3Obj::set_has_synchronize_counter() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Dt_Rrecord_MRRP3Obj::clear_has_synchronize_counter() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Dt_Rrecord_MRRP3Obj::clear_synchronize_counter() {
  synchronize_counter_ = 0;
  clear_has_synchronize_counter();
}
inline ::google::protobuf::int32 Dt_Rrecord_MRRP3Obj::synchronize_counter() const {
  // @@protoc_insertion_point(field_get:atd.mwrprocess.Dt_Rrecord_MRRP3Obj.synchronize_counter)
  return synchronize_counter_;
}
inline void Dt_Rrecord_MRRP3Obj::set_synchronize_counter(::google::protobuf::int32 value) {
  set_has_synchronize_counter();
  synchronize_counter_ = value;
  // @@protoc_insertion_point(field_set:atd.mwrprocess.Dt_Rrecord_MRRP3Obj.synchronize_counter)
}

// optional float relative_acceleration = 2;
inline bool Dt_Rrecord_MRRP3Obj::has_relative_acceleration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Dt_Rrecord_MRRP3Obj::set_has_relative_acceleration() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Dt_Rrecord_MRRP3Obj::clear_has_relative_acceleration() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Dt_Rrecord_MRRP3Obj::clear_relative_acceleration() {
  relative_acceleration_ = 0;
  clear_has_relative_acceleration();
}
inline float Dt_Rrecord_MRRP3Obj::relative_acceleration() const {
  // @@protoc_insertion_point(field_get:atd.mwrprocess.Dt_Rrecord_MRRP3Obj.relative_acceleration)
  return relative_acceleration_;
}
inline void Dt_Rrecord_MRRP3Obj::set_relative_acceleration(float value) {
  set_has_relative_acceleration();
  relative_acceleration_ = value;
  // @@protoc_insertion_point(field_set:atd.mwrprocess.Dt_Rrecord_MRRP3Obj.relative_acceleration)
}

// optional int32 target_probability = 3;
inline bool Dt_Rrecord_MRRP3Obj::has_target_probability() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Dt_Rrecord_MRRP3Obj::set_has_target_probability() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Dt_Rrecord_MRRP3Obj::clear_has_target_probability() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Dt_Rrecord_MRRP3Obj::clear_target_probability() {
  target_probability_ = 0;
  clear_has_target_probability();
}
inline ::google::protobuf::int32 Dt_Rrecord_MRRP3Obj::target_probability() const {
  // @@protoc_insertion_point(field_get:atd.mwrprocess.Dt_Rrecord_MRRP3Obj.target_probability)
  return target_probability_;
}
inline void Dt_Rrecord_MRRP3Obj::set_target_probability(::google::protobuf::int32 value) {
  set_has_target_probability();
  target_probability_ = value;
  // @@protoc_insertion_point(field_set:atd.mwrprocess.Dt_Rrecord_MRRP3Obj.target_probability)
}

// optional int32 Vehicle_Likelihood = 6;
inline bool Dt_Rrecord_MRRP3Obj::has_vehicle_likelihood() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Dt_Rrecord_MRRP3Obj::set_has_vehicle_likelihood() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Dt_Rrecord_MRRP3Obj::clear_has_vehicle_likelihood() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Dt_Rrecord_MRRP3Obj::clear_vehicle_likelihood() {
  vehicle_likelihood_ = 0;
  clear_has_vehicle_likelihood();
}
inline ::google::protobuf::int32 Dt_Rrecord_MRRP3Obj::vehicle_likelihood() const {
  // @@protoc_insertion_point(field_get:atd.mwrprocess.Dt_Rrecord_MRRP3Obj.Vehicle_Likelihood)
  return vehicle_likelihood_;
}
inline void Dt_Rrecord_MRRP3Obj::set_vehicle_likelihood(::google::protobuf::int32 value) {
  set_has_vehicle_likelihood();
  vehicle_likelihood_ = value;
  // @@protoc_insertion_point(field_set:atd.mwrprocess.Dt_Rrecord_MRRP3Obj.Vehicle_Likelihood)
}

// optional bool Lowthreshold_manhole = 7;
inline bool Dt_Rrecord_MRRP3Obj::has_lowthreshold_manhole() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Dt_Rrecord_MRRP3Obj::set_has_lowthreshold_manhole() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Dt_Rrecord_MRRP3Obj::clear_has_lowthreshold_manhole() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Dt_Rrecord_MRRP3Obj::clear_lowthreshold_manhole() {
  lowthreshold_manhole_ = false;
  clear_has_lowthreshold_manhole();
}
inline bool Dt_Rrecord_MRRP3Obj::lowthreshold_manhole() const {
  // @@protoc_insertion_point(field_get:atd.mwrprocess.Dt_Rrecord_MRRP3Obj.Lowthreshold_manhole)
  return lowthreshold_manhole_;
}
inline void Dt_Rrecord_MRRP3Obj::set_lowthreshold_manhole(bool value) {
  set_has_lowthreshold_manhole();
  lowthreshold_manhole_ = value;
  // @@protoc_insertion_point(field_set:atd.mwrprocess.Dt_Rrecord_MRRP3Obj.Lowthreshold_manhole)
}

// optional .atd.mwrprocess.Dt_Rrecord_MRRP3Obj.Radar_Fusion radar_fusion_status = 8;
inline bool Dt_Rrecord_MRRP3Obj::has_radar_fusion_status() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Dt_Rrecord_MRRP3Obj::set_has_radar_fusion_status() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Dt_Rrecord_MRRP3Obj::clear_has_radar_fusion_status() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Dt_Rrecord_MRRP3Obj::clear_radar_fusion_status() {
  radar_fusion_status_ = 0;
  clear_has_radar_fusion_status();
}
inline ::atd::mwrprocess::Dt_Rrecord_MRRP3Obj_Radar_Fusion Dt_Rrecord_MRRP3Obj::radar_fusion_status() const {
  // @@protoc_insertion_point(field_get:atd.mwrprocess.Dt_Rrecord_MRRP3Obj.radar_fusion_status)
  return static_cast< ::atd::mwrprocess::Dt_Rrecord_MRRP3Obj_Radar_Fusion >(radar_fusion_status_);
}
inline void Dt_Rrecord_MRRP3Obj::set_radar_fusion_status(::atd::mwrprocess::Dt_Rrecord_MRRP3Obj_Radar_Fusion value) {
  assert(::atd::mwrprocess::Dt_Rrecord_MRRP3Obj_Radar_Fusion_IsValid(value));
  set_has_radar_fusion_status();
  radar_fusion_status_ = value;
  // @@protoc_insertion_point(field_set:atd.mwrprocess.Dt_Rrecord_MRRP3Obj.radar_fusion_status)
}

// optional int32 status_flag_3 = 4;
inline bool Dt_Rrecord_MRRP3Obj::has_status_flag_3() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Dt_Rrecord_MRRP3Obj::set_has_status_flag_3() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Dt_Rrecord_MRRP3Obj::clear_has_status_flag_3() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Dt_Rrecord_MRRP3Obj::clear_status_flag_3() {
  status_flag_3_ = 0;
  clear_has_status_flag_3();
}
inline ::google::protobuf::int32 Dt_Rrecord_MRRP3Obj::status_flag_3() const {
  // @@protoc_insertion_point(field_get:atd.mwrprocess.Dt_Rrecord_MRRP3Obj.status_flag_3)
  return status_flag_3_;
}
inline void Dt_Rrecord_MRRP3Obj::set_status_flag_3(::google::protobuf::int32 value) {
  set_has_status_flag_3();
  status_flag_3_ = value;
  // @@protoc_insertion_point(field_set:atd.mwrprocess.Dt_Rrecord_MRRP3Obj.status_flag_3)
}

// optional int32 status_flag_4 = 5;
inline bool Dt_Rrecord_MRRP3Obj::has_status_flag_4() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Dt_Rrecord_MRRP3Obj::set_has_status_flag_4() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Dt_Rrecord_MRRP3Obj::clear_has_status_flag_4() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Dt_Rrecord_MRRP3Obj::clear_status_flag_4() {
  status_flag_4_ = 0;
  clear_has_status_flag_4();
}
inline ::google::protobuf::int32 Dt_Rrecord_MRRP3Obj::status_flag_4() const {
  // @@protoc_insertion_point(field_get:atd.mwrprocess.Dt_Rrecord_MRRP3Obj.status_flag_4)
  return status_flag_4_;
}
inline void Dt_Rrecord_MRRP3Obj::set_status_flag_4(::google::protobuf::int32 value) {
  set_has_status_flag_4();
  status_flag_4_ = value;
  // @@protoc_insertion_point(field_set:atd.mwrprocess.Dt_Rrecord_MRRP3Obj.status_flag_4)
}

// optional bool isUpdated = 9;
inline bool Dt_Rrecord_MRRP3Obj::has_isupdated() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Dt_Rrecord_MRRP3Obj::set_has_isupdated() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Dt_Rrecord_MRRP3Obj::clear_has_isupdated() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Dt_Rrecord_MRRP3Obj::clear_isupdated() {
  isupdated_ = false;
  clear_has_isupdated();
}
inline bool Dt_Rrecord_MRRP3Obj::isupdated() const {
  // @@protoc_insertion_point(field_get:atd.mwrprocess.Dt_Rrecord_MRRP3Obj.isUpdated)
  return isupdated_;
}
inline void Dt_Rrecord_MRRP3Obj::set_isupdated(bool value) {
  set_has_isupdated();
  isupdated_ = value;
  // @@protoc_insertion_point(field_set:atd.mwrprocess.Dt_Rrecord_MRRP3Obj.isUpdated)
}

// -------------------------------------------------------------------

// MidRangeObj

// optional .atd.mwrprocess.Dt_Rrecord_MRRP0Obj Part0 = 1;
inline bool MidRangeObj::has_part0() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MidRangeObj::set_has_part0() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MidRangeObj::clear_has_part0() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MidRangeObj::clear_part0() {
  if (part0_ != NULL) part0_->::atd::mwrprocess::Dt_Rrecord_MRRP0Obj::Clear();
  clear_has_part0();
}
inline const ::atd::mwrprocess::Dt_Rrecord_MRRP0Obj& MidRangeObj::part0() const {
  // @@protoc_insertion_point(field_get:atd.mwrprocess.MidRangeObj.Part0)
  return part0_ != NULL ? *part0_
                         : *::atd::mwrprocess::Dt_Rrecord_MRRP0Obj::internal_default_instance();
}
inline ::atd::mwrprocess::Dt_Rrecord_MRRP0Obj* MidRangeObj::mutable_part0() {
  set_has_part0();
  if (part0_ == NULL) {
    part0_ = new ::atd::mwrprocess::Dt_Rrecord_MRRP0Obj;
  }
  // @@protoc_insertion_point(field_mutable:atd.mwrprocess.MidRangeObj.Part0)
  return part0_;
}
inline ::atd::mwrprocess::Dt_Rrecord_MRRP0Obj* MidRangeObj::release_part0() {
  // @@protoc_insertion_point(field_release:atd.mwrprocess.MidRangeObj.Part0)
  clear_has_part0();
  ::atd::mwrprocess::Dt_Rrecord_MRRP0Obj* temp = part0_;
  part0_ = NULL;
  return temp;
}
inline void MidRangeObj::set_allocated_part0(::atd::mwrprocess::Dt_Rrecord_MRRP0Obj* part0) {
  delete part0_;
  part0_ = part0;
  if (part0) {
    set_has_part0();
  } else {
    clear_has_part0();
  }
  // @@protoc_insertion_point(field_set_allocated:atd.mwrprocess.MidRangeObj.Part0)
}

// optional .atd.mwrprocess.Dt_Rrecord_MRRP1Obj Part1 = 2;
inline bool MidRangeObj::has_part1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MidRangeObj::set_has_part1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MidRangeObj::clear_has_part1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MidRangeObj::clear_part1() {
  if (part1_ != NULL) part1_->::atd::mwrprocess::Dt_Rrecord_MRRP1Obj::Clear();
  clear_has_part1();
}
inline const ::atd::mwrprocess::Dt_Rrecord_MRRP1Obj& MidRangeObj::part1() const {
  // @@protoc_insertion_point(field_get:atd.mwrprocess.MidRangeObj.Part1)
  return part1_ != NULL ? *part1_
                         : *::atd::mwrprocess::Dt_Rrecord_MRRP1Obj::internal_default_instance();
}
inline ::atd::mwrprocess::Dt_Rrecord_MRRP1Obj* MidRangeObj::mutable_part1() {
  set_has_part1();
  if (part1_ == NULL) {
    part1_ = new ::atd::mwrprocess::Dt_Rrecord_MRRP1Obj;
  }
  // @@protoc_insertion_point(field_mutable:atd.mwrprocess.MidRangeObj.Part1)
  return part1_;
}
inline ::atd::mwrprocess::Dt_Rrecord_MRRP1Obj* MidRangeObj::release_part1() {
  // @@protoc_insertion_point(field_release:atd.mwrprocess.MidRangeObj.Part1)
  clear_has_part1();
  ::atd::mwrprocess::Dt_Rrecord_MRRP1Obj* temp = part1_;
  part1_ = NULL;
  return temp;
}
inline void MidRangeObj::set_allocated_part1(::atd::mwrprocess::Dt_Rrecord_MRRP1Obj* part1) {
  delete part1_;
  part1_ = part1;
  if (part1) {
    set_has_part1();
  } else {
    clear_has_part1();
  }
  // @@protoc_insertion_point(field_set_allocated:atd.mwrprocess.MidRangeObj.Part1)
}

// -------------------------------------------------------------------

// LongRangeObj

// optional .atd.mwrprocess.Dt_Rrecord_MRRP0Obj Part0 = 1;
inline bool LongRangeObj::has_part0() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LongRangeObj::set_has_part0() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LongRangeObj::clear_has_part0() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LongRangeObj::clear_part0() {
  if (part0_ != NULL) part0_->::atd::mwrprocess::Dt_Rrecord_MRRP0Obj::Clear();
  clear_has_part0();
}
inline const ::atd::mwrprocess::Dt_Rrecord_MRRP0Obj& LongRangeObj::part0() const {
  // @@protoc_insertion_point(field_get:atd.mwrprocess.LongRangeObj.Part0)
  return part0_ != NULL ? *part0_
                         : *::atd::mwrprocess::Dt_Rrecord_MRRP0Obj::internal_default_instance();
}
inline ::atd::mwrprocess::Dt_Rrecord_MRRP0Obj* LongRangeObj::mutable_part0() {
  set_has_part0();
  if (part0_ == NULL) {
    part0_ = new ::atd::mwrprocess::Dt_Rrecord_MRRP0Obj;
  }
  // @@protoc_insertion_point(field_mutable:atd.mwrprocess.LongRangeObj.Part0)
  return part0_;
}
inline ::atd::mwrprocess::Dt_Rrecord_MRRP0Obj* LongRangeObj::release_part0() {
  // @@protoc_insertion_point(field_release:atd.mwrprocess.LongRangeObj.Part0)
  clear_has_part0();
  ::atd::mwrprocess::Dt_Rrecord_MRRP0Obj* temp = part0_;
  part0_ = NULL;
  return temp;
}
inline void LongRangeObj::set_allocated_part0(::atd::mwrprocess::Dt_Rrecord_MRRP0Obj* part0) {
  delete part0_;
  part0_ = part0;
  if (part0) {
    set_has_part0();
  } else {
    clear_has_part0();
  }
  // @@protoc_insertion_point(field_set_allocated:atd.mwrprocess.LongRangeObj.Part0)
}

// optional .atd.mwrprocess.Dt_Rrecord_MRRP2Obj Part2 = 2;
inline bool LongRangeObj::has_part2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LongRangeObj::set_has_part2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LongRangeObj::clear_has_part2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LongRangeObj::clear_part2() {
  if (part2_ != NULL) part2_->::atd::mwrprocess::Dt_Rrecord_MRRP2Obj::Clear();
  clear_has_part2();
}
inline const ::atd::mwrprocess::Dt_Rrecord_MRRP2Obj& LongRangeObj::part2() const {
  // @@protoc_insertion_point(field_get:atd.mwrprocess.LongRangeObj.Part2)
  return part2_ != NULL ? *part2_
                         : *::atd::mwrprocess::Dt_Rrecord_MRRP2Obj::internal_default_instance();
}
inline ::atd::mwrprocess::Dt_Rrecord_MRRP2Obj* LongRangeObj::mutable_part2() {
  set_has_part2();
  if (part2_ == NULL) {
    part2_ = new ::atd::mwrprocess::Dt_Rrecord_MRRP2Obj;
  }
  // @@protoc_insertion_point(field_mutable:atd.mwrprocess.LongRangeObj.Part2)
  return part2_;
}
inline ::atd::mwrprocess::Dt_Rrecord_MRRP2Obj* LongRangeObj::release_part2() {
  // @@protoc_insertion_point(field_release:atd.mwrprocess.LongRangeObj.Part2)
  clear_has_part2();
  ::atd::mwrprocess::Dt_Rrecord_MRRP2Obj* temp = part2_;
  part2_ = NULL;
  return temp;
}
inline void LongRangeObj::set_allocated_part2(::atd::mwrprocess::Dt_Rrecord_MRRP2Obj* part2) {
  delete part2_;
  part2_ = part2;
  if (part2) {
    set_has_part2();
  } else {
    clear_has_part2();
  }
  // @@protoc_insertion_point(field_set_allocated:atd.mwrprocess.LongRangeObj.Part2)
}

// optional .atd.mwrprocess.Dt_Rrecord_MRRP3Obj Part3 = 3;
inline bool LongRangeObj::has_part3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LongRangeObj::set_has_part3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LongRangeObj::clear_has_part3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LongRangeObj::clear_part3() {
  if (part3_ != NULL) part3_->::atd::mwrprocess::Dt_Rrecord_MRRP3Obj::Clear();
  clear_has_part3();
}
inline const ::atd::mwrprocess::Dt_Rrecord_MRRP3Obj& LongRangeObj::part3() const {
  // @@protoc_insertion_point(field_get:atd.mwrprocess.LongRangeObj.Part3)
  return part3_ != NULL ? *part3_
                         : *::atd::mwrprocess::Dt_Rrecord_MRRP3Obj::internal_default_instance();
}
inline ::atd::mwrprocess::Dt_Rrecord_MRRP3Obj* LongRangeObj::mutable_part3() {
  set_has_part3();
  if (part3_ == NULL) {
    part3_ = new ::atd::mwrprocess::Dt_Rrecord_MRRP3Obj;
  }
  // @@protoc_insertion_point(field_mutable:atd.mwrprocess.LongRangeObj.Part3)
  return part3_;
}
inline ::atd::mwrprocess::Dt_Rrecord_MRRP3Obj* LongRangeObj::release_part3() {
  // @@protoc_insertion_point(field_release:atd.mwrprocess.LongRangeObj.Part3)
  clear_has_part3();
  ::atd::mwrprocess::Dt_Rrecord_MRRP3Obj* temp = part3_;
  part3_ = NULL;
  return temp;
}
inline void LongRangeObj::set_allocated_part3(::atd::mwrprocess::Dt_Rrecord_MRRP3Obj* part3) {
  delete part3_;
  part3_ = part3;
  if (part3) {
    set_has_part3();
  } else {
    clear_has_part3();
  }
  // @@protoc_insertion_point(field_set_allocated:atd.mwrprocess.LongRangeObj.Part3)
}

// -------------------------------------------------------------------

// FrontDensoMRRObjs

// optional .atd.common.Header header = 1;
inline bool FrontDensoMRRObjs::has_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FrontDensoMRRObjs::set_has_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FrontDensoMRRObjs::clear_has_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FrontDensoMRRObjs::clear_header() {
  if (header_ != NULL) header_->::atd::common::Header::Clear();
  clear_has_header();
}
inline const ::atd::common::Header& FrontDensoMRRObjs::header() const {
  // @@protoc_insertion_point(field_get:atd.mwrprocess.FrontDensoMRRObjs.header)
  return header_ != NULL ? *header_
                         : *::atd::common::Header::internal_default_instance();
}
inline ::atd::common::Header* FrontDensoMRRObjs::mutable_header() {
  set_has_header();
  if (header_ == NULL) {
    header_ = new ::atd::common::Header;
  }
  // @@protoc_insertion_point(field_mutable:atd.mwrprocess.FrontDensoMRRObjs.header)
  return header_;
}
inline ::atd::common::Header* FrontDensoMRRObjs::release_header() {
  // @@protoc_insertion_point(field_release:atd.mwrprocess.FrontDensoMRRObjs.header)
  clear_has_header();
  ::atd::common::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline void FrontDensoMRRObjs::set_allocated_header(::atd::common::Header* header) {
  delete header_;
  header_ = header;
  if (header) {
    set_has_header();
  } else {
    clear_has_header();
  }
  // @@protoc_insertion_point(field_set_allocated:atd.mwrprocess.FrontDensoMRRObjs.header)
}

// optional .atd.common.Reserved reservedmsg = 2;
inline bool FrontDensoMRRObjs::has_reservedmsg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FrontDensoMRRObjs::set_has_reservedmsg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FrontDensoMRRObjs::clear_has_reservedmsg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FrontDensoMRRObjs::clear_reservedmsg() {
  if (reservedmsg_ != NULL) reservedmsg_->::atd::common::Reserved::Clear();
  clear_has_reservedmsg();
}
inline const ::atd::common::Reserved& FrontDensoMRRObjs::reservedmsg() const {
  // @@protoc_insertion_point(field_get:atd.mwrprocess.FrontDensoMRRObjs.reservedmsg)
  return reservedmsg_ != NULL ? *reservedmsg_
                         : *::atd::common::Reserved::internal_default_instance();
}
inline ::atd::common::Reserved* FrontDensoMRRObjs::mutable_reservedmsg() {
  set_has_reservedmsg();
  if (reservedmsg_ == NULL) {
    reservedmsg_ = new ::atd::common::Reserved;
  }
  // @@protoc_insertion_point(field_mutable:atd.mwrprocess.FrontDensoMRRObjs.reservedmsg)
  return reservedmsg_;
}
inline ::atd::common::Reserved* FrontDensoMRRObjs::release_reservedmsg() {
  // @@protoc_insertion_point(field_release:atd.mwrprocess.FrontDensoMRRObjs.reservedmsg)
  clear_has_reservedmsg();
  ::atd::common::Reserved* temp = reservedmsg_;
  reservedmsg_ = NULL;
  return temp;
}
inline void FrontDensoMRRObjs::set_allocated_reservedmsg(::atd::common::Reserved* reservedmsg) {
  delete reservedmsg_;
  reservedmsg_ = reservedmsg;
  if (reservedmsg) {
    set_has_reservedmsg();
  } else {
    clear_has_reservedmsg();
  }
  // @@protoc_insertion_point(field_set_allocated:atd.mwrprocess.FrontDensoMRRObjs.reservedmsg)
}

// repeated .atd.mwrprocess.LongRangeObj LongRangeObj_0_7 = 3;
inline int FrontDensoMRRObjs::longrangeobj_0_7_size() const {
  return longrangeobj_0_7_.size();
}
inline void FrontDensoMRRObjs::clear_longrangeobj_0_7() {
  longrangeobj_0_7_.Clear();
}
inline const ::atd::mwrprocess::LongRangeObj& FrontDensoMRRObjs::longrangeobj_0_7(int index) const {
  // @@protoc_insertion_point(field_get:atd.mwrprocess.FrontDensoMRRObjs.LongRangeObj_0_7)
  return longrangeobj_0_7_.Get(index);
}
inline ::atd::mwrprocess::LongRangeObj* FrontDensoMRRObjs::mutable_longrangeobj_0_7(int index) {
  // @@protoc_insertion_point(field_mutable:atd.mwrprocess.FrontDensoMRRObjs.LongRangeObj_0_7)
  return longrangeobj_0_7_.Mutable(index);
}
inline ::atd::mwrprocess::LongRangeObj* FrontDensoMRRObjs::add_longrangeobj_0_7() {
  // @@protoc_insertion_point(field_add:atd.mwrprocess.FrontDensoMRRObjs.LongRangeObj_0_7)
  return longrangeobj_0_7_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::atd::mwrprocess::LongRangeObj >*
FrontDensoMRRObjs::mutable_longrangeobj_0_7() {
  // @@protoc_insertion_point(field_mutable_list:atd.mwrprocess.FrontDensoMRRObjs.LongRangeObj_0_7)
  return &longrangeobj_0_7_;
}
inline const ::google::protobuf::RepeatedPtrField< ::atd::mwrprocess::LongRangeObj >&
FrontDensoMRRObjs::longrangeobj_0_7() const {
  // @@protoc_insertion_point(field_list:atd.mwrprocess.FrontDensoMRRObjs.LongRangeObj_0_7)
  return longrangeobj_0_7_;
}

// repeated .atd.mwrprocess.MidRangeObj MidRangeObj_8_15 = 4;
inline int FrontDensoMRRObjs::midrangeobj_8_15_size() const {
  return midrangeobj_8_15_.size();
}
inline void FrontDensoMRRObjs::clear_midrangeobj_8_15() {
  midrangeobj_8_15_.Clear();
}
inline const ::atd::mwrprocess::MidRangeObj& FrontDensoMRRObjs::midrangeobj_8_15(int index) const {
  // @@protoc_insertion_point(field_get:atd.mwrprocess.FrontDensoMRRObjs.MidRangeObj_8_15)
  return midrangeobj_8_15_.Get(index);
}
inline ::atd::mwrprocess::MidRangeObj* FrontDensoMRRObjs::mutable_midrangeobj_8_15(int index) {
  // @@protoc_insertion_point(field_mutable:atd.mwrprocess.FrontDensoMRRObjs.MidRangeObj_8_15)
  return midrangeobj_8_15_.Mutable(index);
}
inline ::atd::mwrprocess::MidRangeObj* FrontDensoMRRObjs::add_midrangeobj_8_15() {
  // @@protoc_insertion_point(field_add:atd.mwrprocess.FrontDensoMRRObjs.MidRangeObj_8_15)
  return midrangeobj_8_15_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::atd::mwrprocess::MidRangeObj >*
FrontDensoMRRObjs::mutable_midrangeobj_8_15() {
  // @@protoc_insertion_point(field_mutable_list:atd.mwrprocess.FrontDensoMRRObjs.MidRangeObj_8_15)
  return &midrangeobj_8_15_;
}
inline const ::google::protobuf::RepeatedPtrField< ::atd::mwrprocess::MidRangeObj >&
FrontDensoMRRObjs::midrangeobj_8_15() const {
  // @@protoc_insertion_point(field_list:atd.mwrprocess.FrontDensoMRRObjs.MidRangeObj_8_15)
  return midrangeobj_8_15_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace mwrprocess
}  // namespace atd

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::atd::mwrprocess::Dt_Rrecord_MRRP0Obj_Status_FLag_1> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::atd::mwrprocess::Dt_Rrecord_MRRP0Obj_Status_FLag_2> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::atd::mwrprocess::Dt_Rrecord_MRRP1Obj_Status_Flag_5> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::atd::mwrprocess::Dt_Rrecord_MRRP3Obj_Status_Flag_3> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::atd::mwrprocess::Dt_Rrecord_MRRP3Obj_Radar_Fusion> : ::google::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_modules_2fipc_2fmessage_2fprotobuf_2fMwrProcess_2fDensoMrr_2eproto__INCLUDED
