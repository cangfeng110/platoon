// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/ipc/message/protobuf/monitor/monitor_log/monitor_log.proto

#ifndef PROTOBUF_modules_2fipc_2fmessage_2fprotobuf_2fmonitor_2fmonitor_5flog_2fmonitor_5flog_2eproto__INCLUDED
#define PROTOBUF_modules_2fipc_2fmessage_2fprotobuf_2fmonitor_2fmonitor_5flog_2fmonitor_5flog_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
#include "modules/ipc/message/protobuf/common/header.pb.h"
#include "modules/ipc/message/protobuf/common/reserved.pb.h"
// @@protoc_insertion_point(includes)
namespace atd {
namespace common {
class Header;
class HeaderDefaultTypeInternal;
extern HeaderDefaultTypeInternal _Header_default_instance_;
class Reserved;
class ReservedDefaultTypeInternal;
extern ReservedDefaultTypeInternal _Reserved_default_instance_;
}  // namespace common
namespace ipc {
namespace monitor {
class MonitorMessage;
class MonitorMessageDefaultTypeInternal;
extern MonitorMessageDefaultTypeInternal _MonitorMessage_default_instance_;
class MonitorMessageItem;
class MonitorMessageItemDefaultTypeInternal;
extern MonitorMessageItemDefaultTypeInternal _MonitorMessageItem_default_instance_;
}  // namespace monitor
}  // namespace ipc
}  // namespace atd

namespace atd {
namespace ipc {
namespace monitor {

namespace protobuf_modules_2fipc_2fmessage_2fprotobuf_2fmonitor_2fmonitor_5flog_2fmonitor_5flog_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_modules_2fipc_2fmessage_2fprotobuf_2fmonitor_2fmonitor_5flog_2fmonitor_5flog_2eproto

enum MonitorMessageItem_MessageSource {
  MonitorMessageItem_MessageSource_UNKNOWN = 1,
  MonitorMessageItem_MessageSource_CANBUS = 2,
  MonitorMessageItem_MessageSource_CONTROL = 3,
  MonitorMessageItem_MessageSource_DECISION = 4,
  MonitorMessageItem_MessageSource_LOCALIZATION = 5,
  MonitorMessageItem_MessageSource_PLANNING = 6,
  MonitorMessageItem_MessageSource_PREDICTION = 7,
  MonitorMessageItem_MessageSource_SIMULATOR = 8,
  MonitorMessageItem_MessageSource_HWSYS = 9,
  MonitorMessageItem_MessageSource_ROUTING = 10,
  MonitorMessageItem_MessageSource_MONITOR = 11,
  MonitorMessageItem_MessageSource_HMI = 12,
  MonitorMessageItem_MessageSource_DR = 13,
  MonitorMessageItem_MessageSource_PERCEPTION = 14,
  MonitorMessageItem_MessageSource_MAP = 15,
  MonitorMessageItem_MessageSource_MAPBUFFER = 16,
  MonitorMessageItem_MessageSource_MATCH = 17,
  MonitorMessageItem_MessageSource_LOCALIZATIONABS = 18,
  MonitorMessageItem_MessageSource_TEST_ON_PC = 19,
  MonitorMessageItem_MessageSource_FMS_TCP = 20
};
bool MonitorMessageItem_MessageSource_IsValid(int value);
const MonitorMessageItem_MessageSource MonitorMessageItem_MessageSource_MessageSource_MIN = MonitorMessageItem_MessageSource_UNKNOWN;
const MonitorMessageItem_MessageSource MonitorMessageItem_MessageSource_MessageSource_MAX = MonitorMessageItem_MessageSource_FMS_TCP;
const int MonitorMessageItem_MessageSource_MessageSource_ARRAYSIZE = MonitorMessageItem_MessageSource_MessageSource_MAX + 1;

enum MonitorMessageItem_LogLevel {
  MonitorMessageItem_LogLevel_INFO = 0,
  MonitorMessageItem_LogLevel_WARN = 1,
  MonitorMessageItem_LogLevel_ERROR = 2,
  MonitorMessageItem_LogLevel_FATAL = 3,
  MonitorMessageItem_LogLevel_DEBUG1 = 4,
  MonitorMessageItem_LogLevel_DEBUG2 = 5,
  MonitorMessageItem_LogLevel_DEBUG3 = 6
};
bool MonitorMessageItem_LogLevel_IsValid(int value);
const MonitorMessageItem_LogLevel MonitorMessageItem_LogLevel_LogLevel_MIN = MonitorMessageItem_LogLevel_INFO;
const MonitorMessageItem_LogLevel MonitorMessageItem_LogLevel_LogLevel_MAX = MonitorMessageItem_LogLevel_DEBUG3;
const int MonitorMessageItem_LogLevel_LogLevel_ARRAYSIZE = MonitorMessageItem_LogLevel_LogLevel_MAX + 1;

// ===================================================================

class MonitorMessageItem : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:atd.ipc.monitor.MonitorMessageItem) */ {
 public:
  MonitorMessageItem();
  virtual ~MonitorMessageItem();

  MonitorMessageItem(const MonitorMessageItem& from);

  inline MonitorMessageItem& operator=(const MonitorMessageItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const MonitorMessageItem& default_instance();

  static inline const MonitorMessageItem* internal_default_instance() {
    return reinterpret_cast<const MonitorMessageItem*>(
               &_MonitorMessageItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(MonitorMessageItem* other);

  // implements Message ----------------------------------------------

  inline MonitorMessageItem* New() const PROTOBUF_FINAL { return New(NULL); }

  MonitorMessageItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const MonitorMessageItem& from);
  void MergeFrom(const MonitorMessageItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MonitorMessageItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MonitorMessageItem_MessageSource MessageSource;
  static const MessageSource UNKNOWN =
    MonitorMessageItem_MessageSource_UNKNOWN;
  static const MessageSource CANBUS =
    MonitorMessageItem_MessageSource_CANBUS;
  static const MessageSource CONTROL =
    MonitorMessageItem_MessageSource_CONTROL;
  static const MessageSource DECISION =
    MonitorMessageItem_MessageSource_DECISION;
  static const MessageSource LOCALIZATION =
    MonitorMessageItem_MessageSource_LOCALIZATION;
  static const MessageSource PLANNING =
    MonitorMessageItem_MessageSource_PLANNING;
  static const MessageSource PREDICTION =
    MonitorMessageItem_MessageSource_PREDICTION;
  static const MessageSource SIMULATOR =
    MonitorMessageItem_MessageSource_SIMULATOR;
  static const MessageSource HWSYS =
    MonitorMessageItem_MessageSource_HWSYS;
  static const MessageSource ROUTING =
    MonitorMessageItem_MessageSource_ROUTING;
  static const MessageSource MONITOR =
    MonitorMessageItem_MessageSource_MONITOR;
  static const MessageSource HMI =
    MonitorMessageItem_MessageSource_HMI;
  static const MessageSource DR =
    MonitorMessageItem_MessageSource_DR;
  static const MessageSource PERCEPTION =
    MonitorMessageItem_MessageSource_PERCEPTION;
  static const MessageSource MAP =
    MonitorMessageItem_MessageSource_MAP;
  static const MessageSource MAPBUFFER =
    MonitorMessageItem_MessageSource_MAPBUFFER;
  static const MessageSource MATCH =
    MonitorMessageItem_MessageSource_MATCH;
  static const MessageSource LOCALIZATIONABS =
    MonitorMessageItem_MessageSource_LOCALIZATIONABS;
  static const MessageSource TEST_ON_PC =
    MonitorMessageItem_MessageSource_TEST_ON_PC;
  static const MessageSource FMS_TCP =
    MonitorMessageItem_MessageSource_FMS_TCP;
  static inline bool MessageSource_IsValid(int value) {
    return MonitorMessageItem_MessageSource_IsValid(value);
  }
  static const MessageSource MessageSource_MIN =
    MonitorMessageItem_MessageSource_MessageSource_MIN;
  static const MessageSource MessageSource_MAX =
    MonitorMessageItem_MessageSource_MessageSource_MAX;
  static const int MessageSource_ARRAYSIZE =
    MonitorMessageItem_MessageSource_MessageSource_ARRAYSIZE;

  typedef MonitorMessageItem_LogLevel LogLevel;
  static const LogLevel INFO =
    MonitorMessageItem_LogLevel_INFO;
  static const LogLevel WARN =
    MonitorMessageItem_LogLevel_WARN;
  static const LogLevel ERROR =
    MonitorMessageItem_LogLevel_ERROR;
  static const LogLevel FATAL =
    MonitorMessageItem_LogLevel_FATAL;
  static const LogLevel DEBUG1 =
    MonitorMessageItem_LogLevel_DEBUG1;
  static const LogLevel DEBUG2 =
    MonitorMessageItem_LogLevel_DEBUG2;
  static const LogLevel DEBUG3 =
    MonitorMessageItem_LogLevel_DEBUG3;
  static inline bool LogLevel_IsValid(int value) {
    return MonitorMessageItem_LogLevel_IsValid(value);
  }
  static const LogLevel LogLevel_MIN =
    MonitorMessageItem_LogLevel_LogLevel_MIN;
  static const LogLevel LogLevel_MAX =
    MonitorMessageItem_LogLevel_LogLevel_MAX;
  static const int LogLevel_ARRAYSIZE =
    MonitorMessageItem_LogLevel_LogLevel_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // optional string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional .atd.ipc.monitor.MonitorMessageItem.LogLevel log_level = 3 [default = INFO];
  bool has_log_level() const;
  void clear_log_level();
  static const int kLogLevelFieldNumber = 3;
  ::atd::ipc::monitor::MonitorMessageItem_LogLevel log_level() const;
  void set_log_level(::atd::ipc::monitor::MonitorMessageItem_LogLevel value);

  // optional .atd.ipc.monitor.MonitorMessageItem.MessageSource source = 1 [default = UNKNOWN];
  bool has_source() const;
  void clear_source();
  static const int kSourceFieldNumber = 1;
  ::atd::ipc::monitor::MonitorMessageItem_MessageSource source() const;
  void set_source(::atd::ipc::monitor::MonitorMessageItem_MessageSource value);

  // @@protoc_insertion_point(class_scope:atd.ipc.monitor.MonitorMessageItem)
 private:
  void set_has_source();
  void clear_has_source();
  void set_has_msg();
  void clear_has_msg();
  void set_has_log_level();
  void clear_has_log_level();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  int log_level_;
  int source_;
  friend struct protobuf_modules_2fipc_2fmessage_2fprotobuf_2fmonitor_2fmonitor_5flog_2fmonitor_5flog_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MonitorMessage : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:atd.ipc.monitor.MonitorMessage) */ {
 public:
  MonitorMessage();
  virtual ~MonitorMessage();

  MonitorMessage(const MonitorMessage& from);

  inline MonitorMessage& operator=(const MonitorMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const MonitorMessage& default_instance();

  static inline const MonitorMessage* internal_default_instance() {
    return reinterpret_cast<const MonitorMessage*>(
               &_MonitorMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(MonitorMessage* other);

  // implements Message ----------------------------------------------

  inline MonitorMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  MonitorMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const MonitorMessage& from);
  void MergeFrom(const MonitorMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MonitorMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .atd.ipc.monitor.MonitorMessageItem item = 3;
  int item_size() const;
  void clear_item();
  static const int kItemFieldNumber = 3;
  const ::atd::ipc::monitor::MonitorMessageItem& item(int index) const;
  ::atd::ipc::monitor::MonitorMessageItem* mutable_item(int index);
  ::atd::ipc::monitor::MonitorMessageItem* add_item();
  ::google::protobuf::RepeatedPtrField< ::atd::ipc::monitor::MonitorMessageItem >*
      mutable_item();
  const ::google::protobuf::RepeatedPtrField< ::atd::ipc::monitor::MonitorMessageItem >&
      item() const;

  // optional .atd.common.Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::atd::common::Header& header() const;
  ::atd::common::Header* mutable_header();
  ::atd::common::Header* release_header();
  void set_allocated_header(::atd::common::Header* header);

  // optional .atd.common.Reserved reservedmsg = 2;
  bool has_reservedmsg() const;
  void clear_reservedmsg();
  static const int kReservedmsgFieldNumber = 2;
  const ::atd::common::Reserved& reservedmsg() const;
  ::atd::common::Reserved* mutable_reservedmsg();
  ::atd::common::Reserved* release_reservedmsg();
  void set_allocated_reservedmsg(::atd::common::Reserved* reservedmsg);

  // @@protoc_insertion_point(class_scope:atd.ipc.monitor.MonitorMessage)
 private:
  void set_has_header();
  void clear_has_header();
  void set_has_reservedmsg();
  void clear_has_reservedmsg();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::atd::ipc::monitor::MonitorMessageItem > item_;
  ::atd::common::Header* header_;
  ::atd::common::Reserved* reservedmsg_;
  friend struct protobuf_modules_2fipc_2fmessage_2fprotobuf_2fmonitor_2fmonitor_5flog_2fmonitor_5flog_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MonitorMessageItem

// optional .atd.ipc.monitor.MonitorMessageItem.MessageSource source = 1 [default = UNKNOWN];
inline bool MonitorMessageItem::has_source() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MonitorMessageItem::set_has_source() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MonitorMessageItem::clear_has_source() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MonitorMessageItem::clear_source() {
  source_ = 1;
  clear_has_source();
}
inline ::atd::ipc::monitor::MonitorMessageItem_MessageSource MonitorMessageItem::source() const {
  // @@protoc_insertion_point(field_get:atd.ipc.monitor.MonitorMessageItem.source)
  return static_cast< ::atd::ipc::monitor::MonitorMessageItem_MessageSource >(source_);
}
inline void MonitorMessageItem::set_source(::atd::ipc::monitor::MonitorMessageItem_MessageSource value) {
  assert(::atd::ipc::monitor::MonitorMessageItem_MessageSource_IsValid(value));
  set_has_source();
  source_ = value;
  // @@protoc_insertion_point(field_set:atd.ipc.monitor.MonitorMessageItem.source)
}

// optional string msg = 2;
inline bool MonitorMessageItem::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MonitorMessageItem::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MonitorMessageItem::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MonitorMessageItem::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& MonitorMessageItem::msg() const {
  // @@protoc_insertion_point(field_get:atd.ipc.monitor.MonitorMessageItem.msg)
  return msg_.GetNoArena();
}
inline void MonitorMessageItem::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:atd.ipc.monitor.MonitorMessageItem.msg)
}
#if LANG_CXX11
inline void MonitorMessageItem::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:atd.ipc.monitor.MonitorMessageItem.msg)
}
#endif
inline void MonitorMessageItem::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:atd.ipc.monitor.MonitorMessageItem.msg)
}
inline void MonitorMessageItem::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:atd.ipc.monitor.MonitorMessageItem.msg)
}
inline ::std::string* MonitorMessageItem::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:atd.ipc.monitor.MonitorMessageItem.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MonitorMessageItem::release_msg() {
  // @@protoc_insertion_point(field_release:atd.ipc.monitor.MonitorMessageItem.msg)
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MonitorMessageItem::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:atd.ipc.monitor.MonitorMessageItem.msg)
}

// optional .atd.ipc.monitor.MonitorMessageItem.LogLevel log_level = 3 [default = INFO];
inline bool MonitorMessageItem::has_log_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MonitorMessageItem::set_has_log_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MonitorMessageItem::clear_has_log_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MonitorMessageItem::clear_log_level() {
  log_level_ = 0;
  clear_has_log_level();
}
inline ::atd::ipc::monitor::MonitorMessageItem_LogLevel MonitorMessageItem::log_level() const {
  // @@protoc_insertion_point(field_get:atd.ipc.monitor.MonitorMessageItem.log_level)
  return static_cast< ::atd::ipc::monitor::MonitorMessageItem_LogLevel >(log_level_);
}
inline void MonitorMessageItem::set_log_level(::atd::ipc::monitor::MonitorMessageItem_LogLevel value) {
  assert(::atd::ipc::monitor::MonitorMessageItem_LogLevel_IsValid(value));
  set_has_log_level();
  log_level_ = value;
  // @@protoc_insertion_point(field_set:atd.ipc.monitor.MonitorMessageItem.log_level)
}

// -------------------------------------------------------------------

// MonitorMessage

// optional .atd.common.Header header = 1;
inline bool MonitorMessage::has_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MonitorMessage::set_has_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MonitorMessage::clear_has_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MonitorMessage::clear_header() {
  if (header_ != NULL) header_->::atd::common::Header::Clear();
  clear_has_header();
}
inline const ::atd::common::Header& MonitorMessage::header() const {
  // @@protoc_insertion_point(field_get:atd.ipc.monitor.MonitorMessage.header)
  return header_ != NULL ? *header_
                         : *::atd::common::Header::internal_default_instance();
}
inline ::atd::common::Header* MonitorMessage::mutable_header() {
  set_has_header();
  if (header_ == NULL) {
    header_ = new ::atd::common::Header;
  }
  // @@protoc_insertion_point(field_mutable:atd.ipc.monitor.MonitorMessage.header)
  return header_;
}
inline ::atd::common::Header* MonitorMessage::release_header() {
  // @@protoc_insertion_point(field_release:atd.ipc.monitor.MonitorMessage.header)
  clear_has_header();
  ::atd::common::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline void MonitorMessage::set_allocated_header(::atd::common::Header* header) {
  delete header_;
  header_ = header;
  if (header) {
    set_has_header();
  } else {
    clear_has_header();
  }
  // @@protoc_insertion_point(field_set_allocated:atd.ipc.monitor.MonitorMessage.header)
}

// optional .atd.common.Reserved reservedmsg = 2;
inline bool MonitorMessage::has_reservedmsg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MonitorMessage::set_has_reservedmsg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MonitorMessage::clear_has_reservedmsg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MonitorMessage::clear_reservedmsg() {
  if (reservedmsg_ != NULL) reservedmsg_->::atd::common::Reserved::Clear();
  clear_has_reservedmsg();
}
inline const ::atd::common::Reserved& MonitorMessage::reservedmsg() const {
  // @@protoc_insertion_point(field_get:atd.ipc.monitor.MonitorMessage.reservedmsg)
  return reservedmsg_ != NULL ? *reservedmsg_
                         : *::atd::common::Reserved::internal_default_instance();
}
inline ::atd::common::Reserved* MonitorMessage::mutable_reservedmsg() {
  set_has_reservedmsg();
  if (reservedmsg_ == NULL) {
    reservedmsg_ = new ::atd::common::Reserved;
  }
  // @@protoc_insertion_point(field_mutable:atd.ipc.monitor.MonitorMessage.reservedmsg)
  return reservedmsg_;
}
inline ::atd::common::Reserved* MonitorMessage::release_reservedmsg() {
  // @@protoc_insertion_point(field_release:atd.ipc.monitor.MonitorMessage.reservedmsg)
  clear_has_reservedmsg();
  ::atd::common::Reserved* temp = reservedmsg_;
  reservedmsg_ = NULL;
  return temp;
}
inline void MonitorMessage::set_allocated_reservedmsg(::atd::common::Reserved* reservedmsg) {
  delete reservedmsg_;
  reservedmsg_ = reservedmsg;
  if (reservedmsg) {
    set_has_reservedmsg();
  } else {
    clear_has_reservedmsg();
  }
  // @@protoc_insertion_point(field_set_allocated:atd.ipc.monitor.MonitorMessage.reservedmsg)
}

// repeated .atd.ipc.monitor.MonitorMessageItem item = 3;
inline int MonitorMessage::item_size() const {
  return item_.size();
}
inline void MonitorMessage::clear_item() {
  item_.Clear();
}
inline const ::atd::ipc::monitor::MonitorMessageItem& MonitorMessage::item(int index) const {
  // @@protoc_insertion_point(field_get:atd.ipc.monitor.MonitorMessage.item)
  return item_.Get(index);
}
inline ::atd::ipc::monitor::MonitorMessageItem* MonitorMessage::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:atd.ipc.monitor.MonitorMessage.item)
  return item_.Mutable(index);
}
inline ::atd::ipc::monitor::MonitorMessageItem* MonitorMessage::add_item() {
  // @@protoc_insertion_point(field_add:atd.ipc.monitor.MonitorMessage.item)
  return item_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::atd::ipc::monitor::MonitorMessageItem >*
MonitorMessage::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:atd.ipc.monitor.MonitorMessage.item)
  return &item_;
}
inline const ::google::protobuf::RepeatedPtrField< ::atd::ipc::monitor::MonitorMessageItem >&
MonitorMessage::item() const {
  // @@protoc_insertion_point(field_list:atd.ipc.monitor.MonitorMessage.item)
  return item_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace monitor
}  // namespace ipc
}  // namespace atd

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::atd::ipc::monitor::MonitorMessageItem_MessageSource> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::atd::ipc::monitor::MonitorMessageItem_LogLevel> : ::google::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_modules_2fipc_2fmessage_2fprotobuf_2fmonitor_2fmonitor_5flog_2fmonitor_5flog_2eproto__INCLUDED
