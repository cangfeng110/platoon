// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/drivers/radar/HSC4/hsc4.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "hsc4.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace atd {
namespace drivers {
namespace hsc4 {
class Idcstatus1_11DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Idcstatus1_11> {
} _Idcstatus1_11_default_instance_;
class Vcustatus10_30DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Vcustatus10_30> {
} _Vcustatus10_30_default_instance_;
class Mecommon2_v2_560DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Mecommon2_v2_560> {
} _Mecommon2_v2_560_default_instance_;
class Idcstatus91_191DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Idcstatus91_191> {
} _Idcstatus91_191_default_instance_;
class Idcstatus3_13DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Idcstatus3_13> {
} _Idcstatus3_13_default_instance_;
class Idcstatus93_193DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Idcstatus93_193> {
} _Idcstatus93_193_default_instance_;
class Idcstatus92_192DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Idcstatus92_192> {
} _Idcstatus92_192_default_instance_;
class Idcstatus2_12DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Idcstatus2_12> {
} _Idcstatus2_12_default_instance_;
class Idcstatus7_17DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Idcstatus7_17> {
} _Idcstatus7_17_default_instance_;
class Idcstatus4_14DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Idcstatus4_14> {
} _Idcstatus4_14_default_instance_;
class Vcustatus4_24DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Vcustatus4_24> {
} _Vcustatus4_24_default_instance_;
class Vcustatus5_25DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Vcustatus5_25> {
} _Vcustatus5_25_default_instance_;
class Vcustatus6_26DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Vcustatus6_26> {
} _Vcustatus6_26_default_instance_;
class Vcustatus7_27DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Vcustatus7_27> {
} _Vcustatus7_27_default_instance_;
class Idcstatus5_15DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Idcstatus5_15> {
} _Idcstatus5_15_default_instance_;
class Vcustatus1_21DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Vcustatus1_21> {
} _Vcustatus1_21_default_instance_;
class Vcustatus2_22DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Vcustatus2_22> {
} _Vcustatus2_22_default_instance_;
class Vcustatus3_23DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Vcustatus3_23> {
} _Vcustatus3_23_default_instance_;
class Idcstatus9_19DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Idcstatus9_19> {
} _Idcstatus9_19_default_instance_;
class Idcstatus8_18DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Idcstatus8_18> {
} _Idcstatus8_18_default_instance_;
class Idcstatus6_16DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Idcstatus6_16> {
} _Idcstatus6_16_default_instance_;
class Vcustatus8_28DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Vcustatus8_28> {
} _Vcustatus8_28_default_instance_;
class Vcustatus9_29DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Vcustatus9_29> {
} _Vcustatus9_29_default_instance_;
class Hsc4DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Hsc4> {
} _Hsc4_default_instance_;

namespace protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};


void TableStruct::Shutdown() {
  _Idcstatus1_11_default_instance_.Shutdown();
  _Vcustatus10_30_default_instance_.Shutdown();
  _Mecommon2_v2_560_default_instance_.Shutdown();
  _Idcstatus91_191_default_instance_.Shutdown();
  _Idcstatus3_13_default_instance_.Shutdown();
  _Idcstatus93_193_default_instance_.Shutdown();
  _Idcstatus92_192_default_instance_.Shutdown();
  _Idcstatus2_12_default_instance_.Shutdown();
  _Idcstatus7_17_default_instance_.Shutdown();
  _Idcstatus4_14_default_instance_.Shutdown();
  _Vcustatus4_24_default_instance_.Shutdown();
  _Vcustatus5_25_default_instance_.Shutdown();
  _Vcustatus6_26_default_instance_.Shutdown();
  _Vcustatus7_27_default_instance_.Shutdown();
  _Idcstatus5_15_default_instance_.Shutdown();
  _Vcustatus1_21_default_instance_.Shutdown();
  _Vcustatus2_22_default_instance_.Shutdown();
  _Vcustatus3_23_default_instance_.Shutdown();
  _Idcstatus9_19_default_instance_.Shutdown();
  _Idcstatus8_18_default_instance_.Shutdown();
  _Idcstatus6_16_default_instance_.Shutdown();
  _Vcustatus8_28_default_instance_.Shutdown();
  _Vcustatus9_29_default_instance_.Shutdown();
  _Hsc4_default_instance_.Shutdown();
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::atd::common::protobuf_modules_2fipc_2fmessage_2fprotobuf_2fcommon_2fheader_2eproto::InitDefaults();
  _Idcstatus1_11_default_instance_.DefaultConstruct();
  _Vcustatus10_30_default_instance_.DefaultConstruct();
  _Mecommon2_v2_560_default_instance_.DefaultConstruct();
  _Idcstatus91_191_default_instance_.DefaultConstruct();
  _Idcstatus3_13_default_instance_.DefaultConstruct();
  _Idcstatus93_193_default_instance_.DefaultConstruct();
  _Idcstatus92_192_default_instance_.DefaultConstruct();
  _Idcstatus2_12_default_instance_.DefaultConstruct();
  _Idcstatus7_17_default_instance_.DefaultConstruct();
  _Idcstatus4_14_default_instance_.DefaultConstruct();
  _Vcustatus4_24_default_instance_.DefaultConstruct();
  _Vcustatus5_25_default_instance_.DefaultConstruct();
  _Vcustatus6_26_default_instance_.DefaultConstruct();
  _Vcustatus7_27_default_instance_.DefaultConstruct();
  _Idcstatus5_15_default_instance_.DefaultConstruct();
  _Vcustatus1_21_default_instance_.DefaultConstruct();
  _Vcustatus2_22_default_instance_.DefaultConstruct();
  _Vcustatus3_23_default_instance_.DefaultConstruct();
  _Idcstatus9_19_default_instance_.DefaultConstruct();
  _Idcstatus8_18_default_instance_.DefaultConstruct();
  _Idcstatus6_16_default_instance_.DefaultConstruct();
  _Vcustatus8_28_default_instance_.DefaultConstruct();
  _Vcustatus9_29_default_instance_.DefaultConstruct();
  _Hsc4_default_instance_.DefaultConstruct();
  _Hsc4_default_instance_.get_mutable()->idcstatus1_11_ = const_cast< ::atd::drivers::hsc4::Idcstatus1_11*>(
      ::atd::drivers::hsc4::Idcstatus1_11::internal_default_instance());
  _Hsc4_default_instance_.get_mutable()->vcustatus10_30_ = const_cast< ::atd::drivers::hsc4::Vcustatus10_30*>(
      ::atd::drivers::hsc4::Vcustatus10_30::internal_default_instance());
  _Hsc4_default_instance_.get_mutable()->mecommon2_v2_560_ = const_cast< ::atd::drivers::hsc4::Mecommon2_v2_560*>(
      ::atd::drivers::hsc4::Mecommon2_v2_560::internal_default_instance());
  _Hsc4_default_instance_.get_mutable()->idcstatus91_191_ = const_cast< ::atd::drivers::hsc4::Idcstatus91_191*>(
      ::atd::drivers::hsc4::Idcstatus91_191::internal_default_instance());
  _Hsc4_default_instance_.get_mutable()->idcstatus3_13_ = const_cast< ::atd::drivers::hsc4::Idcstatus3_13*>(
      ::atd::drivers::hsc4::Idcstatus3_13::internal_default_instance());
  _Hsc4_default_instance_.get_mutable()->idcstatus93_193_ = const_cast< ::atd::drivers::hsc4::Idcstatus93_193*>(
      ::atd::drivers::hsc4::Idcstatus93_193::internal_default_instance());
  _Hsc4_default_instance_.get_mutable()->idcstatus92_192_ = const_cast< ::atd::drivers::hsc4::Idcstatus92_192*>(
      ::atd::drivers::hsc4::Idcstatus92_192::internal_default_instance());
  _Hsc4_default_instance_.get_mutable()->idcstatus2_12_ = const_cast< ::atd::drivers::hsc4::Idcstatus2_12*>(
      ::atd::drivers::hsc4::Idcstatus2_12::internal_default_instance());
  _Hsc4_default_instance_.get_mutable()->idcstatus7_17_ = const_cast< ::atd::drivers::hsc4::Idcstatus7_17*>(
      ::atd::drivers::hsc4::Idcstatus7_17::internal_default_instance());
  _Hsc4_default_instance_.get_mutable()->idcstatus4_14_ = const_cast< ::atd::drivers::hsc4::Idcstatus4_14*>(
      ::atd::drivers::hsc4::Idcstatus4_14::internal_default_instance());
  _Hsc4_default_instance_.get_mutable()->vcustatus4_24_ = const_cast< ::atd::drivers::hsc4::Vcustatus4_24*>(
      ::atd::drivers::hsc4::Vcustatus4_24::internal_default_instance());
  _Hsc4_default_instance_.get_mutable()->vcustatus5_25_ = const_cast< ::atd::drivers::hsc4::Vcustatus5_25*>(
      ::atd::drivers::hsc4::Vcustatus5_25::internal_default_instance());
  _Hsc4_default_instance_.get_mutable()->vcustatus6_26_ = const_cast< ::atd::drivers::hsc4::Vcustatus6_26*>(
      ::atd::drivers::hsc4::Vcustatus6_26::internal_default_instance());
  _Hsc4_default_instance_.get_mutable()->vcustatus7_27_ = const_cast< ::atd::drivers::hsc4::Vcustatus7_27*>(
      ::atd::drivers::hsc4::Vcustatus7_27::internal_default_instance());
  _Hsc4_default_instance_.get_mutable()->idcstatus5_15_ = const_cast< ::atd::drivers::hsc4::Idcstatus5_15*>(
      ::atd::drivers::hsc4::Idcstatus5_15::internal_default_instance());
  _Hsc4_default_instance_.get_mutable()->vcustatus1_21_ = const_cast< ::atd::drivers::hsc4::Vcustatus1_21*>(
      ::atd::drivers::hsc4::Vcustatus1_21::internal_default_instance());
  _Hsc4_default_instance_.get_mutable()->vcustatus2_22_ = const_cast< ::atd::drivers::hsc4::Vcustatus2_22*>(
      ::atd::drivers::hsc4::Vcustatus2_22::internal_default_instance());
  _Hsc4_default_instance_.get_mutable()->vcustatus3_23_ = const_cast< ::atd::drivers::hsc4::Vcustatus3_23*>(
      ::atd::drivers::hsc4::Vcustatus3_23::internal_default_instance());
  _Hsc4_default_instance_.get_mutable()->idcstatus9_19_ = const_cast< ::atd::drivers::hsc4::Idcstatus9_19*>(
      ::atd::drivers::hsc4::Idcstatus9_19::internal_default_instance());
  _Hsc4_default_instance_.get_mutable()->idcstatus8_18_ = const_cast< ::atd::drivers::hsc4::Idcstatus8_18*>(
      ::atd::drivers::hsc4::Idcstatus8_18::internal_default_instance());
  _Hsc4_default_instance_.get_mutable()->idcstatus6_16_ = const_cast< ::atd::drivers::hsc4::Idcstatus6_16*>(
      ::atd::drivers::hsc4::Idcstatus6_16::internal_default_instance());
  _Hsc4_default_instance_.get_mutable()->vcustatus8_28_ = const_cast< ::atd::drivers::hsc4::Vcustatus8_28*>(
      ::atd::drivers::hsc4::Vcustatus8_28::internal_default_instance());
  _Hsc4_default_instance_.get_mutable()->vcustatus9_29_ = const_cast< ::atd::drivers::hsc4::Vcustatus9_29*>(
      ::atd::drivers::hsc4::Vcustatus9_29::internal_default_instance());
  _Hsc4_default_instance_.get_mutable()->header_ = const_cast< ::atd::common::Header*>(
      ::atd::common::Header::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  ::atd::common::protobuf_modules_2fipc_2fmessage_2fprotobuf_2fcommon_2fheader_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER

}  // namespace protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto

bool Idcstatus1_11_Strgwhlanggrdcmdhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Idcstatus1_11_Strgwhlanggrdcmdhsc4Type Idcstatus1_11::STRGWHLANGGRDCMDHSC4_0X0_0XFFF;
const Idcstatus1_11_Strgwhlanggrdcmdhsc4Type Idcstatus1_11::Strgwhlanggrdcmdhsc4Type_MIN;
const Idcstatus1_11_Strgwhlanggrdcmdhsc4Type Idcstatus1_11::Strgwhlanggrdcmdhsc4Type_MAX;
const int Idcstatus1_11::Strgwhlanggrdcmdhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Idcstatus1_11_Strgwhlangcmdvhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Idcstatus1_11_Strgwhlangcmdvhsc4Type Idcstatus1_11::STRGWHLANGCMDVHSC4_VALID;
const Idcstatus1_11_Strgwhlangcmdvhsc4Type Idcstatus1_11::STRGWHLANGCMDVHSC4_INVALID;
const Idcstatus1_11_Strgwhlangcmdvhsc4Type Idcstatus1_11::Strgwhlangcmdvhsc4Type_MIN;
const Idcstatus1_11_Strgwhlangcmdvhsc4Type Idcstatus1_11::Strgwhlangcmdvhsc4Type_MAX;
const int Idcstatus1_11::Strgwhlangcmdvhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Idcstatus1_11_Strgwhlangcmdhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Idcstatus1_11_Strgwhlangcmdhsc4Type Idcstatus1_11::STRGWHLANGCMDHSC4_0X0_0XFFFF;
const Idcstatus1_11_Strgwhlangcmdhsc4Type Idcstatus1_11::Strgwhlangcmdhsc4Type_MIN;
const Idcstatus1_11_Strgwhlangcmdhsc4Type Idcstatus1_11::Strgwhlangcmdhsc4Type_MAX;
const int Idcstatus1_11::Strgwhlangcmdhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Idcstatus1_11_Vehdececmdvhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Idcstatus1_11_Vehdececmdvhsc4Type Idcstatus1_11::VEHDECECMDVHSC4_VALID;
const Idcstatus1_11_Vehdececmdvhsc4Type Idcstatus1_11::VEHDECECMDVHSC4_INVALID;
const Idcstatus1_11_Vehdececmdvhsc4Type Idcstatus1_11::Vehdececmdvhsc4Type_MIN;
const Idcstatus1_11_Vehdececmdvhsc4Type Idcstatus1_11::Vehdececmdvhsc4Type_MAX;
const int Idcstatus1_11::Vehdececmdvhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Idcstatus1_11_Engtoqreqvhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Idcstatus1_11_Engtoqreqvhsc4Type Idcstatus1_11::ENGTOQREQVHSC4_VALID;
const Idcstatus1_11_Engtoqreqvhsc4Type Idcstatus1_11::ENGTOQREQVHSC4_INVALID;
const Idcstatus1_11_Engtoqreqvhsc4Type Idcstatus1_11::Engtoqreqvhsc4Type_MIN;
const Idcstatus1_11_Engtoqreqvhsc4Type Idcstatus1_11::Engtoqreqvhsc4Type_MAX;
const int Idcstatus1_11::Engtoqreqvhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Idcstatus1_11_Idcreadyhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Idcstatus1_11_Idcreadyhsc4Type Idcstatus1_11::IDCREADYHSC4_FALSE;
const Idcstatus1_11_Idcreadyhsc4Type Idcstatus1_11::IDCREADYHSC4_TRUE;
const Idcstatus1_11_Idcreadyhsc4Type Idcstatus1_11::Idcreadyhsc4Type_MIN;
const Idcstatus1_11_Idcreadyhsc4Type Idcstatus1_11::Idcreadyhsc4Type_MAX;
const int Idcstatus1_11::Idcreadyhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Idcstatus2_12_ApactlcmdType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Idcstatus2_12_ApactlcmdType Idcstatus2_12::APACTLCMD_APA_INVALID;
const Idcstatus2_12_ApactlcmdType Idcstatus2_12::APACTLCMD_APA_VALID;
const Idcstatus2_12_ApactlcmdType Idcstatus2_12::APACTLCMD_RESERVE;
const Idcstatus2_12_ApactlcmdType Idcstatus2_12::ApactlcmdType_MIN;
const Idcstatus2_12_ApactlcmdType Idcstatus2_12::ApactlcmdType_MAX;
const int Idcstatus2_12::ApactlcmdType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Idcstatus2_12_Idcdriveenvironmenthsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Idcstatus2_12_Idcdriveenvironmenthsc4Type Idcstatus2_12::IDCDRIVEENVIRONMENTHSC4_NORMAL_MANUAL;
const Idcstatus2_12_Idcdriveenvironmenthsc4Type Idcstatus2_12::IDCDRIVEENVIRONMENTHSC4_OUTERSIDE_INTEL_0_120_GPSMAP;
const Idcstatus2_12_Idcdriveenvironmenthsc4Type Idcstatus2_12::IDCDRIVEENVIRONMENTHSC4_INTERNAL_INTEL_0_20;
const Idcstatus2_12_Idcdriveenvironmenthsc4Type Idcstatus2_12::IDCDRIVEENVIRONMENTHSC4_LOOK_UP_PARKLOT_INTEL_0_5;
const Idcstatus2_12_Idcdriveenvironmenthsc4Type Idcstatus2_12::IDCDRIVEENVIRONMENTHSC4_OUTER_FORWARD_ADJUST_INTEL_0_5;
const Idcstatus2_12_Idcdriveenvironmenthsc4Type Idcstatus2_12::IDCDRIVEENVIRONMENTHSC4_OUTER_BACKWARD_ADJUST_INTEL_0_5;
const Idcstatus2_12_Idcdriveenvironmenthsc4Type Idcstatus2_12::IDCDRIVEENVIRONMENTHSC4_INTERNAL_FORWARD_ADJU_INTEL_0_3;
const Idcstatus2_12_Idcdriveenvironmenthsc4Type Idcstatus2_12::IDCDRIVEENVIRONMENTHSC4_INTERNAL_BACKWARD_ADJU_INTEL_0_3;
const Idcstatus2_12_Idcdriveenvironmenthsc4Type Idcstatus2_12::IDCDRIVEENVIRONMENTHSC4_REVERSE_INTEL_0_5;
const Idcstatus2_12_Idcdriveenvironmenthsc4Type Idcstatus2_12::IDCDRIVEENVIRONMENTHSC4_OUTERSIDE_INTEL_0_120_MOBILEYE;
const Idcstatus2_12_Idcdriveenvironmenthsc4Type Idcstatus2_12::IDCDRIVEENVIRONMENTHSC4_DISTANCE_CONTROL;
const Idcstatus2_12_Idcdriveenvironmenthsc4Type Idcstatus2_12::Idcdriveenvironmenthsc4Type_MIN;
const Idcstatus2_12_Idcdriveenvironmenthsc4Type Idcstatus2_12::Idcdriveenvironmenthsc4Type_MAX;
const int Idcstatus2_12::Idcdriveenvironmenthsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Idcstatus2_12_Shifterposreqhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Idcstatus2_12_Shifterposreqhsc4Type Idcstatus2_12::SHIFTERPOSREQHSC4_ERROR;
const Idcstatus2_12_Shifterposreqhsc4Type Idcstatus2_12::SHIFTERPOSREQHSC4_S;
const Idcstatus2_12_Shifterposreqhsc4Type Idcstatus2_12::SHIFTERPOSREQHSC4_W;
const Idcstatus2_12_Shifterposreqhsc4Type Idcstatus2_12::SHIFTERPOSREQHSC4_M;
const Idcstatus2_12_Shifterposreqhsc4Type Idcstatus2_12::SHIFTERPOSREQHSC4_D;
const Idcstatus2_12_Shifterposreqhsc4Type Idcstatus2_12::SHIFTERPOSREQHSC4_N;
const Idcstatus2_12_Shifterposreqhsc4Type Idcstatus2_12::SHIFTERPOSREQHSC4_R;
const Idcstatus2_12_Shifterposreqhsc4Type Idcstatus2_12::SHIFTERPOSREQHSC4_P;
const Idcstatus2_12_Shifterposreqhsc4Type Idcstatus2_12::Shifterposreqhsc4Type_MIN;
const Idcstatus2_12_Shifterposreqhsc4Type Idcstatus2_12::Shifterposreqhsc4Type_MAX;
const int Idcstatus2_12::Shifterposreqhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Idcstatus7_17_Trackcoefficianty5vhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Idcstatus7_17_Trackcoefficianty5vhsc4Type Idcstatus7_17::TRACKCOEFFICIANTY5VHSC4_VALID;
const Idcstatus7_17_Trackcoefficianty5vhsc4Type Idcstatus7_17::TRACKCOEFFICIANTY5VHSC4_INVALID;
const Idcstatus7_17_Trackcoefficianty5vhsc4Type Idcstatus7_17::Trackcoefficianty5vhsc4Type_MIN;
const Idcstatus7_17_Trackcoefficianty5vhsc4Type Idcstatus7_17::Trackcoefficianty5vhsc4Type_MAX;
const int Idcstatus7_17::Trackcoefficianty5vhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Idcstatus7_17_Trackcoefficianty4vhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Idcstatus7_17_Trackcoefficianty4vhsc4Type Idcstatus7_17::TRACKCOEFFICIANTY4VHSC4_VALID;
const Idcstatus7_17_Trackcoefficianty4vhsc4Type Idcstatus7_17::TRACKCOEFFICIANTY4VHSC4_INVALID;
const Idcstatus7_17_Trackcoefficianty4vhsc4Type Idcstatus7_17::Trackcoefficianty4vhsc4Type_MIN;
const Idcstatus7_17_Trackcoefficianty4vhsc4Type Idcstatus7_17::Trackcoefficianty4vhsc4Type_MAX;
const int Idcstatus7_17::Trackcoefficianty4vhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Idcstatus7_17_Trackcoefficianty3vhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Idcstatus7_17_Trackcoefficianty3vhsc4Type Idcstatus7_17::TRACKCOEFFICIANTY3VHSC4_VALID;
const Idcstatus7_17_Trackcoefficianty3vhsc4Type Idcstatus7_17::TRACKCOEFFICIANTY3VHSC4_INVALID;
const Idcstatus7_17_Trackcoefficianty3vhsc4Type Idcstatus7_17::Trackcoefficianty3vhsc4Type_MIN;
const Idcstatus7_17_Trackcoefficianty3vhsc4Type Idcstatus7_17::Trackcoefficianty3vhsc4Type_MAX;
const int Idcstatus7_17::Trackcoefficianty3vhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Idcstatus4_14_BrakemodeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Idcstatus4_14_BrakemodeType Idcstatus4_14::BRAKEMODE_NOBRAKE;
const Idcstatus4_14_BrakemodeType Idcstatus4_14::BRAKEMODE_COMFORTBRAKEACC;
const Idcstatus4_14_BrakemodeType Idcstatus4_14::BRAKEMODE_NOMARLBRAKEACC;
const Idcstatus4_14_BrakemodeType Idcstatus4_14::BRAKEMODE_EMERGYBRAKEAEB;
const Idcstatus4_14_BrakemodeType Idcstatus4_14::BrakemodeType_MIN;
const Idcstatus4_14_BrakemodeType Idcstatus4_14::BrakemodeType_MAX;
const int Idcstatus4_14::BrakemodeType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Idcstatus4_14_Trackcoefficiantx2vhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Idcstatus4_14_Trackcoefficiantx2vhsc4Type Idcstatus4_14::TRACKCOEFFICIANTX2VHSC4_VALID;
const Idcstatus4_14_Trackcoefficiantx2vhsc4Type Idcstatus4_14::TRACKCOEFFICIANTX2VHSC4_INVALID;
const Idcstatus4_14_Trackcoefficiantx2vhsc4Type Idcstatus4_14::Trackcoefficiantx2vhsc4Type_MIN;
const Idcstatus4_14_Trackcoefficiantx2vhsc4Type Idcstatus4_14::Trackcoefficiantx2vhsc4Type_MAX;
const int Idcstatus4_14::Trackcoefficiantx2vhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Idcstatus4_14_Trackcoefficiantx1vhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Idcstatus4_14_Trackcoefficiantx1vhsc4Type Idcstatus4_14::TRACKCOEFFICIANTX1VHSC4_VALID;
const Idcstatus4_14_Trackcoefficiantx1vhsc4Type Idcstatus4_14::TRACKCOEFFICIANTX1VHSC4_INVALID;
const Idcstatus4_14_Trackcoefficiantx1vhsc4Type Idcstatus4_14::Trackcoefficiantx1vhsc4Type_MIN;
const Idcstatus4_14_Trackcoefficiantx1vhsc4Type Idcstatus4_14::Trackcoefficiantx1vhsc4Type_MAX;
const int Idcstatus4_14::Trackcoefficiantx1vhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus4_24_Vehlckngstahsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus4_24_Vehlckngstahsc4Type Vcustatus4_24::VEHLCKNGSTAHSC4_UNLOCK;
const Vcustatus4_24_Vehlckngstahsc4Type Vcustatus4_24::VEHLCKNGSTAHSC4_LOCK;
const Vcustatus4_24_Vehlckngstahsc4Type Vcustatus4_24::Vehlckngstahsc4Type_MIN;
const Vcustatus4_24_Vehlckngstahsc4Type Vcustatus4_24::Vehlckngstahsc4Type_MAX;
const int Vcustatus4_24::Vehlckngstahsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus4_24_Frtpsngdooropenstshsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus4_24_Frtpsngdooropenstshsc4Type Vcustatus4_24::FRTPSNGDOOROPENSTSHSC4_CLOSE;
const Vcustatus4_24_Frtpsngdooropenstshsc4Type Vcustatus4_24::FRTPSNGDOOROPENSTSHSC4_OPEN;
const Vcustatus4_24_Frtpsngdooropenstshsc4Type Vcustatus4_24::FRTPSNGDOOROPENSTSHSC4_AJAR;
const Vcustatus4_24_Frtpsngdooropenstshsc4Type Vcustatus4_24::FRTPSNGDOOROPENSTSHSC4_FULL_OPEN;
const Vcustatus4_24_Frtpsngdooropenstshsc4Type Vcustatus4_24::Frtpsngdooropenstshsc4Type_MIN;
const Vcustatus4_24_Frtpsngdooropenstshsc4Type Vcustatus4_24::Frtpsngdooropenstshsc4Type_MAX;
const int Vcustatus4_24::Frtpsngdooropenstshsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus4_24_Drvrdooropenstshsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus4_24_Drvrdooropenstshsc4Type Vcustatus4_24::DRVRDOOROPENSTSHSC4_CLOSE;
const Vcustatus4_24_Drvrdooropenstshsc4Type Vcustatus4_24::DRVRDOOROPENSTSHSC4_OPEN;
const Vcustatus4_24_Drvrdooropenstshsc4Type Vcustatus4_24::DRVRDOOROPENSTSHSC4_AJAR;
const Vcustatus4_24_Drvrdooropenstshsc4Type Vcustatus4_24::DRVRDOOROPENSTSHSC4_FULL_OPEN;
const Vcustatus4_24_Drvrdooropenstshsc4Type Vcustatus4_24::Drvrdooropenstshsc4Type_MIN;
const Vcustatus4_24_Drvrdooropenstshsc4Type Vcustatus4_24::Drvrdooropenstshsc4Type_MAX;
const int Vcustatus4_24::Drvrdooropenstshsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus4_24_Vehinertiaswtrigdhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus4_24_Vehinertiaswtrigdhsc4Type Vcustatus4_24::VEHINERTIASWTRIGDHSC4_FALSE;
const Vcustatus4_24_Vehinertiaswtrigdhsc4Type Vcustatus4_24::VEHINERTIASWTRIGDHSC4_TRUE;
const Vcustatus4_24_Vehinertiaswtrigdhsc4Type Vcustatus4_24::Vehinertiaswtrigdhsc4Type_MIN;
const Vcustatus4_24_Vehinertiaswtrigdhsc4Type Vcustatus4_24::Vehinertiaswtrigdhsc4Type_MAX;
const int Vcustatus4_24::Vehinertiaswtrigdhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus4_24_Brkpdldrvrappdprsv_hsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus4_24_Brkpdldrvrappdprsv_hsc4Type Vcustatus4_24::BRKPDLDRVRAPPDPRSV_HSC4_VALID;
const Vcustatus4_24_Brkpdldrvrappdprsv_hsc4Type Vcustatus4_24::BRKPDLDRVRAPPDPRSV_HSC4_INVALID;
const Vcustatus4_24_Brkpdldrvrappdprsv_hsc4Type Vcustatus4_24::Brkpdldrvrappdprsv_hsc4Type_MIN;
const Vcustatus4_24_Brkpdldrvrappdprsv_hsc4Type Vcustatus4_24::Brkpdldrvrappdprsv_hsc4Type_MAX;
const int Vcustatus4_24::Brkpdldrvrappdprsv_hsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus6_26_Whlgndvelrnondrvnv_hsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus6_26_Whlgndvelrnondrvnv_hsc4Type Vcustatus6_26::WHLGNDVELRNONDRVNV_HSC4_VALID;
const Vcustatus6_26_Whlgndvelrnondrvnv_hsc4Type Vcustatus6_26::WHLGNDVELRNONDRVNV_HSC4_INVALID;
const Vcustatus6_26_Whlgndvelrnondrvnv_hsc4Type Vcustatus6_26::Whlgndvelrnondrvnv_hsc4Type_MIN;
const Vcustatus6_26_Whlgndvelrnondrvnv_hsc4Type Vcustatus6_26::Whlgndvelrnondrvnv_hsc4Type_MAX;
const int Vcustatus6_26::Whlgndvelrnondrvnv_hsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus6_26_Whlgndvellnondrvnv_hsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus6_26_Whlgndvellnondrvnv_hsc4Type Vcustatus6_26::WHLGNDVELLNONDRVNV_HSC4_VALID;
const Vcustatus6_26_Whlgndvellnondrvnv_hsc4Type Vcustatus6_26::WHLGNDVELLNONDRVNV_HSC4_INVALID;
const Vcustatus6_26_Whlgndvellnondrvnv_hsc4Type Vcustatus6_26::Whlgndvellnondrvnv_hsc4Type_MIN;
const Vcustatus6_26_Whlgndvellnondrvnv_hsc4Type Vcustatus6_26::Whlgndvellnondrvnv_hsc4Type_MAX;
const int Vcustatus6_26::Whlgndvellnondrvnv_hsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus6_26_Whlgndvelrdrvnv_hsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus6_26_Whlgndvelrdrvnv_hsc4Type Vcustatus6_26::WHLGNDVELRDRVNV_HSC4_VALID;
const Vcustatus6_26_Whlgndvelrdrvnv_hsc4Type Vcustatus6_26::WHLGNDVELRDRVNV_HSC4_INVALID;
const Vcustatus6_26_Whlgndvelrdrvnv_hsc4Type Vcustatus6_26::Whlgndvelrdrvnv_hsc4Type_MIN;
const Vcustatus6_26_Whlgndvelrdrvnv_hsc4Type Vcustatus6_26::Whlgndvelrdrvnv_hsc4Type_MAX;
const int Vcustatus6_26::Whlgndvelrdrvnv_hsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus6_26_Whlgndvelldrvnv_hsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus6_26_Whlgndvelldrvnv_hsc4Type Vcustatus6_26::WHLGNDVELLDRVNV_HSC4_VALID;
const Vcustatus6_26_Whlgndvelldrvnv_hsc4Type Vcustatus6_26::WHLGNDVELLDRVNV_HSC4_INVALID;
const Vcustatus6_26_Whlgndvelldrvnv_hsc4Type Vcustatus6_26::Whlgndvelldrvnv_hsc4Type_MIN;
const Vcustatus6_26_Whlgndvelldrvnv_hsc4Type Vcustatus6_26::Whlgndvelldrvnv_hsc4Type_MAX;
const int Vcustatus6_26::Whlgndvelldrvnv_hsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus7_27_Fuellvlpcntvhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus7_27_Fuellvlpcntvhsc4Type Vcustatus7_27::FUELLVLPCNTVHSC4_VALID;
const Vcustatus7_27_Fuellvlpcntvhsc4Type Vcustatus7_27::FUELLVLPCNTVHSC4_INVALID;
const Vcustatus7_27_Fuellvlpcntvhsc4Type Vcustatus7_27::Fuellvlpcntvhsc4Type_MIN;
const Vcustatus7_27_Fuellvlpcntvhsc4Type Vcustatus7_27::Fuellvlpcntvhsc4Type_MAX;
const int Vcustatus7_27::Fuellvlpcntvhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus7_27_Ambtlghtlvlhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus7_27_Ambtlghtlvlhsc4Type Vcustatus7_27::AMBTLGHTLVLHSC4_LEVEL_0;
const Vcustatus7_27_Ambtlghtlvlhsc4Type Vcustatus7_27::AMBTLGHTLVLHSC4_LEVEL_1;
const Vcustatus7_27_Ambtlghtlvlhsc4Type Vcustatus7_27::AMBTLGHTLVLHSC4_LEVEL_2;
const Vcustatus7_27_Ambtlghtlvlhsc4Type Vcustatus7_27::Ambtlghtlvlhsc4Type_MIN;
const Vcustatus7_27_Ambtlghtlvlhsc4Type Vcustatus7_27::Ambtlghtlvlhsc4Type_MAX;
const int Vcustatus7_27::Ambtlghtlvlhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus7_27_Otsdairtemcrvalv_hsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus7_27_Otsdairtemcrvalv_hsc4Type Vcustatus7_27::OTSDAIRTEMCRVALV_HSC4_VALID;
const Vcustatus7_27_Otsdairtemcrvalv_hsc4Type Vcustatus7_27::OTSDAIRTEMCRVALV_HSC4_INVALID;
const Vcustatus7_27_Otsdairtemcrvalv_hsc4Type Vcustatus7_27::Otsdairtemcrvalv_hsc4Type_MIN;
const Vcustatus7_27_Otsdairtemcrvalv_hsc4Type Vcustatus7_27::Otsdairtemcrvalv_hsc4Type_MAX;
const int Vcustatus7_27::Otsdairtemcrvalv_hsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus7_27_Brklghtsstahsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus7_27_Brklghtsstahsc4Type Vcustatus7_27::BRKLGHTSSTAHSC4_OFF;
const Vcustatus7_27_Brklghtsstahsc4Type Vcustatus7_27::BRKLGHTSSTAHSC4_ON;
const Vcustatus7_27_Brklghtsstahsc4Type Vcustatus7_27::Brklghtsstahsc4Type_MIN;
const Vcustatus7_27_Brklghtsstahsc4Type Vcustatus7_27::Brklghtsstahsc4Type_MAX;
const int Vcustatus7_27::Brklghtsstahsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus7_27_Dangerouswrnnglghtstahsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus7_27_Dangerouswrnnglghtstahsc4Type Vcustatus7_27::DANGEROUSWRNNGLGHTSTAHSC4_OFF;
const Vcustatus7_27_Dangerouswrnnglghtstahsc4Type Vcustatus7_27::DANGEROUSWRNNGLGHTSTAHSC4_ON;
const Vcustatus7_27_Dangerouswrnnglghtstahsc4Type Vcustatus7_27::Dangerouswrnnglghtstahsc4Type_MIN;
const Vcustatus7_27_Dangerouswrnnglghtstahsc4Type Vcustatus7_27::Dangerouswrnnglghtstahsc4Type_MAX;
const int Vcustatus7_27::Dangerouswrnnglghtstahsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus7_27_Dipdbeamlampsstahsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus7_27_Dipdbeamlampsstahsc4Type Vcustatus7_27::DIPDBEAMLAMPSSTAHSC4_OFF;
const Vcustatus7_27_Dipdbeamlampsstahsc4Type Vcustatus7_27::DIPDBEAMLAMPSSTAHSC4_ON;
const Vcustatus7_27_Dipdbeamlampsstahsc4Type Vcustatus7_27::Dipdbeamlampsstahsc4Type_MIN;
const Vcustatus7_27_Dipdbeamlampsstahsc4Type Vcustatus7_27::Dipdbeamlampsstahsc4Type_MAX;
const int Vcustatus7_27::Dipdbeamlampsstahsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus7_27_Frtfoglampstahsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus7_27_Frtfoglampstahsc4Type Vcustatus7_27::FRTFOGLAMPSTAHSC4_OFF;
const Vcustatus7_27_Frtfoglampstahsc4Type Vcustatus7_27::FRTFOGLAMPSTAHSC4_ON;
const Vcustatus7_27_Frtfoglampstahsc4Type Vcustatus7_27::Frtfoglampstahsc4Type_MIN;
const Vcustatus7_27_Frtfoglampstahsc4Type Vcustatus7_27::Frtfoglampstahsc4Type_MAX;
const int Vcustatus7_27::Frtfoglampstahsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus7_27_Hornstahsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus7_27_Hornstahsc4Type Vcustatus7_27::HORNSTAHSC4_OFF;
const Vcustatus7_27_Hornstahsc4Type Vcustatus7_27::HORNSTAHSC4_ON;
const Vcustatus7_27_Hornstahsc4Type Vcustatus7_27::Hornstahsc4Type_MIN;
const Vcustatus7_27_Hornstahsc4Type Vcustatus7_27::Hornstahsc4Type_MAX;
const int Vcustatus7_27::Hornstahsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus7_27_Ldircnlampsstahsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus7_27_Ldircnlampsstahsc4Type Vcustatus7_27::LDIRCNLAMPSSTAHSC4_OFF;
const Vcustatus7_27_Ldircnlampsstahsc4Type Vcustatus7_27::LDIRCNLAMPSSTAHSC4_ON;
const Vcustatus7_27_Ldircnlampsstahsc4Type Vcustatus7_27::Ldircnlampsstahsc4Type_MIN;
const Vcustatus7_27_Ldircnlampsstahsc4Type Vcustatus7_27::Ldircnlampsstahsc4Type_MAX;
const int Vcustatus7_27::Ldircnlampsstahsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus7_27_Mainbeamlampsstahsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus7_27_Mainbeamlampsstahsc4Type Vcustatus7_27::MAINBEAMLAMPSSTAHSC4_OFF;
const Vcustatus7_27_Mainbeamlampsstahsc4Type Vcustatus7_27::MAINBEAMLAMPSSTAHSC4_ON;
const Vcustatus7_27_Mainbeamlampsstahsc4Type Vcustatus7_27::Mainbeamlampsstahsc4Type_MIN;
const Vcustatus7_27_Mainbeamlampsstahsc4Type Vcustatus7_27::Mainbeamlampsstahsc4Type_MAX;
const int Vcustatus7_27::Mainbeamlampsstahsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus7_27_Rdircnlampsstahsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus7_27_Rdircnlampsstahsc4Type Vcustatus7_27::RDIRCNLAMPSSTAHSC4_OFF;
const Vcustatus7_27_Rdircnlampsstahsc4Type Vcustatus7_27::RDIRCNLAMPSSTAHSC4_ON;
const Vcustatus7_27_Rdircnlampsstahsc4Type Vcustatus7_27::Rdircnlampsstahsc4Type_MIN;
const Vcustatus7_27_Rdircnlampsstahsc4Type Vcustatus7_27::Rdircnlampsstahsc4Type_MAX;
const int Vcustatus7_27::Rdircnlampsstahsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus7_27_Revsnglghtstahsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus7_27_Revsnglghtstahsc4Type Vcustatus7_27::REVSNGLGHTSTAHSC4_OFF;
const Vcustatus7_27_Revsnglghtstahsc4Type Vcustatus7_27::REVSNGLGHTSTAHSC4_ON;
const Vcustatus7_27_Revsnglghtstahsc4Type Vcustatus7_27::Revsnglghtstahsc4Type_MIN;
const Vcustatus7_27_Revsnglghtstahsc4Type Vcustatus7_27::Revsnglghtstahsc4Type_MAX;
const int Vcustatus7_27::Revsnglghtstahsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus7_27_Rrfoglampstahsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus7_27_Rrfoglampstahsc4Type Vcustatus7_27::RRFOGLAMPSTAHSC4_OFF;
const Vcustatus7_27_Rrfoglampstahsc4Type Vcustatus7_27::RRFOGLAMPSTAHSC4_ON;
const Vcustatus7_27_Rrfoglampstahsc4Type Vcustatus7_27::Rrfoglampstahsc4Type_MIN;
const Vcustatus7_27_Rrfoglampstahsc4Type Vcustatus7_27::Rrfoglampstahsc4Type_MAX;
const int Vcustatus7_27::Rrfoglampstahsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus7_27_Widthlampandtaillightstatehsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus7_27_Widthlampandtaillightstatehsc4Type Vcustatus7_27::WIDTHLAMPANDTAILLIGHTSTATEHSC4_OFF;
const Vcustatus7_27_Widthlampandtaillightstatehsc4Type Vcustatus7_27::WIDTHLAMPANDTAILLIGHTSTATEHSC4_ON;
const Vcustatus7_27_Widthlampandtaillightstatehsc4Type Vcustatus7_27::Widthlampandtaillightstatehsc4Type_MIN;
const Vcustatus7_27_Widthlampandtaillightstatehsc4Type Vcustatus7_27::Widthlampandtaillightstatehsc4Type_MAX;
const int Vcustatus7_27::Widthlampandtaillightstatehsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus7_27_Wiperstahsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus7_27_Wiperstahsc4Type Vcustatus7_27::WIPERSTAHSC4_OFF;
const Vcustatus7_27_Wiperstahsc4Type Vcustatus7_27::WIPERSTAHSC4_INTERMITTENT_POSITION;
const Vcustatus7_27_Wiperstahsc4Type Vcustatus7_27::WIPERSTAHSC4_NORMAL_POSITION;
const Vcustatus7_27_Wiperstahsc4Type Vcustatus7_27::WIPERSTAHSC4_FAST_POSITION;
const Vcustatus7_27_Wiperstahsc4Type Vcustatus7_27::WIPERSTAHSC4_INCHING_POSITION;
const Vcustatus7_27_Wiperstahsc4Type Vcustatus7_27::Wiperstahsc4Type_MIN;
const Vcustatus7_27_Wiperstahsc4Type Vcustatus7_27::Wiperstahsc4Type_MAX;
const int Vcustatus7_27::Wiperstahsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus7_27_Wshrstahsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus7_27_Wshrstahsc4Type Vcustatus7_27::WSHRSTAHSC4_OFF;
const Vcustatus7_27_Wshrstahsc4Type Vcustatus7_27::WSHRSTAHSC4_ON;
const Vcustatus7_27_Wshrstahsc4Type Vcustatus7_27::Wshrstahsc4Type_MIN;
const Vcustatus7_27_Wshrstahsc4Type Vcustatus7_27::Wshrstahsc4Type_MAX;
const int Vcustatus7_27::Wshrstahsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Idcstatus5_15_Trackcoefficiantx4vhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Idcstatus5_15_Trackcoefficiantx4vhsc4Type Idcstatus5_15::TRACKCOEFFICIANTX4VHSC4_VALID;
const Idcstatus5_15_Trackcoefficiantx4vhsc4Type Idcstatus5_15::TRACKCOEFFICIANTX4VHSC4_INVALID;
const Idcstatus5_15_Trackcoefficiantx4vhsc4Type Idcstatus5_15::Trackcoefficiantx4vhsc4Type_MIN;
const Idcstatus5_15_Trackcoefficiantx4vhsc4Type Idcstatus5_15::Trackcoefficiantx4vhsc4Type_MAX;
const int Idcstatus5_15::Trackcoefficiantx4vhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Idcstatus5_15_Trackcoefficiantx3vhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Idcstatus5_15_Trackcoefficiantx3vhsc4Type Idcstatus5_15::TRACKCOEFFICIANTX3VHSC4_VALID;
const Idcstatus5_15_Trackcoefficiantx3vhsc4Type Idcstatus5_15::TRACKCOEFFICIANTX3VHSC4_INVALID;
const Idcstatus5_15_Trackcoefficiantx3vhsc4Type Idcstatus5_15::Trackcoefficiantx3vhsc4Type_MIN;
const Idcstatus5_15_Trackcoefficiantx3vhsc4Type Idcstatus5_15::Trackcoefficiantx3vhsc4Type_MAX;
const int Idcstatus5_15::Trackcoefficiantx3vhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus1_21_Scushifterlvrposhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus1_21_Scushifterlvrposhsc4Type Vcustatus1_21::SCUSHIFTERLVRPOSHSC4_ERROR;
const Vcustatus1_21_Scushifterlvrposhsc4Type Vcustatus1_21::SCUSHIFTERLVRPOSHSC4_S;
const Vcustatus1_21_Scushifterlvrposhsc4Type Vcustatus1_21::SCUSHIFTERLVRPOSHSC4_W;
const Vcustatus1_21_Scushifterlvrposhsc4Type Vcustatus1_21::SCUSHIFTERLVRPOSHSC4_M;
const Vcustatus1_21_Scushifterlvrposhsc4Type Vcustatus1_21::SCUSHIFTERLVRPOSHSC4_D;
const Vcustatus1_21_Scushifterlvrposhsc4Type Vcustatus1_21::SCUSHIFTERLVRPOSHSC4_N;
const Vcustatus1_21_Scushifterlvrposhsc4Type Vcustatus1_21::SCUSHIFTERLVRPOSHSC4_R;
const Vcustatus1_21_Scushifterlvrposhsc4Type Vcustatus1_21::SCUSHIFTERLVRPOSHSC4_P;
const Vcustatus1_21_Scushifterlvrposhsc4Type Vcustatus1_21::Scushifterlvrposhsc4Type_MIN;
const Vcustatus1_21_Scushifterlvrposhsc4Type Vcustatus1_21::Scushifterlvrposhsc4Type_MAX;
const int Vcustatus1_21::Scushifterlvrposhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus1_21_Epsmototpttoqhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus1_21_Epsmototpttoqhsc4Type Vcustatus1_21::EPSMOTOTPTTOQHSC4_0X0_0XFFFF;
const Vcustatus1_21_Epsmototpttoqhsc4Type Vcustatus1_21::Epsmototpttoqhsc4Type_MIN;
const Vcustatus1_21_Epsmototpttoqhsc4Type Vcustatus1_21::Epsmototpttoqhsc4Type_MAX;
const int Vcustatus1_21::Epsmototpttoqhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus1_21_Ptbrkpdldscrtinptstsvhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus1_21_Ptbrkpdldscrtinptstsvhsc4Type Vcustatus1_21::PTBRKPDLDSCRTINPTSTSVHSC4_VALID;
const Vcustatus1_21_Ptbrkpdldscrtinptstsvhsc4Type Vcustatus1_21::PTBRKPDLDSCRTINPTSTSVHSC4_INVALID;
const Vcustatus1_21_Ptbrkpdldscrtinptstsvhsc4Type Vcustatus1_21::Ptbrkpdldscrtinptstsvhsc4Type_MIN;
const Vcustatus1_21_Ptbrkpdldscrtinptstsvhsc4Type Vcustatus1_21::Ptbrkpdldscrtinptstsvhsc4Type_MAX;
const int Vcustatus1_21::Ptbrkpdldscrtinptstsvhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus1_21_Ptbrkpdldscrtinptstshsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus1_21_Ptbrkpdldscrtinptstshsc4Type Vcustatus1_21::PTBRKPDLDSCRTINPTSTSHSC4_APPLIED;
const Vcustatus1_21_Ptbrkpdldscrtinptstshsc4Type Vcustatus1_21::PTBRKPDLDSCRTINPTSTSHSC4_NOT_APPLIED;
const Vcustatus1_21_Ptbrkpdldscrtinptstshsc4Type Vcustatus1_21::Ptbrkpdldscrtinptstshsc4Type_MIN;
const Vcustatus1_21_Ptbrkpdldscrtinptstshsc4Type Vcustatus1_21::Ptbrkpdldscrtinptstshsc4Type_MAX;
const int Vcustatus1_21::Ptbrkpdldscrtinptstshsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus1_21_Drivemmodestshsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus1_21_Drivemmodestshsc4Type Vcustatus1_21::DRIVEMMODESTSHSC4_MANUAL;
const Vcustatus1_21_Drivemmodestshsc4Type Vcustatus1_21::DRIVEMMODESTSHSC4_AUTONOMOUS_READY;
const Vcustatus1_21_Drivemmodestshsc4Type Vcustatus1_21::DRIVEMMODESTSHSC4_AUTONOMOUS;
const Vcustatus1_21_Drivemmodestshsc4Type Vcustatus1_21::DRIVEMMODESTSHSC4_ERROR;
const Vcustatus1_21_Drivemmodestshsc4Type Vcustatus1_21::Drivemmodestshsc4Type_MIN;
const Vcustatus1_21_Drivemmodestshsc4Type Vcustatus1_21::Drivemmodestshsc4Type_MAX;
const int Vcustatus1_21::Drivemmodestshsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus1_21_Drivemodereqhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus1_21_Drivemodereqhsc4Type Vcustatus1_21::DRIVEMODEREQHSC4_MANUAL;
const Vcustatus1_21_Drivemodereqhsc4Type Vcustatus1_21::DRIVEMODEREQHSC4_AUTOMOMOUS;
const Vcustatus1_21_Drivemodereqhsc4Type Vcustatus1_21::Drivemodereqhsc4Type_MIN;
const Vcustatus1_21_Drivemodereqhsc4Type Vcustatus1_21::Drivemodereqhsc4Type_MAX;
const int Vcustatus1_21::Drivemodereqhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus2_22_Strgwhlanghsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 65535:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus2_22_Strgwhlanghsc4Type Vcustatus2_22::STRGWHLANGHSC4_DEGREE_0X0_0XFFFE;
const Vcustatus2_22_Strgwhlanghsc4Type Vcustatus2_22::STRGWHLANGHSC4_ERROR_MARK;
const Vcustatus2_22_Strgwhlanghsc4Type Vcustatus2_22::Strgwhlanghsc4Type_MIN;
const Vcustatus2_22_Strgwhlanghsc4Type Vcustatus2_22::Strgwhlanghsc4Type_MAX;
const int Vcustatus2_22::Strgwhlanghsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus2_22_Strgwhlangalvrchsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus2_22_Strgwhlangalvrchsc4Type Vcustatus2_22::STRGWHLANGALVRCHSC4_0X0_0XF;
const Vcustatus2_22_Strgwhlangalvrchsc4Type Vcustatus2_22::Strgwhlangalvrchsc4Type_MIN;
const Vcustatus2_22_Strgwhlangalvrchsc4Type Vcustatus2_22::Strgwhlangalvrchsc4Type_MAX;
const int Vcustatus2_22::Strgwhlangalvrchsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus2_22_Strgwhlangextdpvhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus2_22_Strgwhlangextdpvhsc4Type Vcustatus2_22::STRGWHLANGEXTDPVHSC4_0X0_0XFFFF;
const Vcustatus2_22_Strgwhlangextdpvhsc4Type Vcustatus2_22::Strgwhlangextdpvhsc4Type_MIN;
const Vcustatus2_22_Strgwhlangextdpvhsc4Type Vcustatus2_22::Strgwhlangextdpvhsc4Type_MAX;
const int Vcustatus2_22::Strgwhlangextdpvhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus2_22_Strgwhlanggrdhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 4095:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus2_22_Strgwhlanggrdhsc4Type Vcustatus2_22::STRGWHLANGGRDHSC4_DEGREE_S_0X0_0XFFE;
const Vcustatus2_22_Strgwhlanggrdhsc4Type Vcustatus2_22::STRGWHLANGGRDHSC4_ERROR_MARK;
const Vcustatus2_22_Strgwhlanggrdhsc4Type Vcustatus2_22::Strgwhlanggrdhsc4Type_MIN;
const Vcustatus2_22_Strgwhlanggrdhsc4Type Vcustatus2_22::Strgwhlanggrdhsc4Type_MAX;
const int Vcustatus2_22::Strgwhlanggrdhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus2_22_Strgwhlangsnsrcalstshsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus2_22_Strgwhlangsnsrcalstshsc4Type Vcustatus2_22::STRGWHLANGSNSRCALSTSHSC4_UNKNOW;
const Vcustatus2_22_Strgwhlangsnsrcalstshsc4Type Vcustatus2_22::STRGWHLANGSNSRCALSTSHSC4_ESTIMATED;
const Vcustatus2_22_Strgwhlangsnsrcalstshsc4Type Vcustatus2_22::STRGWHLANGSNSRCALSTSHSC4_CALIBRATED;
const Vcustatus2_22_Strgwhlangsnsrcalstshsc4Type Vcustatus2_22::STRGWHLANGSNSRCALSTSHSC4_UNKNOW_A;
const Vcustatus2_22_Strgwhlangsnsrcalstshsc4Type Vcustatus2_22::Strgwhlangsnsrcalstshsc4Type_MIN;
const Vcustatus2_22_Strgwhlangsnsrcalstshsc4Type Vcustatus2_22::Strgwhlangsnsrcalstshsc4Type_MAX;
const int Vcustatus2_22::Strgwhlangsnsrcalstshsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus2_22_Strgwhlangsnsrchksmhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus2_22_Strgwhlangsnsrchksmhsc4Type Vcustatus2_22::STRGWHLANGSNSRCHKSMHSC4_0X0_0XFF;
const Vcustatus2_22_Strgwhlangsnsrchksmhsc4Type Vcustatus2_22::Strgwhlangsnsrchksmhsc4Type_MIN;
const Vcustatus2_22_Strgwhlangsnsrchksmhsc4Type Vcustatus2_22::Strgwhlangsnsrchksmhsc4Type_MAX;
const int Vcustatus2_22::Strgwhlangsnsrchksmhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus2_22_Strgwhlangsnsrflthsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus2_22_Strgwhlangsnsrflthsc4Type Vcustatus2_22::STRGWHLANGSNSRFLTHSC4_FALSE;
const Vcustatus2_22_Strgwhlangsnsrflthsc4Type Vcustatus2_22::STRGWHLANGSNSRFLTHSC4_TRUE;
const Vcustatus2_22_Strgwhlangsnsrflthsc4Type Vcustatus2_22::Strgwhlangsnsrflthsc4Type_MIN;
const Vcustatus2_22_Strgwhlangsnsrflthsc4Type Vcustatus2_22::Strgwhlangsnsrflthsc4Type_MAX;
const int Vcustatus2_22::Strgwhlangsnsrflthsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus2_22_Strgwhlangsnsrinidhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus2_22_Strgwhlangsnsrinidhsc4Type Vcustatus2_22::STRGWHLANGSNSRINIDHSC4_FALSE;
const Vcustatus2_22_Strgwhlangsnsrinidhsc4Type Vcustatus2_22::STRGWHLANGSNSRINIDHSC4_TRUE;
const Vcustatus2_22_Strgwhlangsnsrinidhsc4Type Vcustatus2_22::Strgwhlangsnsrinidhsc4Type_MIN;
const Vcustatus2_22_Strgwhlangsnsrinidhsc4Type Vcustatus2_22::Strgwhlangsnsrinidhsc4Type_MAX;
const int Vcustatus2_22::Strgwhlangsnsrinidhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus2_22_Strgwhlangsnsrmultcapbhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus2_22_Strgwhlangsnsrmultcapbhsc4Type Vcustatus2_22::STRGWHLANGSNSRMULTCAPBHSC4_FALSE;
const Vcustatus2_22_Strgwhlangsnsrmultcapbhsc4Type Vcustatus2_22::STRGWHLANGSNSRMULTCAPBHSC4_TRUE;
const Vcustatus2_22_Strgwhlangsnsrmultcapbhsc4Type Vcustatus2_22::Strgwhlangsnsrmultcapbhsc4Type_MIN;
const Vcustatus2_22_Strgwhlangsnsrmultcapbhsc4Type Vcustatus2_22::Strgwhlangsnsrmultcapbhsc4Type_MAX;
const int Vcustatus2_22::Strgwhlangsnsrmultcapbhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus2_22_Strgwhlangvhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus2_22_Strgwhlangvhsc4Type Vcustatus2_22::STRGWHLANGVHSC4_VALID;
const Vcustatus2_22_Strgwhlangvhsc4Type Vcustatus2_22::STRGWHLANGVHSC4_INVALID;
const Vcustatus2_22_Strgwhlangvhsc4Type Vcustatus2_22::Strgwhlangvhsc4Type_MIN;
const Vcustatus2_22_Strgwhlangvhsc4Type Vcustatus2_22::Strgwhlangvhsc4Type_MAX;
const int Vcustatus2_22::Strgwhlangvhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus3_23_Epbappcnstshsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus3_23_Epbappcnstshsc4Type Vcustatus3_23::EPBAPPCNSTSHSC4_UNKNOWN;
const Vcustatus3_23_Epbappcnstshsc4Type Vcustatus3_23::EPBAPPCNSTSHSC4_PARK_BRAKE_APPLIED;
const Vcustatus3_23_Epbappcnstshsc4Type Vcustatus3_23::EPBAPPCNSTSHSC4_PARK_BRAKE_RELEASED;
const Vcustatus3_23_Epbappcnstshsc4Type Vcustatus3_23::EPBAPPCNSTSHSC4_PARK_BRAKE_APPLICATION_IN_PROGRESS;
const Vcustatus3_23_Epbappcnstshsc4Type Vcustatus3_23::Epbappcnstshsc4Type_MIN;
const Vcustatus3_23_Epbappcnstshsc4Type Vcustatus3_23::Epbappcnstshsc4Type_MAX;
const int Vcustatus3_23::Epbappcnstshsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus3_23_Vehspdavgvhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus3_23_Vehspdavgvhsc4Type Vcustatus3_23::VEHSPDAVGVHSC4_VALID;
const Vcustatus3_23_Vehspdavgvhsc4Type Vcustatus3_23::VEHSPDAVGVHSC4_INVALID;
const Vcustatus3_23_Vehspdavgvhsc4Type Vcustatus3_23::Vehspdavgvhsc4Type_MIN;
const Vcustatus3_23_Vehspdavgvhsc4Type Vcustatus3_23::Vehspdavgvhsc4Type_MAX;
const int Vcustatus3_23::Vehspdavgvhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus3_23_Vselongtaccvhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus3_23_Vselongtaccvhsc4Type Vcustatus3_23::VSELONGTACCVHSC4_VALID;
const Vcustatus3_23_Vselongtaccvhsc4Type Vcustatus3_23::VSELONGTACCVHSC4_INVALID;
const Vcustatus3_23_Vselongtaccvhsc4Type Vcustatus3_23::Vselongtaccvhsc4Type_MIN;
const Vcustatus3_23_Vselongtaccvhsc4Type Vcustatus3_23::Vselongtaccvhsc4Type_MAX;
const int Vcustatus3_23::Vselongtaccvhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus3_23_Vehdynyawratevhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus3_23_Vehdynyawratevhsc4Type Vcustatus3_23::VEHDYNYAWRATEVHSC4_VALID;
const Vcustatus3_23_Vehdynyawratevhsc4Type Vcustatus3_23::VEHDYNYAWRATEVHSC4_INVALID;
const Vcustatus3_23_Vehdynyawratevhsc4Type Vcustatus3_23::Vehdynyawratevhsc4Type_MIN;
const Vcustatus3_23_Vehdynyawratevhsc4Type Vcustatus3_23::Vehdynyawratevhsc4Type_MAX;
const int Vcustatus3_23::Vehdynyawratevhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus3_23_Vehdynyawratehsc4Type_IsValid(int value) {
  switch (value) {
    case -2048:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus3_23_Vehdynyawratehsc4Type Vcustatus3_23::VEHDYNYAWRATEHSC4_DEG_SEC_0XFFFFF800_0X7FF;
const Vcustatus3_23_Vehdynyawratehsc4Type Vcustatus3_23::Vehdynyawratehsc4Type_MIN;
const Vcustatus3_23_Vehdynyawratehsc4Type Vcustatus3_23::Vehdynyawratehsc4Type_MAX;
const int Vcustatus3_23::Vehdynyawratehsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Vcustatus3_23_Airbagdplhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vcustatus3_23_Airbagdplhsc4Type Vcustatus3_23::AIRBAGDPLHSC4_FALSE;
const Vcustatus3_23_Airbagdplhsc4Type Vcustatus3_23::AIRBAGDPLHSC4_TRUE;
const Vcustatus3_23_Airbagdplhsc4Type Vcustatus3_23::Airbagdplhsc4Type_MIN;
const Vcustatus3_23_Airbagdplhsc4Type Vcustatus3_23::Airbagdplhsc4Type_MAX;
const int Vcustatus3_23::Airbagdplhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Idcstatus8_18_Brklghtscmdhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Idcstatus8_18_Brklghtscmdhsc4Type Idcstatus8_18::BRKLGHTSCMDHSC4_OFF;
const Idcstatus8_18_Brklghtscmdhsc4Type Idcstatus8_18::BRKLGHTSCMDHSC4_ON;
const Idcstatus8_18_Brklghtscmdhsc4Type Idcstatus8_18::Brklghtscmdhsc4Type_MIN;
const Idcstatus8_18_Brklghtscmdhsc4Type Idcstatus8_18::Brklghtscmdhsc4Type_MAX;
const int Idcstatus8_18::Brklghtscmdhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Idcstatus8_18_Dangerouswrnnglghtcmdhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Idcstatus8_18_Dangerouswrnnglghtcmdhsc4Type Idcstatus8_18::DANGEROUSWRNNGLGHTCMDHSC4_OFF;
const Idcstatus8_18_Dangerouswrnnglghtcmdhsc4Type Idcstatus8_18::DANGEROUSWRNNGLGHTCMDHSC4_ON;
const Idcstatus8_18_Dangerouswrnnglghtcmdhsc4Type Idcstatus8_18::Dangerouswrnnglghtcmdhsc4Type_MIN;
const Idcstatus8_18_Dangerouswrnnglghtcmdhsc4Type Idcstatus8_18::Dangerouswrnnglghtcmdhsc4Type_MAX;
const int Idcstatus8_18::Dangerouswrnnglghtcmdhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Idcstatus8_18_Dipdbeamlampscmdhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Idcstatus8_18_Dipdbeamlampscmdhsc4Type Idcstatus8_18::DIPDBEAMLAMPSCMDHSC4_OFF;
const Idcstatus8_18_Dipdbeamlampscmdhsc4Type Idcstatus8_18::DIPDBEAMLAMPSCMDHSC4_ON;
const Idcstatus8_18_Dipdbeamlampscmdhsc4Type Idcstatus8_18::Dipdbeamlampscmdhsc4Type_MIN;
const Idcstatus8_18_Dipdbeamlampscmdhsc4Type Idcstatus8_18::Dipdbeamlampscmdhsc4Type_MAX;
const int Idcstatus8_18::Dipdbeamlampscmdhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Idcstatus8_18_Frtfoglampcmdhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Idcstatus8_18_Frtfoglampcmdhsc4Type Idcstatus8_18::FRTFOGLAMPCMDHSC4_OFF;
const Idcstatus8_18_Frtfoglampcmdhsc4Type Idcstatus8_18::FRTFOGLAMPCMDHSC4_ON;
const Idcstatus8_18_Frtfoglampcmdhsc4Type Idcstatus8_18::Frtfoglampcmdhsc4Type_MIN;
const Idcstatus8_18_Frtfoglampcmdhsc4Type Idcstatus8_18::Frtfoglampcmdhsc4Type_MAX;
const int Idcstatus8_18::Frtfoglampcmdhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Idcstatus8_18_Horncmdhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Idcstatus8_18_Horncmdhsc4Type Idcstatus8_18::HORNCMDHSC4_OFF;
const Idcstatus8_18_Horncmdhsc4Type Idcstatus8_18::HORNCMDHSC4_ON;
const Idcstatus8_18_Horncmdhsc4Type Idcstatus8_18::Horncmdhsc4Type_MIN;
const Idcstatus8_18_Horncmdhsc4Type Idcstatus8_18::Horncmdhsc4Type_MAX;
const int Idcstatus8_18::Horncmdhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Idcstatus8_18_Ldircnlampscmdhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Idcstatus8_18_Ldircnlampscmdhsc4Type Idcstatus8_18::LDIRCNLAMPSCMDHSC4_OFF;
const Idcstatus8_18_Ldircnlampscmdhsc4Type Idcstatus8_18::LDIRCNLAMPSCMDHSC4_ON;
const Idcstatus8_18_Ldircnlampscmdhsc4Type Idcstatus8_18::Ldircnlampscmdhsc4Type_MIN;
const Idcstatus8_18_Ldircnlampscmdhsc4Type Idcstatus8_18::Ldircnlampscmdhsc4Type_MAX;
const int Idcstatus8_18::Ldircnlampscmdhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Idcstatus8_18_Mainbeamlampscmdhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Idcstatus8_18_Mainbeamlampscmdhsc4Type Idcstatus8_18::MAINBEAMLAMPSCMDHSC4_OFF;
const Idcstatus8_18_Mainbeamlampscmdhsc4Type Idcstatus8_18::MAINBEAMLAMPSCMDHSC4_ON;
const Idcstatus8_18_Mainbeamlampscmdhsc4Type Idcstatus8_18::Mainbeamlampscmdhsc4Type_MIN;
const Idcstatus8_18_Mainbeamlampscmdhsc4Type Idcstatus8_18::Mainbeamlampscmdhsc4Type_MAX;
const int Idcstatus8_18::Mainbeamlampscmdhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Idcstatus8_18_Rdircnlampscmdhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Idcstatus8_18_Rdircnlampscmdhsc4Type Idcstatus8_18::RDIRCNLAMPSCMDHSC4_OFF;
const Idcstatus8_18_Rdircnlampscmdhsc4Type Idcstatus8_18::RDIRCNLAMPSCMDHSC4_ON;
const Idcstatus8_18_Rdircnlampscmdhsc4Type Idcstatus8_18::Rdircnlampscmdhsc4Type_MIN;
const Idcstatus8_18_Rdircnlampscmdhsc4Type Idcstatus8_18::Rdircnlampscmdhsc4Type_MAX;
const int Idcstatus8_18::Rdircnlampscmdhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Idcstatus8_18_Revsnglghtcmdhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Idcstatus8_18_Revsnglghtcmdhsc4Type Idcstatus8_18::REVSNGLGHTCMDHSC4_OFF;
const Idcstatus8_18_Revsnglghtcmdhsc4Type Idcstatus8_18::REVSNGLGHTCMDHSC4_ON;
const Idcstatus8_18_Revsnglghtcmdhsc4Type Idcstatus8_18::Revsnglghtcmdhsc4Type_MIN;
const Idcstatus8_18_Revsnglghtcmdhsc4Type Idcstatus8_18::Revsnglghtcmdhsc4Type_MAX;
const int Idcstatus8_18::Revsnglghtcmdhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Idcstatus8_18_Rrfoglampcmdhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Idcstatus8_18_Rrfoglampcmdhsc4Type Idcstatus8_18::RRFOGLAMPCMDHSC4_OFF;
const Idcstatus8_18_Rrfoglampcmdhsc4Type Idcstatus8_18::RRFOGLAMPCMDHSC4_ON;
const Idcstatus8_18_Rrfoglampcmdhsc4Type Idcstatus8_18::Rrfoglampcmdhsc4Type_MIN;
const Idcstatus8_18_Rrfoglampcmdhsc4Type Idcstatus8_18::Rrfoglampcmdhsc4Type_MAX;
const int Idcstatus8_18::Rrfoglampcmdhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Idcstatus8_18_Widthlmptaillightcmdhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Idcstatus8_18_Widthlmptaillightcmdhsc4Type Idcstatus8_18::WIDTHLMPTAILLIGHTCMDHSC4_OFF;
const Idcstatus8_18_Widthlmptaillightcmdhsc4Type Idcstatus8_18::WIDTHLMPTAILLIGHTCMDHSC4_ON;
const Idcstatus8_18_Widthlmptaillightcmdhsc4Type Idcstatus8_18::Widthlmptaillightcmdhsc4Type_MIN;
const Idcstatus8_18_Widthlmptaillightcmdhsc4Type Idcstatus8_18::Widthlmptaillightcmdhsc4Type_MAX;
const int Idcstatus8_18::Widthlmptaillightcmdhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Idcstatus8_18_Wipercmdhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Idcstatus8_18_Wipercmdhsc4Type Idcstatus8_18::WIPERCMDHSC4_OFF;
const Idcstatus8_18_Wipercmdhsc4Type Idcstatus8_18::WIPERCMDHSC4_INTERMITTENT;
const Idcstatus8_18_Wipercmdhsc4Type Idcstatus8_18::WIPERCMDHSC4_NORMAL_POSITION;
const Idcstatus8_18_Wipercmdhsc4Type Idcstatus8_18::WIPERCMDHSC4_FAST_POSITION;
const Idcstatus8_18_Wipercmdhsc4Type Idcstatus8_18::WIPERCMDHSC4_INCHING_POSITION;
const Idcstatus8_18_Wipercmdhsc4Type Idcstatus8_18::Wipercmdhsc4Type_MIN;
const Idcstatus8_18_Wipercmdhsc4Type Idcstatus8_18::Wipercmdhsc4Type_MAX;
const int Idcstatus8_18::Wipercmdhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Idcstatus8_18_Wshrcmdhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Idcstatus8_18_Wshrcmdhsc4Type Idcstatus8_18::WSHRCMDHSC4_OFF;
const Idcstatus8_18_Wshrcmdhsc4Type Idcstatus8_18::WSHRCMDHSC4_ON;
const Idcstatus8_18_Wshrcmdhsc4Type Idcstatus8_18::Wshrcmdhsc4Type_MIN;
const Idcstatus8_18_Wshrcmdhsc4Type Idcstatus8_18::Wshrcmdhsc4Type_MAX;
const int Idcstatus8_18::Wshrcmdhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Idcstatus6_16_Trackcoefficiantx5vhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Idcstatus6_16_Trackcoefficiantx5vhsc4Type Idcstatus6_16::TRACKCOEFFICIANTX5VHSC4_VALID;
const Idcstatus6_16_Trackcoefficiantx5vhsc4Type Idcstatus6_16::TRACKCOEFFICIANTX5VHSC4_INVALID;
const Idcstatus6_16_Trackcoefficiantx5vhsc4Type Idcstatus6_16::Trackcoefficiantx5vhsc4Type_MIN;
const Idcstatus6_16_Trackcoefficiantx5vhsc4Type Idcstatus6_16::Trackcoefficiantx5vhsc4Type_MAX;
const int Idcstatus6_16::Trackcoefficiantx5vhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Idcstatus6_16_Trackcoefficianty2vhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Idcstatus6_16_Trackcoefficianty2vhsc4Type Idcstatus6_16::TRACKCOEFFICIANTY2VHSC4_VALID;
const Idcstatus6_16_Trackcoefficianty2vhsc4Type Idcstatus6_16::TRACKCOEFFICIANTY2VHSC4_INVALID;
const Idcstatus6_16_Trackcoefficianty2vhsc4Type Idcstatus6_16::Trackcoefficianty2vhsc4Type_MIN;
const Idcstatus6_16_Trackcoefficianty2vhsc4Type Idcstatus6_16::Trackcoefficianty2vhsc4Type_MAX;
const int Idcstatus6_16::Trackcoefficianty2vhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Idcstatus6_16_Trackcoefficianty1vhsc4Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Idcstatus6_16_Trackcoefficianty1vhsc4Type Idcstatus6_16::TRACKCOEFFICIANTY1VHSC4_VALID;
const Idcstatus6_16_Trackcoefficianty1vhsc4Type Idcstatus6_16::TRACKCOEFFICIANTY1VHSC4_INVALID;
const Idcstatus6_16_Trackcoefficianty1vhsc4Type Idcstatus6_16::Trackcoefficianty1vhsc4Type_MIN;
const Idcstatus6_16_Trackcoefficianty1vhsc4Type Idcstatus6_16::Trackcoefficianty1vhsc4Type_MAX;
const int Idcstatus6_16::Trackcoefficianty1vhsc4Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Idcstatus1_11::kRoadfollowrearaxleerrorhsc4FieldNumber;
const int Idcstatus1_11::kStrgwhlanggrdcmdhsc4FieldNumber;
const int Idcstatus1_11::kStrgwhlangcmdvhsc4FieldNumber;
const int Idcstatus1_11::kStrgwhlangcmdhsc4FieldNumber;
const int Idcstatus1_11::kVehdececmdvhsc4FieldNumber;
const int Idcstatus1_11::kVehdececmdhsc4FieldNumber;
const int Idcstatus1_11::kEngtoqreqvhsc4FieldNumber;
const int Idcstatus1_11::kEngtoqreqhsc4FieldNumber;
const int Idcstatus1_11::kIdcreadyhsc4FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Idcstatus1_11::Idcstatus1_11()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:atd.drivers.hsc4.Idcstatus1_11)
}
Idcstatus1_11::Idcstatus1_11(const Idcstatus1_11& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&strgwhlanggrdcmdhsc4_, &from.strgwhlanggrdcmdhsc4_,
    reinterpret_cast<char*>(&idcreadyhsc4_) -
    reinterpret_cast<char*>(&strgwhlanggrdcmdhsc4_) + sizeof(idcreadyhsc4_));
  // @@protoc_insertion_point(copy_constructor:atd.drivers.hsc4.Idcstatus1_11)
}

void Idcstatus1_11::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&strgwhlanggrdcmdhsc4_, 0, reinterpret_cast<char*>(&idcreadyhsc4_) -
    reinterpret_cast<char*>(&strgwhlanggrdcmdhsc4_) + sizeof(idcreadyhsc4_));
}

Idcstatus1_11::~Idcstatus1_11() {
  // @@protoc_insertion_point(destructor:atd.drivers.hsc4.Idcstatus1_11)
  SharedDtor();
}

void Idcstatus1_11::SharedDtor() {
}

void Idcstatus1_11::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Idcstatus1_11& Idcstatus1_11::default_instance() {
  protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  return *internal_default_instance();
}

Idcstatus1_11* Idcstatus1_11::New(::google::protobuf::Arena* arena) const {
  Idcstatus1_11* n = new Idcstatus1_11;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Idcstatus1_11::Clear() {
// @@protoc_insertion_point(message_clear_start:atd.drivers.hsc4.Idcstatus1_11)
  if (_has_bits_[0 / 32] & 255u) {
    ::memset(&strgwhlanggrdcmdhsc4_, 0, reinterpret_cast<char*>(&engtoqreqhsc4_) -
      reinterpret_cast<char*>(&strgwhlanggrdcmdhsc4_) + sizeof(engtoqreqhsc4_));
  }
  idcreadyhsc4_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Idcstatus1_11::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:atd.drivers.hsc4.Idcstatus1_11)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 roadfollowrearaxleerrorhsc4 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_roadfollowrearaxleerrorhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roadfollowrearaxleerrorhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double strgwhlanggrdcmdhsc4 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_strgwhlanggrdcmdhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &strgwhlanggrdcmdhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 strgwhlangcmdvhsc4 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_strgwhlangcmdvhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &strgwhlangcmdvhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double strgwhlangcmdhsc4 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u)) {
          set_has_strgwhlangcmdhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &strgwhlangcmdhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vehdececmdvhsc4 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_vehdececmdvhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vehdececmdvhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double vehdececmdhsc4 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u)) {
          set_has_vehdececmdhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vehdececmdhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 engtoqreqvhsc4 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_engtoqreqvhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &engtoqreqvhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double engtoqreqhsc4 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u)) {
          set_has_engtoqreqhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &engtoqreqhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 idcreadyhsc4 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has_idcreadyhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &idcreadyhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:atd.drivers.hsc4.Idcstatus1_11)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:atd.drivers.hsc4.Idcstatus1_11)
  return false;
#undef DO_
}

void Idcstatus1_11::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:atd.drivers.hsc4.Idcstatus1_11)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 roadfollowrearaxleerrorhsc4 = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->roadfollowrearaxleerrorhsc4(), output);
  }

  // optional double strgwhlanggrdcmdhsc4 = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->strgwhlanggrdcmdhsc4(), output);
  }

  // optional int32 strgwhlangcmdvhsc4 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->strgwhlangcmdvhsc4(), output);
  }

  // optional double strgwhlangcmdhsc4 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->strgwhlangcmdhsc4(), output);
  }

  // optional int32 vehdececmdvhsc4 = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->vehdececmdvhsc4(), output);
  }

  // optional double vehdececmdhsc4 = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->vehdececmdhsc4(), output);
  }

  // optional int32 engtoqreqvhsc4 = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->engtoqreqvhsc4(), output);
  }

  // optional double engtoqreqhsc4 = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->engtoqreqhsc4(), output);
  }

  // optional int32 idcreadyhsc4 = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->idcreadyhsc4(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:atd.drivers.hsc4.Idcstatus1_11)
}

size_t Idcstatus1_11::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:atd.drivers.hsc4.Idcstatus1_11)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 255u) {
    // optional double strgwhlanggrdcmdhsc4 = 2;
    if (has_strgwhlanggrdcmdhsc4()) {
      total_size += 1 + 8;
    }

    // optional int32 roadfollowrearaxleerrorhsc4 = 1;
    if (has_roadfollowrearaxleerrorhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roadfollowrearaxleerrorhsc4());
    }

    // optional int32 strgwhlangcmdvhsc4 = 3;
    if (has_strgwhlangcmdvhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->strgwhlangcmdvhsc4());
    }

    // optional double strgwhlangcmdhsc4 = 4;
    if (has_strgwhlangcmdhsc4()) {
      total_size += 1 + 8;
    }

    // optional double vehdececmdhsc4 = 6;
    if (has_vehdececmdhsc4()) {
      total_size += 1 + 8;
    }

    // optional int32 vehdececmdvhsc4 = 5;
    if (has_vehdececmdvhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vehdececmdvhsc4());
    }

    // optional int32 engtoqreqvhsc4 = 7;
    if (has_engtoqreqvhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->engtoqreqvhsc4());
    }

    // optional double engtoqreqhsc4 = 8;
    if (has_engtoqreqhsc4()) {
      total_size += 1 + 8;
    }

  }
  // optional int32 idcreadyhsc4 = 9;
  if (has_idcreadyhsc4()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->idcreadyhsc4());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Idcstatus1_11::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Idcstatus1_11*>(&from));
}

void Idcstatus1_11::MergeFrom(const Idcstatus1_11& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:atd.drivers.hsc4.Idcstatus1_11)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      strgwhlanggrdcmdhsc4_ = from.strgwhlanggrdcmdhsc4_;
    }
    if (cached_has_bits & 0x00000002u) {
      roadfollowrearaxleerrorhsc4_ = from.roadfollowrearaxleerrorhsc4_;
    }
    if (cached_has_bits & 0x00000004u) {
      strgwhlangcmdvhsc4_ = from.strgwhlangcmdvhsc4_;
    }
    if (cached_has_bits & 0x00000008u) {
      strgwhlangcmdhsc4_ = from.strgwhlangcmdhsc4_;
    }
    if (cached_has_bits & 0x00000010u) {
      vehdececmdhsc4_ = from.vehdececmdhsc4_;
    }
    if (cached_has_bits & 0x00000020u) {
      vehdececmdvhsc4_ = from.vehdececmdvhsc4_;
    }
    if (cached_has_bits & 0x00000040u) {
      engtoqreqvhsc4_ = from.engtoqreqvhsc4_;
    }
    if (cached_has_bits & 0x00000080u) {
      engtoqreqhsc4_ = from.engtoqreqhsc4_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_idcreadyhsc4(from.idcreadyhsc4());
  }
}

void Idcstatus1_11::CopyFrom(const Idcstatus1_11& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:atd.drivers.hsc4.Idcstatus1_11)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Idcstatus1_11::IsInitialized() const {
  return true;
}

void Idcstatus1_11::Swap(Idcstatus1_11* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Idcstatus1_11::InternalSwap(Idcstatus1_11* other) {
  std::swap(strgwhlanggrdcmdhsc4_, other->strgwhlanggrdcmdhsc4_);
  std::swap(roadfollowrearaxleerrorhsc4_, other->roadfollowrearaxleerrorhsc4_);
  std::swap(strgwhlangcmdvhsc4_, other->strgwhlangcmdvhsc4_);
  std::swap(strgwhlangcmdhsc4_, other->strgwhlangcmdhsc4_);
  std::swap(vehdececmdhsc4_, other->vehdececmdhsc4_);
  std::swap(vehdececmdvhsc4_, other->vehdececmdvhsc4_);
  std::swap(engtoqreqvhsc4_, other->engtoqreqvhsc4_);
  std::swap(engtoqreqhsc4_, other->engtoqreqhsc4_);
  std::swap(idcreadyhsc4_, other->idcreadyhsc4_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Idcstatus1_11::GetTypeName() const {
  return "atd.drivers.hsc4.Idcstatus1_11";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Idcstatus1_11

// optional int32 roadfollowrearaxleerrorhsc4 = 1;
bool Idcstatus1_11::has_roadfollowrearaxleerrorhsc4() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Idcstatus1_11::set_has_roadfollowrearaxleerrorhsc4() {
  _has_bits_[0] |= 0x00000002u;
}
void Idcstatus1_11::clear_has_roadfollowrearaxleerrorhsc4() {
  _has_bits_[0] &= ~0x00000002u;
}
void Idcstatus1_11::clear_roadfollowrearaxleerrorhsc4() {
  roadfollowrearaxleerrorhsc4_ = 0;
  clear_has_roadfollowrearaxleerrorhsc4();
}
::google::protobuf::int32 Idcstatus1_11::roadfollowrearaxleerrorhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus1_11.roadfollowrearaxleerrorhsc4)
  return roadfollowrearaxleerrorhsc4_;
}
void Idcstatus1_11::set_roadfollowrearaxleerrorhsc4(::google::protobuf::int32 value) {
  set_has_roadfollowrearaxleerrorhsc4();
  roadfollowrearaxleerrorhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus1_11.roadfollowrearaxleerrorhsc4)
}

// optional double strgwhlanggrdcmdhsc4 = 2;
bool Idcstatus1_11::has_strgwhlanggrdcmdhsc4() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Idcstatus1_11::set_has_strgwhlanggrdcmdhsc4() {
  _has_bits_[0] |= 0x00000001u;
}
void Idcstatus1_11::clear_has_strgwhlanggrdcmdhsc4() {
  _has_bits_[0] &= ~0x00000001u;
}
void Idcstatus1_11::clear_strgwhlanggrdcmdhsc4() {
  strgwhlanggrdcmdhsc4_ = 0;
  clear_has_strgwhlanggrdcmdhsc4();
}
double Idcstatus1_11::strgwhlanggrdcmdhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus1_11.strgwhlanggrdcmdhsc4)
  return strgwhlanggrdcmdhsc4_;
}
void Idcstatus1_11::set_strgwhlanggrdcmdhsc4(double value) {
  set_has_strgwhlanggrdcmdhsc4();
  strgwhlanggrdcmdhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus1_11.strgwhlanggrdcmdhsc4)
}

// optional int32 strgwhlangcmdvhsc4 = 3;
bool Idcstatus1_11::has_strgwhlangcmdvhsc4() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Idcstatus1_11::set_has_strgwhlangcmdvhsc4() {
  _has_bits_[0] |= 0x00000004u;
}
void Idcstatus1_11::clear_has_strgwhlangcmdvhsc4() {
  _has_bits_[0] &= ~0x00000004u;
}
void Idcstatus1_11::clear_strgwhlangcmdvhsc4() {
  strgwhlangcmdvhsc4_ = 0;
  clear_has_strgwhlangcmdvhsc4();
}
::google::protobuf::int32 Idcstatus1_11::strgwhlangcmdvhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus1_11.strgwhlangcmdvhsc4)
  return strgwhlangcmdvhsc4_;
}
void Idcstatus1_11::set_strgwhlangcmdvhsc4(::google::protobuf::int32 value) {
  set_has_strgwhlangcmdvhsc4();
  strgwhlangcmdvhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus1_11.strgwhlangcmdvhsc4)
}

// optional double strgwhlangcmdhsc4 = 4;
bool Idcstatus1_11::has_strgwhlangcmdhsc4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Idcstatus1_11::set_has_strgwhlangcmdhsc4() {
  _has_bits_[0] |= 0x00000008u;
}
void Idcstatus1_11::clear_has_strgwhlangcmdhsc4() {
  _has_bits_[0] &= ~0x00000008u;
}
void Idcstatus1_11::clear_strgwhlangcmdhsc4() {
  strgwhlangcmdhsc4_ = 0;
  clear_has_strgwhlangcmdhsc4();
}
double Idcstatus1_11::strgwhlangcmdhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus1_11.strgwhlangcmdhsc4)
  return strgwhlangcmdhsc4_;
}
void Idcstatus1_11::set_strgwhlangcmdhsc4(double value) {
  set_has_strgwhlangcmdhsc4();
  strgwhlangcmdhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus1_11.strgwhlangcmdhsc4)
}

// optional int32 vehdececmdvhsc4 = 5;
bool Idcstatus1_11::has_vehdececmdvhsc4() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Idcstatus1_11::set_has_vehdececmdvhsc4() {
  _has_bits_[0] |= 0x00000020u;
}
void Idcstatus1_11::clear_has_vehdececmdvhsc4() {
  _has_bits_[0] &= ~0x00000020u;
}
void Idcstatus1_11::clear_vehdececmdvhsc4() {
  vehdececmdvhsc4_ = 0;
  clear_has_vehdececmdvhsc4();
}
::google::protobuf::int32 Idcstatus1_11::vehdececmdvhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus1_11.vehdececmdvhsc4)
  return vehdececmdvhsc4_;
}
void Idcstatus1_11::set_vehdececmdvhsc4(::google::protobuf::int32 value) {
  set_has_vehdececmdvhsc4();
  vehdececmdvhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus1_11.vehdececmdvhsc4)
}

// optional double vehdececmdhsc4 = 6;
bool Idcstatus1_11::has_vehdececmdhsc4() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Idcstatus1_11::set_has_vehdececmdhsc4() {
  _has_bits_[0] |= 0x00000010u;
}
void Idcstatus1_11::clear_has_vehdececmdhsc4() {
  _has_bits_[0] &= ~0x00000010u;
}
void Idcstatus1_11::clear_vehdececmdhsc4() {
  vehdececmdhsc4_ = 0;
  clear_has_vehdececmdhsc4();
}
double Idcstatus1_11::vehdececmdhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus1_11.vehdececmdhsc4)
  return vehdececmdhsc4_;
}
void Idcstatus1_11::set_vehdececmdhsc4(double value) {
  set_has_vehdececmdhsc4();
  vehdececmdhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus1_11.vehdececmdhsc4)
}

// optional int32 engtoqreqvhsc4 = 7;
bool Idcstatus1_11::has_engtoqreqvhsc4() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Idcstatus1_11::set_has_engtoqreqvhsc4() {
  _has_bits_[0] |= 0x00000040u;
}
void Idcstatus1_11::clear_has_engtoqreqvhsc4() {
  _has_bits_[0] &= ~0x00000040u;
}
void Idcstatus1_11::clear_engtoqreqvhsc4() {
  engtoqreqvhsc4_ = 0;
  clear_has_engtoqreqvhsc4();
}
::google::protobuf::int32 Idcstatus1_11::engtoqreqvhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus1_11.engtoqreqvhsc4)
  return engtoqreqvhsc4_;
}
void Idcstatus1_11::set_engtoqreqvhsc4(::google::protobuf::int32 value) {
  set_has_engtoqreqvhsc4();
  engtoqreqvhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus1_11.engtoqreqvhsc4)
}

// optional double engtoqreqhsc4 = 8;
bool Idcstatus1_11::has_engtoqreqhsc4() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Idcstatus1_11::set_has_engtoqreqhsc4() {
  _has_bits_[0] |= 0x00000080u;
}
void Idcstatus1_11::clear_has_engtoqreqhsc4() {
  _has_bits_[0] &= ~0x00000080u;
}
void Idcstatus1_11::clear_engtoqreqhsc4() {
  engtoqreqhsc4_ = 0;
  clear_has_engtoqreqhsc4();
}
double Idcstatus1_11::engtoqreqhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus1_11.engtoqreqhsc4)
  return engtoqreqhsc4_;
}
void Idcstatus1_11::set_engtoqreqhsc4(double value) {
  set_has_engtoqreqhsc4();
  engtoqreqhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus1_11.engtoqreqhsc4)
}

// optional int32 idcreadyhsc4 = 9;
bool Idcstatus1_11::has_idcreadyhsc4() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Idcstatus1_11::set_has_idcreadyhsc4() {
  _has_bits_[0] |= 0x00000100u;
}
void Idcstatus1_11::clear_has_idcreadyhsc4() {
  _has_bits_[0] &= ~0x00000100u;
}
void Idcstatus1_11::clear_idcreadyhsc4() {
  idcreadyhsc4_ = 0;
  clear_has_idcreadyhsc4();
}
::google::protobuf::int32 Idcstatus1_11::idcreadyhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus1_11.idcreadyhsc4)
  return idcreadyhsc4_;
}
void Idcstatus1_11::set_idcreadyhsc4(::google::protobuf::int32 value) {
  set_has_idcreadyhsc4();
  idcreadyhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus1_11.idcreadyhsc4)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vcustatus10_30::kRnondrvnwhlrotldistvhsc2FieldNumber;
const int Vcustatus10_30::kRnondrvnwhlrotldistpchsc2FieldNumber;
const int Vcustatus10_30::kRdrvnwhlrotldistvhsc2FieldNumber;
const int Vcustatus10_30::kRdrvnwhlrotldistplsctrhsc2FieldNumber;
const int Vcustatus10_30::kLdrvnwhlrotldistvhsc2FieldNumber;
const int Vcustatus10_30::kLnondrvnwhlrotldistpchsc2FieldNumber;
const int Vcustatus10_30::kLnondrvnwhlrotldistvhsc2FieldNumber;
const int Vcustatus10_30::kLdrvnwhlrotldistplsctrhsc2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vcustatus10_30::Vcustatus10_30()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:atd.drivers.hsc4.Vcustatus10_30)
}
Vcustatus10_30::Vcustatus10_30(const Vcustatus10_30& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&rnondrvnwhlrotldistpchsc2_, &from.rnondrvnwhlrotldistpchsc2_,
    reinterpret_cast<char*>(&ldrvnwhlrotldistplsctrhsc2_) -
    reinterpret_cast<char*>(&rnondrvnwhlrotldistpchsc2_) + sizeof(ldrvnwhlrotldistplsctrhsc2_));
  // @@protoc_insertion_point(copy_constructor:atd.drivers.hsc4.Vcustatus10_30)
}

void Vcustatus10_30::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&rnondrvnwhlrotldistpchsc2_, 0, reinterpret_cast<char*>(&ldrvnwhlrotldistplsctrhsc2_) -
    reinterpret_cast<char*>(&rnondrvnwhlrotldistpchsc2_) + sizeof(ldrvnwhlrotldistplsctrhsc2_));
}

Vcustatus10_30::~Vcustatus10_30() {
  // @@protoc_insertion_point(destructor:atd.drivers.hsc4.Vcustatus10_30)
  SharedDtor();
}

void Vcustatus10_30::SharedDtor() {
}

void Vcustatus10_30::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Vcustatus10_30& Vcustatus10_30::default_instance() {
  protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  return *internal_default_instance();
}

Vcustatus10_30* Vcustatus10_30::New(::google::protobuf::Arena* arena) const {
  Vcustatus10_30* n = new Vcustatus10_30;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vcustatus10_30::Clear() {
// @@protoc_insertion_point(message_clear_start:atd.drivers.hsc4.Vcustatus10_30)
  if (_has_bits_[0 / 32] & 255u) {
    ::memset(&rnondrvnwhlrotldistpchsc2_, 0, reinterpret_cast<char*>(&ldrvnwhlrotldistplsctrhsc2_) -
      reinterpret_cast<char*>(&rnondrvnwhlrotldistpchsc2_) + sizeof(ldrvnwhlrotldistplsctrhsc2_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Vcustatus10_30::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:atd.drivers.hsc4.Vcustatus10_30)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool rnondrvnwhlrotldistvhsc2 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_rnondrvnwhlrotldistvhsc2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &rnondrvnwhlrotldistvhsc2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 rnondrvnwhlrotldistpchsc2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_rnondrvnwhlrotldistpchsc2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rnondrvnwhlrotldistpchsc2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool rdrvnwhlrotldistvhsc2 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_rdrvnwhlrotldistvhsc2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &rdrvnwhlrotldistvhsc2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 rdrvnwhlrotldistplsctrhsc2 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_rdrvnwhlrotldistplsctrhsc2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rdrvnwhlrotldistplsctrhsc2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool ldrvnwhlrotldistvhsc2 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_ldrvnwhlrotldistvhsc2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ldrvnwhlrotldistvhsc2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 lnondrvnwhlrotldistpchsc2 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_lnondrvnwhlrotldistpchsc2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lnondrvnwhlrotldistpchsc2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool lnondrvnwhlrotldistvhsc2 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_lnondrvnwhlrotldistvhsc2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &lnondrvnwhlrotldistvhsc2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ldrvnwhlrotldistplsctrhsc2 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_ldrvnwhlrotldistplsctrhsc2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ldrvnwhlrotldistplsctrhsc2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:atd.drivers.hsc4.Vcustatus10_30)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:atd.drivers.hsc4.Vcustatus10_30)
  return false;
#undef DO_
}

void Vcustatus10_30::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:atd.drivers.hsc4.Vcustatus10_30)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool rnondrvnwhlrotldistvhsc2 = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->rnondrvnwhlrotldistvhsc2(), output);
  }

  // optional int32 rnondrvnwhlrotldistpchsc2 = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rnondrvnwhlrotldistpchsc2(), output);
  }

  // optional bool rdrvnwhlrotldistvhsc2 = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->rdrvnwhlrotldistvhsc2(), output);
  }

  // optional int32 rdrvnwhlrotldistplsctrhsc2 = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->rdrvnwhlrotldistplsctrhsc2(), output);
  }

  // optional bool ldrvnwhlrotldistvhsc2 = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->ldrvnwhlrotldistvhsc2(), output);
  }

  // optional int32 lnondrvnwhlrotldistpchsc2 = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->lnondrvnwhlrotldistpchsc2(), output);
  }

  // optional bool lnondrvnwhlrotldistvhsc2 = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->lnondrvnwhlrotldistvhsc2(), output);
  }

  // optional int32 ldrvnwhlrotldistplsctrhsc2 = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->ldrvnwhlrotldistplsctrhsc2(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:atd.drivers.hsc4.Vcustatus10_30)
}

size_t Vcustatus10_30::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:atd.drivers.hsc4.Vcustatus10_30)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 255u) {
    // optional int32 rnondrvnwhlrotldistpchsc2 = 2;
    if (has_rnondrvnwhlrotldistpchsc2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rnondrvnwhlrotldistpchsc2());
    }

    // optional int32 rdrvnwhlrotldistplsctrhsc2 = 4;
    if (has_rdrvnwhlrotldistplsctrhsc2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rdrvnwhlrotldistplsctrhsc2());
    }

    // optional bool rnondrvnwhlrotldistvhsc2 = 1;
    if (has_rnondrvnwhlrotldistvhsc2()) {
      total_size += 1 + 1;
    }

    // optional bool rdrvnwhlrotldistvhsc2 = 3;
    if (has_rdrvnwhlrotldistvhsc2()) {
      total_size += 1 + 1;
    }

    // optional bool ldrvnwhlrotldistvhsc2 = 5;
    if (has_ldrvnwhlrotldistvhsc2()) {
      total_size += 1 + 1;
    }

    // optional bool lnondrvnwhlrotldistvhsc2 = 7;
    if (has_lnondrvnwhlrotldistvhsc2()) {
      total_size += 1 + 1;
    }

    // optional int32 lnondrvnwhlrotldistpchsc2 = 6;
    if (has_lnondrvnwhlrotldistpchsc2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lnondrvnwhlrotldistpchsc2());
    }

    // optional int32 ldrvnwhlrotldistplsctrhsc2 = 8;
    if (has_ldrvnwhlrotldistplsctrhsc2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ldrvnwhlrotldistplsctrhsc2());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Vcustatus10_30::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Vcustatus10_30*>(&from));
}

void Vcustatus10_30::MergeFrom(const Vcustatus10_30& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:atd.drivers.hsc4.Vcustatus10_30)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      rnondrvnwhlrotldistpchsc2_ = from.rnondrvnwhlrotldistpchsc2_;
    }
    if (cached_has_bits & 0x00000002u) {
      rdrvnwhlrotldistplsctrhsc2_ = from.rdrvnwhlrotldistplsctrhsc2_;
    }
    if (cached_has_bits & 0x00000004u) {
      rnondrvnwhlrotldistvhsc2_ = from.rnondrvnwhlrotldistvhsc2_;
    }
    if (cached_has_bits & 0x00000008u) {
      rdrvnwhlrotldistvhsc2_ = from.rdrvnwhlrotldistvhsc2_;
    }
    if (cached_has_bits & 0x00000010u) {
      ldrvnwhlrotldistvhsc2_ = from.ldrvnwhlrotldistvhsc2_;
    }
    if (cached_has_bits & 0x00000020u) {
      lnondrvnwhlrotldistvhsc2_ = from.lnondrvnwhlrotldistvhsc2_;
    }
    if (cached_has_bits & 0x00000040u) {
      lnondrvnwhlrotldistpchsc2_ = from.lnondrvnwhlrotldistpchsc2_;
    }
    if (cached_has_bits & 0x00000080u) {
      ldrvnwhlrotldistplsctrhsc2_ = from.ldrvnwhlrotldistplsctrhsc2_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Vcustatus10_30::CopyFrom(const Vcustatus10_30& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:atd.drivers.hsc4.Vcustatus10_30)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vcustatus10_30::IsInitialized() const {
  return true;
}

void Vcustatus10_30::Swap(Vcustatus10_30* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vcustatus10_30::InternalSwap(Vcustatus10_30* other) {
  std::swap(rnondrvnwhlrotldistpchsc2_, other->rnondrvnwhlrotldistpchsc2_);
  std::swap(rdrvnwhlrotldistplsctrhsc2_, other->rdrvnwhlrotldistplsctrhsc2_);
  std::swap(rnondrvnwhlrotldistvhsc2_, other->rnondrvnwhlrotldistvhsc2_);
  std::swap(rdrvnwhlrotldistvhsc2_, other->rdrvnwhlrotldistvhsc2_);
  std::swap(ldrvnwhlrotldistvhsc2_, other->ldrvnwhlrotldistvhsc2_);
  std::swap(lnondrvnwhlrotldistvhsc2_, other->lnondrvnwhlrotldistvhsc2_);
  std::swap(lnondrvnwhlrotldistpchsc2_, other->lnondrvnwhlrotldistpchsc2_);
  std::swap(ldrvnwhlrotldistplsctrhsc2_, other->ldrvnwhlrotldistplsctrhsc2_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Vcustatus10_30::GetTypeName() const {
  return "atd.drivers.hsc4.Vcustatus10_30";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Vcustatus10_30

// optional bool rnondrvnwhlrotldistvhsc2 = 1;
bool Vcustatus10_30::has_rnondrvnwhlrotldistvhsc2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Vcustatus10_30::set_has_rnondrvnwhlrotldistvhsc2() {
  _has_bits_[0] |= 0x00000004u;
}
void Vcustatus10_30::clear_has_rnondrvnwhlrotldistvhsc2() {
  _has_bits_[0] &= ~0x00000004u;
}
void Vcustatus10_30::clear_rnondrvnwhlrotldistvhsc2() {
  rnondrvnwhlrotldistvhsc2_ = false;
  clear_has_rnondrvnwhlrotldistvhsc2();
}
bool Vcustatus10_30::rnondrvnwhlrotldistvhsc2() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus10_30.rnondrvnwhlrotldistvhsc2)
  return rnondrvnwhlrotldistvhsc2_;
}
void Vcustatus10_30::set_rnondrvnwhlrotldistvhsc2(bool value) {
  set_has_rnondrvnwhlrotldistvhsc2();
  rnondrvnwhlrotldistvhsc2_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus10_30.rnondrvnwhlrotldistvhsc2)
}

// optional int32 rnondrvnwhlrotldistpchsc2 = 2;
bool Vcustatus10_30::has_rnondrvnwhlrotldistpchsc2() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Vcustatus10_30::set_has_rnondrvnwhlrotldistpchsc2() {
  _has_bits_[0] |= 0x00000001u;
}
void Vcustatus10_30::clear_has_rnondrvnwhlrotldistpchsc2() {
  _has_bits_[0] &= ~0x00000001u;
}
void Vcustatus10_30::clear_rnondrvnwhlrotldistpchsc2() {
  rnondrvnwhlrotldistpchsc2_ = 0;
  clear_has_rnondrvnwhlrotldistpchsc2();
}
::google::protobuf::int32 Vcustatus10_30::rnondrvnwhlrotldistpchsc2() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus10_30.rnondrvnwhlrotldistpchsc2)
  return rnondrvnwhlrotldistpchsc2_;
}
void Vcustatus10_30::set_rnondrvnwhlrotldistpchsc2(::google::protobuf::int32 value) {
  set_has_rnondrvnwhlrotldistpchsc2();
  rnondrvnwhlrotldistpchsc2_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus10_30.rnondrvnwhlrotldistpchsc2)
}

// optional bool rdrvnwhlrotldistvhsc2 = 3;
bool Vcustatus10_30::has_rdrvnwhlrotldistvhsc2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Vcustatus10_30::set_has_rdrvnwhlrotldistvhsc2() {
  _has_bits_[0] |= 0x00000008u;
}
void Vcustatus10_30::clear_has_rdrvnwhlrotldistvhsc2() {
  _has_bits_[0] &= ~0x00000008u;
}
void Vcustatus10_30::clear_rdrvnwhlrotldistvhsc2() {
  rdrvnwhlrotldistvhsc2_ = false;
  clear_has_rdrvnwhlrotldistvhsc2();
}
bool Vcustatus10_30::rdrvnwhlrotldistvhsc2() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus10_30.rdrvnwhlrotldistvhsc2)
  return rdrvnwhlrotldistvhsc2_;
}
void Vcustatus10_30::set_rdrvnwhlrotldistvhsc2(bool value) {
  set_has_rdrvnwhlrotldistvhsc2();
  rdrvnwhlrotldistvhsc2_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus10_30.rdrvnwhlrotldistvhsc2)
}

// optional int32 rdrvnwhlrotldistplsctrhsc2 = 4;
bool Vcustatus10_30::has_rdrvnwhlrotldistplsctrhsc2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Vcustatus10_30::set_has_rdrvnwhlrotldistplsctrhsc2() {
  _has_bits_[0] |= 0x00000002u;
}
void Vcustatus10_30::clear_has_rdrvnwhlrotldistplsctrhsc2() {
  _has_bits_[0] &= ~0x00000002u;
}
void Vcustatus10_30::clear_rdrvnwhlrotldistplsctrhsc2() {
  rdrvnwhlrotldistplsctrhsc2_ = 0;
  clear_has_rdrvnwhlrotldistplsctrhsc2();
}
::google::protobuf::int32 Vcustatus10_30::rdrvnwhlrotldistplsctrhsc2() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus10_30.rdrvnwhlrotldistplsctrhsc2)
  return rdrvnwhlrotldistplsctrhsc2_;
}
void Vcustatus10_30::set_rdrvnwhlrotldistplsctrhsc2(::google::protobuf::int32 value) {
  set_has_rdrvnwhlrotldistplsctrhsc2();
  rdrvnwhlrotldistplsctrhsc2_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus10_30.rdrvnwhlrotldistplsctrhsc2)
}

// optional bool ldrvnwhlrotldistvhsc2 = 5;
bool Vcustatus10_30::has_ldrvnwhlrotldistvhsc2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Vcustatus10_30::set_has_ldrvnwhlrotldistvhsc2() {
  _has_bits_[0] |= 0x00000010u;
}
void Vcustatus10_30::clear_has_ldrvnwhlrotldistvhsc2() {
  _has_bits_[0] &= ~0x00000010u;
}
void Vcustatus10_30::clear_ldrvnwhlrotldistvhsc2() {
  ldrvnwhlrotldistvhsc2_ = false;
  clear_has_ldrvnwhlrotldistvhsc2();
}
bool Vcustatus10_30::ldrvnwhlrotldistvhsc2() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus10_30.ldrvnwhlrotldistvhsc2)
  return ldrvnwhlrotldistvhsc2_;
}
void Vcustatus10_30::set_ldrvnwhlrotldistvhsc2(bool value) {
  set_has_ldrvnwhlrotldistvhsc2();
  ldrvnwhlrotldistvhsc2_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus10_30.ldrvnwhlrotldistvhsc2)
}

// optional int32 lnondrvnwhlrotldistpchsc2 = 6;
bool Vcustatus10_30::has_lnondrvnwhlrotldistpchsc2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Vcustatus10_30::set_has_lnondrvnwhlrotldistpchsc2() {
  _has_bits_[0] |= 0x00000040u;
}
void Vcustatus10_30::clear_has_lnondrvnwhlrotldistpchsc2() {
  _has_bits_[0] &= ~0x00000040u;
}
void Vcustatus10_30::clear_lnondrvnwhlrotldistpchsc2() {
  lnondrvnwhlrotldistpchsc2_ = 0;
  clear_has_lnondrvnwhlrotldistpchsc2();
}
::google::protobuf::int32 Vcustatus10_30::lnondrvnwhlrotldistpchsc2() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus10_30.lnondrvnwhlrotldistpchsc2)
  return lnondrvnwhlrotldistpchsc2_;
}
void Vcustatus10_30::set_lnondrvnwhlrotldistpchsc2(::google::protobuf::int32 value) {
  set_has_lnondrvnwhlrotldistpchsc2();
  lnondrvnwhlrotldistpchsc2_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus10_30.lnondrvnwhlrotldistpchsc2)
}

// optional bool lnondrvnwhlrotldistvhsc2 = 7;
bool Vcustatus10_30::has_lnondrvnwhlrotldistvhsc2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Vcustatus10_30::set_has_lnondrvnwhlrotldistvhsc2() {
  _has_bits_[0] |= 0x00000020u;
}
void Vcustatus10_30::clear_has_lnondrvnwhlrotldistvhsc2() {
  _has_bits_[0] &= ~0x00000020u;
}
void Vcustatus10_30::clear_lnondrvnwhlrotldistvhsc2() {
  lnondrvnwhlrotldistvhsc2_ = false;
  clear_has_lnondrvnwhlrotldistvhsc2();
}
bool Vcustatus10_30::lnondrvnwhlrotldistvhsc2() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus10_30.lnondrvnwhlrotldistvhsc2)
  return lnondrvnwhlrotldistvhsc2_;
}
void Vcustatus10_30::set_lnondrvnwhlrotldistvhsc2(bool value) {
  set_has_lnondrvnwhlrotldistvhsc2();
  lnondrvnwhlrotldistvhsc2_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus10_30.lnondrvnwhlrotldistvhsc2)
}

// optional int32 ldrvnwhlrotldistplsctrhsc2 = 8;
bool Vcustatus10_30::has_ldrvnwhlrotldistplsctrhsc2() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Vcustatus10_30::set_has_ldrvnwhlrotldistplsctrhsc2() {
  _has_bits_[0] |= 0x00000080u;
}
void Vcustatus10_30::clear_has_ldrvnwhlrotldistplsctrhsc2() {
  _has_bits_[0] &= ~0x00000080u;
}
void Vcustatus10_30::clear_ldrvnwhlrotldistplsctrhsc2() {
  ldrvnwhlrotldistplsctrhsc2_ = 0;
  clear_has_ldrvnwhlrotldistplsctrhsc2();
}
::google::protobuf::int32 Vcustatus10_30::ldrvnwhlrotldistplsctrhsc2() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus10_30.ldrvnwhlrotldistplsctrhsc2)
  return ldrvnwhlrotldistplsctrhsc2_;
}
void Vcustatus10_30::set_ldrvnwhlrotldistplsctrhsc2(::google::protobuf::int32 value) {
  set_has_ldrvnwhlrotldistplsctrhsc2();
  ldrvnwhlrotldistplsctrhsc2_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus10_30.ldrvnwhlrotldistplsctrhsc2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Mecommon2_v2_560::kBrakesFieldNumber;
const int Mecommon2_v2_560::kHighBeamFieldNumber;
const int Mecommon2_v2_560::kReverseGearFieldNumber;
const int Mecommon2_v2_560::kRightBlinkFieldNumber;
const int Mecommon2_v2_560::kWipersFieldNumber;
const int Mecommon2_v2_560::kVehicleSpeedFieldNumber;
const int Mecommon2_v2_560::kYawRateFieldNumber;
const int Mecommon2_v2_560::kLeftBlinkFieldNumber;
const int Mecommon2_v2_560::kSteeringWheelAngleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Mecommon2_v2_560::Mecommon2_v2_560()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:atd.drivers.hsc4.Mecommon2_v2_560)
}
Mecommon2_v2_560::Mecommon2_v2_560(const Mecommon2_v2_560& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&brakes_, &from.brakes_,
    reinterpret_cast<char*>(&left_blink_) -
    reinterpret_cast<char*>(&brakes_) + sizeof(left_blink_));
  // @@protoc_insertion_point(copy_constructor:atd.drivers.hsc4.Mecommon2_v2_560)
}

void Mecommon2_v2_560::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&brakes_, 0, reinterpret_cast<char*>(&left_blink_) -
    reinterpret_cast<char*>(&brakes_) + sizeof(left_blink_));
}

Mecommon2_v2_560::~Mecommon2_v2_560() {
  // @@protoc_insertion_point(destructor:atd.drivers.hsc4.Mecommon2_v2_560)
  SharedDtor();
}

void Mecommon2_v2_560::SharedDtor() {
}

void Mecommon2_v2_560::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Mecommon2_v2_560& Mecommon2_v2_560::default_instance() {
  protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  return *internal_default_instance();
}

Mecommon2_v2_560* Mecommon2_v2_560::New(::google::protobuf::Arena* arena) const {
  Mecommon2_v2_560* n = new Mecommon2_v2_560;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Mecommon2_v2_560::Clear() {
// @@protoc_insertion_point(message_clear_start:atd.drivers.hsc4.Mecommon2_v2_560)
  if (_has_bits_[0 / 32] & 255u) {
    ::memset(&brakes_, 0, reinterpret_cast<char*>(&steering_wheel_angle_) -
      reinterpret_cast<char*>(&brakes_) + sizeof(steering_wheel_angle_));
  }
  left_blink_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Mecommon2_v2_560::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:atd.drivers.hsc4.Mecommon2_v2_560)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool brakes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_brakes();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &brakes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool high_beam = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_high_beam();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &high_beam_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool reverse_gear = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_reverse_gear();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reverse_gear_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool right_blink = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_right_blink();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &right_blink_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 wipers = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_wipers();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wipers_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double vehicle_speed = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u)) {
          set_has_vehicle_speed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vehicle_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double yaw_rate = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u)) {
          set_has_yaw_rate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &yaw_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool left_blink = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_left_blink();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &left_blink_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double steering_wheel_angle = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u)) {
          set_has_steering_wheel_angle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &steering_wheel_angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:atd.drivers.hsc4.Mecommon2_v2_560)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:atd.drivers.hsc4.Mecommon2_v2_560)
  return false;
#undef DO_
}

void Mecommon2_v2_560::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:atd.drivers.hsc4.Mecommon2_v2_560)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool brakes = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->brakes(), output);
  }

  // optional bool high_beam = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->high_beam(), output);
  }

  // optional bool reverse_gear = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->reverse_gear(), output);
  }

  // optional bool right_blink = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->right_blink(), output);
  }

  // optional int32 wipers = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->wipers(), output);
  }

  // optional double vehicle_speed = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->vehicle_speed(), output);
  }

  // optional double yaw_rate = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->yaw_rate(), output);
  }

  // optional bool left_blink = 8;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->left_blink(), output);
  }

  // optional double steering_wheel_angle = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->steering_wheel_angle(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:atd.drivers.hsc4.Mecommon2_v2_560)
}

size_t Mecommon2_v2_560::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:atd.drivers.hsc4.Mecommon2_v2_560)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 255u) {
    // optional bool brakes = 1;
    if (has_brakes()) {
      total_size += 1 + 1;
    }

    // optional bool high_beam = 2;
    if (has_high_beam()) {
      total_size += 1 + 1;
    }

    // optional bool reverse_gear = 3;
    if (has_reverse_gear()) {
      total_size += 1 + 1;
    }

    // optional bool right_blink = 4;
    if (has_right_blink()) {
      total_size += 1 + 1;
    }

    // optional int32 wipers = 5;
    if (has_wipers()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wipers());
    }

    // optional double vehicle_speed = 6;
    if (has_vehicle_speed()) {
      total_size += 1 + 8;
    }

    // optional double yaw_rate = 7;
    if (has_yaw_rate()) {
      total_size += 1 + 8;
    }

    // optional double steering_wheel_angle = 9;
    if (has_steering_wheel_angle()) {
      total_size += 1 + 8;
    }

  }
  // optional bool left_blink = 8;
  if (has_left_blink()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Mecommon2_v2_560::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Mecommon2_v2_560*>(&from));
}

void Mecommon2_v2_560::MergeFrom(const Mecommon2_v2_560& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:atd.drivers.hsc4.Mecommon2_v2_560)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      brakes_ = from.brakes_;
    }
    if (cached_has_bits & 0x00000002u) {
      high_beam_ = from.high_beam_;
    }
    if (cached_has_bits & 0x00000004u) {
      reverse_gear_ = from.reverse_gear_;
    }
    if (cached_has_bits & 0x00000008u) {
      right_blink_ = from.right_blink_;
    }
    if (cached_has_bits & 0x00000010u) {
      wipers_ = from.wipers_;
    }
    if (cached_has_bits & 0x00000020u) {
      vehicle_speed_ = from.vehicle_speed_;
    }
    if (cached_has_bits & 0x00000040u) {
      yaw_rate_ = from.yaw_rate_;
    }
    if (cached_has_bits & 0x00000080u) {
      steering_wheel_angle_ = from.steering_wheel_angle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_left_blink(from.left_blink());
  }
}

void Mecommon2_v2_560::CopyFrom(const Mecommon2_v2_560& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:atd.drivers.hsc4.Mecommon2_v2_560)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mecommon2_v2_560::IsInitialized() const {
  return true;
}

void Mecommon2_v2_560::Swap(Mecommon2_v2_560* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Mecommon2_v2_560::InternalSwap(Mecommon2_v2_560* other) {
  std::swap(brakes_, other->brakes_);
  std::swap(high_beam_, other->high_beam_);
  std::swap(reverse_gear_, other->reverse_gear_);
  std::swap(right_blink_, other->right_blink_);
  std::swap(wipers_, other->wipers_);
  std::swap(vehicle_speed_, other->vehicle_speed_);
  std::swap(yaw_rate_, other->yaw_rate_);
  std::swap(steering_wheel_angle_, other->steering_wheel_angle_);
  std::swap(left_blink_, other->left_blink_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Mecommon2_v2_560::GetTypeName() const {
  return "atd.drivers.hsc4.Mecommon2_v2_560";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Mecommon2_v2_560

// optional bool brakes = 1;
bool Mecommon2_v2_560::has_brakes() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Mecommon2_v2_560::set_has_brakes() {
  _has_bits_[0] |= 0x00000001u;
}
void Mecommon2_v2_560::clear_has_brakes() {
  _has_bits_[0] &= ~0x00000001u;
}
void Mecommon2_v2_560::clear_brakes() {
  brakes_ = false;
  clear_has_brakes();
}
bool Mecommon2_v2_560::brakes() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Mecommon2_v2_560.brakes)
  return brakes_;
}
void Mecommon2_v2_560::set_brakes(bool value) {
  set_has_brakes();
  brakes_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Mecommon2_v2_560.brakes)
}

// optional bool high_beam = 2;
bool Mecommon2_v2_560::has_high_beam() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Mecommon2_v2_560::set_has_high_beam() {
  _has_bits_[0] |= 0x00000002u;
}
void Mecommon2_v2_560::clear_has_high_beam() {
  _has_bits_[0] &= ~0x00000002u;
}
void Mecommon2_v2_560::clear_high_beam() {
  high_beam_ = false;
  clear_has_high_beam();
}
bool Mecommon2_v2_560::high_beam() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Mecommon2_v2_560.high_beam)
  return high_beam_;
}
void Mecommon2_v2_560::set_high_beam(bool value) {
  set_has_high_beam();
  high_beam_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Mecommon2_v2_560.high_beam)
}

// optional bool reverse_gear = 3;
bool Mecommon2_v2_560::has_reverse_gear() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Mecommon2_v2_560::set_has_reverse_gear() {
  _has_bits_[0] |= 0x00000004u;
}
void Mecommon2_v2_560::clear_has_reverse_gear() {
  _has_bits_[0] &= ~0x00000004u;
}
void Mecommon2_v2_560::clear_reverse_gear() {
  reverse_gear_ = false;
  clear_has_reverse_gear();
}
bool Mecommon2_v2_560::reverse_gear() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Mecommon2_v2_560.reverse_gear)
  return reverse_gear_;
}
void Mecommon2_v2_560::set_reverse_gear(bool value) {
  set_has_reverse_gear();
  reverse_gear_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Mecommon2_v2_560.reverse_gear)
}

// optional bool right_blink = 4;
bool Mecommon2_v2_560::has_right_blink() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Mecommon2_v2_560::set_has_right_blink() {
  _has_bits_[0] |= 0x00000008u;
}
void Mecommon2_v2_560::clear_has_right_blink() {
  _has_bits_[0] &= ~0x00000008u;
}
void Mecommon2_v2_560::clear_right_blink() {
  right_blink_ = false;
  clear_has_right_blink();
}
bool Mecommon2_v2_560::right_blink() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Mecommon2_v2_560.right_blink)
  return right_blink_;
}
void Mecommon2_v2_560::set_right_blink(bool value) {
  set_has_right_blink();
  right_blink_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Mecommon2_v2_560.right_blink)
}

// optional int32 wipers = 5;
bool Mecommon2_v2_560::has_wipers() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Mecommon2_v2_560::set_has_wipers() {
  _has_bits_[0] |= 0x00000010u;
}
void Mecommon2_v2_560::clear_has_wipers() {
  _has_bits_[0] &= ~0x00000010u;
}
void Mecommon2_v2_560::clear_wipers() {
  wipers_ = 0;
  clear_has_wipers();
}
::google::protobuf::int32 Mecommon2_v2_560::wipers() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Mecommon2_v2_560.wipers)
  return wipers_;
}
void Mecommon2_v2_560::set_wipers(::google::protobuf::int32 value) {
  set_has_wipers();
  wipers_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Mecommon2_v2_560.wipers)
}

// optional double vehicle_speed = 6;
bool Mecommon2_v2_560::has_vehicle_speed() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Mecommon2_v2_560::set_has_vehicle_speed() {
  _has_bits_[0] |= 0x00000020u;
}
void Mecommon2_v2_560::clear_has_vehicle_speed() {
  _has_bits_[0] &= ~0x00000020u;
}
void Mecommon2_v2_560::clear_vehicle_speed() {
  vehicle_speed_ = 0;
  clear_has_vehicle_speed();
}
double Mecommon2_v2_560::vehicle_speed() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Mecommon2_v2_560.vehicle_speed)
  return vehicle_speed_;
}
void Mecommon2_v2_560::set_vehicle_speed(double value) {
  set_has_vehicle_speed();
  vehicle_speed_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Mecommon2_v2_560.vehicle_speed)
}

// optional double yaw_rate = 7;
bool Mecommon2_v2_560::has_yaw_rate() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Mecommon2_v2_560::set_has_yaw_rate() {
  _has_bits_[0] |= 0x00000040u;
}
void Mecommon2_v2_560::clear_has_yaw_rate() {
  _has_bits_[0] &= ~0x00000040u;
}
void Mecommon2_v2_560::clear_yaw_rate() {
  yaw_rate_ = 0;
  clear_has_yaw_rate();
}
double Mecommon2_v2_560::yaw_rate() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Mecommon2_v2_560.yaw_rate)
  return yaw_rate_;
}
void Mecommon2_v2_560::set_yaw_rate(double value) {
  set_has_yaw_rate();
  yaw_rate_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Mecommon2_v2_560.yaw_rate)
}

// optional bool left_blink = 8;
bool Mecommon2_v2_560::has_left_blink() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Mecommon2_v2_560::set_has_left_blink() {
  _has_bits_[0] |= 0x00000100u;
}
void Mecommon2_v2_560::clear_has_left_blink() {
  _has_bits_[0] &= ~0x00000100u;
}
void Mecommon2_v2_560::clear_left_blink() {
  left_blink_ = false;
  clear_has_left_blink();
}
bool Mecommon2_v2_560::left_blink() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Mecommon2_v2_560.left_blink)
  return left_blink_;
}
void Mecommon2_v2_560::set_left_blink(bool value) {
  set_has_left_blink();
  left_blink_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Mecommon2_v2_560.left_blink)
}

// optional double steering_wheel_angle = 9;
bool Mecommon2_v2_560::has_steering_wheel_angle() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Mecommon2_v2_560::set_has_steering_wheel_angle() {
  _has_bits_[0] |= 0x00000080u;
}
void Mecommon2_v2_560::clear_has_steering_wheel_angle() {
  _has_bits_[0] &= ~0x00000080u;
}
void Mecommon2_v2_560::clear_steering_wheel_angle() {
  steering_wheel_angle_ = 0;
  clear_has_steering_wheel_angle();
}
double Mecommon2_v2_560::steering_wheel_angle() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Mecommon2_v2_560.steering_wheel_angle)
  return steering_wheel_angle_;
}
void Mecommon2_v2_560::set_steering_wheel_angle(double value) {
  set_has_steering_wheel_angle();
  steering_wheel_angle_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Mecommon2_v2_560.steering_wheel_angle)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Idcstatus91_191::kGsplatitudehsc4FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Idcstatus91_191::Idcstatus91_191()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:atd.drivers.hsc4.Idcstatus91_191)
}
Idcstatus91_191::Idcstatus91_191(const Idcstatus91_191& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gsplatitudehsc4_ = from.gsplatitudehsc4_;
  // @@protoc_insertion_point(copy_constructor:atd.drivers.hsc4.Idcstatus91_191)
}

void Idcstatus91_191::SharedCtor() {
  _cached_size_ = 0;
  gsplatitudehsc4_ = 0;
}

Idcstatus91_191::~Idcstatus91_191() {
  // @@protoc_insertion_point(destructor:atd.drivers.hsc4.Idcstatus91_191)
  SharedDtor();
}

void Idcstatus91_191::SharedDtor() {
}

void Idcstatus91_191::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Idcstatus91_191& Idcstatus91_191::default_instance() {
  protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  return *internal_default_instance();
}

Idcstatus91_191* Idcstatus91_191::New(::google::protobuf::Arena* arena) const {
  Idcstatus91_191* n = new Idcstatus91_191;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Idcstatus91_191::Clear() {
// @@protoc_insertion_point(message_clear_start:atd.drivers.hsc4.Idcstatus91_191)
  gsplatitudehsc4_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Idcstatus91_191::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:atd.drivers.hsc4.Idcstatus91_191)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 gsplatitudehsc4 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_gsplatitudehsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gsplatitudehsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:atd.drivers.hsc4.Idcstatus91_191)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:atd.drivers.hsc4.Idcstatus91_191)
  return false;
#undef DO_
}

void Idcstatus91_191::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:atd.drivers.hsc4.Idcstatus91_191)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 gsplatitudehsc4 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->gsplatitudehsc4(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:atd.drivers.hsc4.Idcstatus91_191)
}

size_t Idcstatus91_191::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:atd.drivers.hsc4.Idcstatus91_191)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // optional int32 gsplatitudehsc4 = 1;
  if (has_gsplatitudehsc4()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gsplatitudehsc4());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Idcstatus91_191::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Idcstatus91_191*>(&from));
}

void Idcstatus91_191::MergeFrom(const Idcstatus91_191& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:atd.drivers.hsc4.Idcstatus91_191)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_gsplatitudehsc4()) {
    set_gsplatitudehsc4(from.gsplatitudehsc4());
  }
}

void Idcstatus91_191::CopyFrom(const Idcstatus91_191& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:atd.drivers.hsc4.Idcstatus91_191)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Idcstatus91_191::IsInitialized() const {
  return true;
}

void Idcstatus91_191::Swap(Idcstatus91_191* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Idcstatus91_191::InternalSwap(Idcstatus91_191* other) {
  std::swap(gsplatitudehsc4_, other->gsplatitudehsc4_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Idcstatus91_191::GetTypeName() const {
  return "atd.drivers.hsc4.Idcstatus91_191";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Idcstatus91_191

// optional int32 gsplatitudehsc4 = 1;
bool Idcstatus91_191::has_gsplatitudehsc4() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Idcstatus91_191::set_has_gsplatitudehsc4() {
  _has_bits_[0] |= 0x00000001u;
}
void Idcstatus91_191::clear_has_gsplatitudehsc4() {
  _has_bits_[0] &= ~0x00000001u;
}
void Idcstatus91_191::clear_gsplatitudehsc4() {
  gsplatitudehsc4_ = 0;
  clear_has_gsplatitudehsc4();
}
::google::protobuf::int32 Idcstatus91_191::gsplatitudehsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus91_191.gsplatitudehsc4)
  return gsplatitudehsc4_;
}
void Idcstatus91_191::set_gsplatitudehsc4(::google::protobuf::int32 value) {
  set_has_gsplatitudehsc4();
  gsplatitudehsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus91_191.gsplatitudehsc4)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Idcstatus3_13::kYawratehsc4FieldNumber;
const int Idcstatus3_13::kHeadinganglehsc4FieldNumber;
const int Idcstatus3_13::kLateralaccehsc4FieldNumber;
const int Idcstatus3_13::kLongitudinalaccehsc4FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Idcstatus3_13::Idcstatus3_13()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:atd.drivers.hsc4.Idcstatus3_13)
}
Idcstatus3_13::Idcstatus3_13(const Idcstatus3_13& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&headinganglehsc4_, &from.headinganglehsc4_,
    reinterpret_cast<char*>(&yawratehsc4_) -
    reinterpret_cast<char*>(&headinganglehsc4_) + sizeof(yawratehsc4_));
  // @@protoc_insertion_point(copy_constructor:atd.drivers.hsc4.Idcstatus3_13)
}

void Idcstatus3_13::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&headinganglehsc4_, 0, reinterpret_cast<char*>(&yawratehsc4_) -
    reinterpret_cast<char*>(&headinganglehsc4_) + sizeof(yawratehsc4_));
}

Idcstatus3_13::~Idcstatus3_13() {
  // @@protoc_insertion_point(destructor:atd.drivers.hsc4.Idcstatus3_13)
  SharedDtor();
}

void Idcstatus3_13::SharedDtor() {
}

void Idcstatus3_13::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Idcstatus3_13& Idcstatus3_13::default_instance() {
  protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  return *internal_default_instance();
}

Idcstatus3_13* Idcstatus3_13::New(::google::protobuf::Arena* arena) const {
  Idcstatus3_13* n = new Idcstatus3_13;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Idcstatus3_13::Clear() {
// @@protoc_insertion_point(message_clear_start:atd.drivers.hsc4.Idcstatus3_13)
  if (_has_bits_[0 / 32] & 15u) {
    ::memset(&headinganglehsc4_, 0, reinterpret_cast<char*>(&yawratehsc4_) -
      reinterpret_cast<char*>(&headinganglehsc4_) + sizeof(yawratehsc4_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Idcstatus3_13::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:atd.drivers.hsc4.Idcstatus3_13)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 yawratehsc4 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_yawratehsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &yawratehsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double headinganglehsc4 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_headinganglehsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &headinganglehsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double lateralaccehsc4 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {
          set_has_lateralaccehsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lateralaccehsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double longitudinalaccehsc4 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u)) {
          set_has_longitudinalaccehsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitudinalaccehsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:atd.drivers.hsc4.Idcstatus3_13)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:atd.drivers.hsc4.Idcstatus3_13)
  return false;
#undef DO_
}

void Idcstatus3_13::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:atd.drivers.hsc4.Idcstatus3_13)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 yawratehsc4 = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->yawratehsc4(), output);
  }

  // optional double headinganglehsc4 = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->headinganglehsc4(), output);
  }

  // optional double lateralaccehsc4 = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->lateralaccehsc4(), output);
  }

  // optional double longitudinalaccehsc4 = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->longitudinalaccehsc4(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:atd.drivers.hsc4.Idcstatus3_13)
}

size_t Idcstatus3_13::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:atd.drivers.hsc4.Idcstatus3_13)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 15u) {
    // optional double headinganglehsc4 = 2;
    if (has_headinganglehsc4()) {
      total_size += 1 + 8;
    }

    // optional double lateralaccehsc4 = 3;
    if (has_lateralaccehsc4()) {
      total_size += 1 + 8;
    }

    // optional double longitudinalaccehsc4 = 4;
    if (has_longitudinalaccehsc4()) {
      total_size += 1 + 8;
    }

    // optional int32 yawratehsc4 = 1;
    if (has_yawratehsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->yawratehsc4());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Idcstatus3_13::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Idcstatus3_13*>(&from));
}

void Idcstatus3_13::MergeFrom(const Idcstatus3_13& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:atd.drivers.hsc4.Idcstatus3_13)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      headinganglehsc4_ = from.headinganglehsc4_;
    }
    if (cached_has_bits & 0x00000002u) {
      lateralaccehsc4_ = from.lateralaccehsc4_;
    }
    if (cached_has_bits & 0x00000004u) {
      longitudinalaccehsc4_ = from.longitudinalaccehsc4_;
    }
    if (cached_has_bits & 0x00000008u) {
      yawratehsc4_ = from.yawratehsc4_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Idcstatus3_13::CopyFrom(const Idcstatus3_13& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:atd.drivers.hsc4.Idcstatus3_13)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Idcstatus3_13::IsInitialized() const {
  return true;
}

void Idcstatus3_13::Swap(Idcstatus3_13* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Idcstatus3_13::InternalSwap(Idcstatus3_13* other) {
  std::swap(headinganglehsc4_, other->headinganglehsc4_);
  std::swap(lateralaccehsc4_, other->lateralaccehsc4_);
  std::swap(longitudinalaccehsc4_, other->longitudinalaccehsc4_);
  std::swap(yawratehsc4_, other->yawratehsc4_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Idcstatus3_13::GetTypeName() const {
  return "atd.drivers.hsc4.Idcstatus3_13";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Idcstatus3_13

// optional int32 yawratehsc4 = 1;
bool Idcstatus3_13::has_yawratehsc4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Idcstatus3_13::set_has_yawratehsc4() {
  _has_bits_[0] |= 0x00000008u;
}
void Idcstatus3_13::clear_has_yawratehsc4() {
  _has_bits_[0] &= ~0x00000008u;
}
void Idcstatus3_13::clear_yawratehsc4() {
  yawratehsc4_ = 0;
  clear_has_yawratehsc4();
}
::google::protobuf::int32 Idcstatus3_13::yawratehsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus3_13.yawratehsc4)
  return yawratehsc4_;
}
void Idcstatus3_13::set_yawratehsc4(::google::protobuf::int32 value) {
  set_has_yawratehsc4();
  yawratehsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus3_13.yawratehsc4)
}

// optional double headinganglehsc4 = 2;
bool Idcstatus3_13::has_headinganglehsc4() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Idcstatus3_13::set_has_headinganglehsc4() {
  _has_bits_[0] |= 0x00000001u;
}
void Idcstatus3_13::clear_has_headinganglehsc4() {
  _has_bits_[0] &= ~0x00000001u;
}
void Idcstatus3_13::clear_headinganglehsc4() {
  headinganglehsc4_ = 0;
  clear_has_headinganglehsc4();
}
double Idcstatus3_13::headinganglehsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus3_13.headinganglehsc4)
  return headinganglehsc4_;
}
void Idcstatus3_13::set_headinganglehsc4(double value) {
  set_has_headinganglehsc4();
  headinganglehsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus3_13.headinganglehsc4)
}

// optional double lateralaccehsc4 = 3;
bool Idcstatus3_13::has_lateralaccehsc4() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Idcstatus3_13::set_has_lateralaccehsc4() {
  _has_bits_[0] |= 0x00000002u;
}
void Idcstatus3_13::clear_has_lateralaccehsc4() {
  _has_bits_[0] &= ~0x00000002u;
}
void Idcstatus3_13::clear_lateralaccehsc4() {
  lateralaccehsc4_ = 0;
  clear_has_lateralaccehsc4();
}
double Idcstatus3_13::lateralaccehsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus3_13.lateralaccehsc4)
  return lateralaccehsc4_;
}
void Idcstatus3_13::set_lateralaccehsc4(double value) {
  set_has_lateralaccehsc4();
  lateralaccehsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus3_13.lateralaccehsc4)
}

// optional double longitudinalaccehsc4 = 4;
bool Idcstatus3_13::has_longitudinalaccehsc4() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Idcstatus3_13::set_has_longitudinalaccehsc4() {
  _has_bits_[0] |= 0x00000004u;
}
void Idcstatus3_13::clear_has_longitudinalaccehsc4() {
  _has_bits_[0] &= ~0x00000004u;
}
void Idcstatus3_13::clear_longitudinalaccehsc4() {
  longitudinalaccehsc4_ = 0;
  clear_has_longitudinalaccehsc4();
}
double Idcstatus3_13::longitudinalaccehsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus3_13.longitudinalaccehsc4)
  return longitudinalaccehsc4_;
}
void Idcstatus3_13::set_longitudinalaccehsc4(double value) {
  set_has_longitudinalaccehsc4();
  longitudinalaccehsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus3_13.longitudinalaccehsc4)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Idcstatus93_193::kRounterchangehsc4FieldNumber;
const int Idcstatus93_193::kPathradiumavghsc4FieldNumber;
const int Idcstatus93_193::kIdcalvrchsc4FieldNumber;
const int Idcstatus93_193::kCurvevalidhsc4FieldNumber;
const int Idcstatus93_193::kPathradiumminhsc4FieldNumber;
const int Idcstatus93_193::kPredictedlengthhsc4FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Idcstatus93_193::Idcstatus93_193()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:atd.drivers.hsc4.Idcstatus93_193)
}
Idcstatus93_193::Idcstatus93_193(const Idcstatus93_193& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pathradiumavghsc4_, &from.pathradiumavghsc4_,
    reinterpret_cast<char*>(&predictedlengthhsc4_) -
    reinterpret_cast<char*>(&pathradiumavghsc4_) + sizeof(predictedlengthhsc4_));
  // @@protoc_insertion_point(copy_constructor:atd.drivers.hsc4.Idcstatus93_193)
}

void Idcstatus93_193::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&pathradiumavghsc4_, 0, reinterpret_cast<char*>(&predictedlengthhsc4_) -
    reinterpret_cast<char*>(&pathradiumavghsc4_) + sizeof(predictedlengthhsc4_));
}

Idcstatus93_193::~Idcstatus93_193() {
  // @@protoc_insertion_point(destructor:atd.drivers.hsc4.Idcstatus93_193)
  SharedDtor();
}

void Idcstatus93_193::SharedDtor() {
}

void Idcstatus93_193::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Idcstatus93_193& Idcstatus93_193::default_instance() {
  protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  return *internal_default_instance();
}

Idcstatus93_193* Idcstatus93_193::New(::google::protobuf::Arena* arena) const {
  Idcstatus93_193* n = new Idcstatus93_193;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Idcstatus93_193::Clear() {
// @@protoc_insertion_point(message_clear_start:atd.drivers.hsc4.Idcstatus93_193)
  if (_has_bits_[0 / 32] & 63u) {
    ::memset(&pathradiumavghsc4_, 0, reinterpret_cast<char*>(&predictedlengthhsc4_) -
      reinterpret_cast<char*>(&pathradiumavghsc4_) + sizeof(predictedlengthhsc4_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Idcstatus93_193::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:atd.drivers.hsc4.Idcstatus93_193)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool rounterchangehsc4 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_rounterchangehsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &rounterchangehsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 pathradiumavghsc4 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_pathradiumavghsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pathradiumavghsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 idcalvrchsc4 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_idcalvrchsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &idcalvrchsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool curvevalidhsc4 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_curvevalidhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &curvevalidhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 pathradiumminhsc4 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_pathradiumminhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pathradiumminhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double predictedlengthhsc4 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u)) {
          set_has_predictedlengthhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &predictedlengthhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:atd.drivers.hsc4.Idcstatus93_193)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:atd.drivers.hsc4.Idcstatus93_193)
  return false;
#undef DO_
}

void Idcstatus93_193::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:atd.drivers.hsc4.Idcstatus93_193)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool rounterchangehsc4 = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->rounterchangehsc4(), output);
  }

  // optional int32 pathradiumavghsc4 = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pathradiumavghsc4(), output);
  }

  // optional int32 idcalvrchsc4 = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->idcalvrchsc4(), output);
  }

  // optional bool curvevalidhsc4 = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->curvevalidhsc4(), output);
  }

  // optional int32 pathradiumminhsc4 = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->pathradiumminhsc4(), output);
  }

  // optional double predictedlengthhsc4 = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->predictedlengthhsc4(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:atd.drivers.hsc4.Idcstatus93_193)
}

size_t Idcstatus93_193::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:atd.drivers.hsc4.Idcstatus93_193)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 63u) {
    // optional int32 pathradiumavghsc4 = 2;
    if (has_pathradiumavghsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pathradiumavghsc4());
    }

    // optional bool rounterchangehsc4 = 1;
    if (has_rounterchangehsc4()) {
      total_size += 1 + 1;
    }

    // optional bool curvevalidhsc4 = 4;
    if (has_curvevalidhsc4()) {
      total_size += 1 + 1;
    }

    // optional int32 idcalvrchsc4 = 3;
    if (has_idcalvrchsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->idcalvrchsc4());
    }

    // optional int32 pathradiumminhsc4 = 5;
    if (has_pathradiumminhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pathradiumminhsc4());
    }

    // optional double predictedlengthhsc4 = 6;
    if (has_predictedlengthhsc4()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Idcstatus93_193::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Idcstatus93_193*>(&from));
}

void Idcstatus93_193::MergeFrom(const Idcstatus93_193& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:atd.drivers.hsc4.Idcstatus93_193)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      pathradiumavghsc4_ = from.pathradiumavghsc4_;
    }
    if (cached_has_bits & 0x00000002u) {
      rounterchangehsc4_ = from.rounterchangehsc4_;
    }
    if (cached_has_bits & 0x00000004u) {
      curvevalidhsc4_ = from.curvevalidhsc4_;
    }
    if (cached_has_bits & 0x00000008u) {
      idcalvrchsc4_ = from.idcalvrchsc4_;
    }
    if (cached_has_bits & 0x00000010u) {
      pathradiumminhsc4_ = from.pathradiumminhsc4_;
    }
    if (cached_has_bits & 0x00000020u) {
      predictedlengthhsc4_ = from.predictedlengthhsc4_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Idcstatus93_193::CopyFrom(const Idcstatus93_193& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:atd.drivers.hsc4.Idcstatus93_193)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Idcstatus93_193::IsInitialized() const {
  return true;
}

void Idcstatus93_193::Swap(Idcstatus93_193* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Idcstatus93_193::InternalSwap(Idcstatus93_193* other) {
  std::swap(pathradiumavghsc4_, other->pathradiumavghsc4_);
  std::swap(rounterchangehsc4_, other->rounterchangehsc4_);
  std::swap(curvevalidhsc4_, other->curvevalidhsc4_);
  std::swap(idcalvrchsc4_, other->idcalvrchsc4_);
  std::swap(pathradiumminhsc4_, other->pathradiumminhsc4_);
  std::swap(predictedlengthhsc4_, other->predictedlengthhsc4_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Idcstatus93_193::GetTypeName() const {
  return "atd.drivers.hsc4.Idcstatus93_193";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Idcstatus93_193

// optional bool rounterchangehsc4 = 1;
bool Idcstatus93_193::has_rounterchangehsc4() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Idcstatus93_193::set_has_rounterchangehsc4() {
  _has_bits_[0] |= 0x00000002u;
}
void Idcstatus93_193::clear_has_rounterchangehsc4() {
  _has_bits_[0] &= ~0x00000002u;
}
void Idcstatus93_193::clear_rounterchangehsc4() {
  rounterchangehsc4_ = false;
  clear_has_rounterchangehsc4();
}
bool Idcstatus93_193::rounterchangehsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus93_193.rounterchangehsc4)
  return rounterchangehsc4_;
}
void Idcstatus93_193::set_rounterchangehsc4(bool value) {
  set_has_rounterchangehsc4();
  rounterchangehsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus93_193.rounterchangehsc4)
}

// optional int32 pathradiumavghsc4 = 2;
bool Idcstatus93_193::has_pathradiumavghsc4() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Idcstatus93_193::set_has_pathradiumavghsc4() {
  _has_bits_[0] |= 0x00000001u;
}
void Idcstatus93_193::clear_has_pathradiumavghsc4() {
  _has_bits_[0] &= ~0x00000001u;
}
void Idcstatus93_193::clear_pathradiumavghsc4() {
  pathradiumavghsc4_ = 0;
  clear_has_pathradiumavghsc4();
}
::google::protobuf::int32 Idcstatus93_193::pathradiumavghsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus93_193.pathradiumavghsc4)
  return pathradiumavghsc4_;
}
void Idcstatus93_193::set_pathradiumavghsc4(::google::protobuf::int32 value) {
  set_has_pathradiumavghsc4();
  pathradiumavghsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus93_193.pathradiumavghsc4)
}

// optional int32 idcalvrchsc4 = 3;
bool Idcstatus93_193::has_idcalvrchsc4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Idcstatus93_193::set_has_idcalvrchsc4() {
  _has_bits_[0] |= 0x00000008u;
}
void Idcstatus93_193::clear_has_idcalvrchsc4() {
  _has_bits_[0] &= ~0x00000008u;
}
void Idcstatus93_193::clear_idcalvrchsc4() {
  idcalvrchsc4_ = 0;
  clear_has_idcalvrchsc4();
}
::google::protobuf::int32 Idcstatus93_193::idcalvrchsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus93_193.idcalvrchsc4)
  return idcalvrchsc4_;
}
void Idcstatus93_193::set_idcalvrchsc4(::google::protobuf::int32 value) {
  set_has_idcalvrchsc4();
  idcalvrchsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus93_193.idcalvrchsc4)
}

// optional bool curvevalidhsc4 = 4;
bool Idcstatus93_193::has_curvevalidhsc4() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Idcstatus93_193::set_has_curvevalidhsc4() {
  _has_bits_[0] |= 0x00000004u;
}
void Idcstatus93_193::clear_has_curvevalidhsc4() {
  _has_bits_[0] &= ~0x00000004u;
}
void Idcstatus93_193::clear_curvevalidhsc4() {
  curvevalidhsc4_ = false;
  clear_has_curvevalidhsc4();
}
bool Idcstatus93_193::curvevalidhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus93_193.curvevalidhsc4)
  return curvevalidhsc4_;
}
void Idcstatus93_193::set_curvevalidhsc4(bool value) {
  set_has_curvevalidhsc4();
  curvevalidhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus93_193.curvevalidhsc4)
}

// optional int32 pathradiumminhsc4 = 5;
bool Idcstatus93_193::has_pathradiumminhsc4() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Idcstatus93_193::set_has_pathradiumminhsc4() {
  _has_bits_[0] |= 0x00000010u;
}
void Idcstatus93_193::clear_has_pathradiumminhsc4() {
  _has_bits_[0] &= ~0x00000010u;
}
void Idcstatus93_193::clear_pathradiumminhsc4() {
  pathradiumminhsc4_ = 0;
  clear_has_pathradiumminhsc4();
}
::google::protobuf::int32 Idcstatus93_193::pathradiumminhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus93_193.pathradiumminhsc4)
  return pathradiumminhsc4_;
}
void Idcstatus93_193::set_pathradiumminhsc4(::google::protobuf::int32 value) {
  set_has_pathradiumminhsc4();
  pathradiumminhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus93_193.pathradiumminhsc4)
}

// optional double predictedlengthhsc4 = 6;
bool Idcstatus93_193::has_predictedlengthhsc4() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Idcstatus93_193::set_has_predictedlengthhsc4() {
  _has_bits_[0] |= 0x00000020u;
}
void Idcstatus93_193::clear_has_predictedlengthhsc4() {
  _has_bits_[0] &= ~0x00000020u;
}
void Idcstatus93_193::clear_predictedlengthhsc4() {
  predictedlengthhsc4_ = 0;
  clear_has_predictedlengthhsc4();
}
double Idcstatus93_193::predictedlengthhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus93_193.predictedlengthhsc4)
  return predictedlengthhsc4_;
}
void Idcstatus93_193::set_predictedlengthhsc4(double value) {
  set_has_predictedlengthhsc4();
  predictedlengthhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus93_193.predictedlengthhsc4)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Idcstatus92_192::kGpslongitudehsc4FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Idcstatus92_192::Idcstatus92_192()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:atd.drivers.hsc4.Idcstatus92_192)
}
Idcstatus92_192::Idcstatus92_192(const Idcstatus92_192& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gpslongitudehsc4_ = from.gpslongitudehsc4_;
  // @@protoc_insertion_point(copy_constructor:atd.drivers.hsc4.Idcstatus92_192)
}

void Idcstatus92_192::SharedCtor() {
  _cached_size_ = 0;
  gpslongitudehsc4_ = 0;
}

Idcstatus92_192::~Idcstatus92_192() {
  // @@protoc_insertion_point(destructor:atd.drivers.hsc4.Idcstatus92_192)
  SharedDtor();
}

void Idcstatus92_192::SharedDtor() {
}

void Idcstatus92_192::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Idcstatus92_192& Idcstatus92_192::default_instance() {
  protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  return *internal_default_instance();
}

Idcstatus92_192* Idcstatus92_192::New(::google::protobuf::Arena* arena) const {
  Idcstatus92_192* n = new Idcstatus92_192;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Idcstatus92_192::Clear() {
// @@protoc_insertion_point(message_clear_start:atd.drivers.hsc4.Idcstatus92_192)
  gpslongitudehsc4_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Idcstatus92_192::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:atd.drivers.hsc4.Idcstatus92_192)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 gpslongitudehsc4 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_gpslongitudehsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gpslongitudehsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:atd.drivers.hsc4.Idcstatus92_192)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:atd.drivers.hsc4.Idcstatus92_192)
  return false;
#undef DO_
}

void Idcstatus92_192::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:atd.drivers.hsc4.Idcstatus92_192)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 gpslongitudehsc4 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->gpslongitudehsc4(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:atd.drivers.hsc4.Idcstatus92_192)
}

size_t Idcstatus92_192::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:atd.drivers.hsc4.Idcstatus92_192)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // optional int32 gpslongitudehsc4 = 1;
  if (has_gpslongitudehsc4()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gpslongitudehsc4());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Idcstatus92_192::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Idcstatus92_192*>(&from));
}

void Idcstatus92_192::MergeFrom(const Idcstatus92_192& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:atd.drivers.hsc4.Idcstatus92_192)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_gpslongitudehsc4()) {
    set_gpslongitudehsc4(from.gpslongitudehsc4());
  }
}

void Idcstatus92_192::CopyFrom(const Idcstatus92_192& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:atd.drivers.hsc4.Idcstatus92_192)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Idcstatus92_192::IsInitialized() const {
  return true;
}

void Idcstatus92_192::Swap(Idcstatus92_192* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Idcstatus92_192::InternalSwap(Idcstatus92_192* other) {
  std::swap(gpslongitudehsc4_, other->gpslongitudehsc4_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Idcstatus92_192::GetTypeName() const {
  return "atd.drivers.hsc4.Idcstatus92_192";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Idcstatus92_192

// optional int32 gpslongitudehsc4 = 1;
bool Idcstatus92_192::has_gpslongitudehsc4() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Idcstatus92_192::set_has_gpslongitudehsc4() {
  _has_bits_[0] |= 0x00000001u;
}
void Idcstatus92_192::clear_has_gpslongitudehsc4() {
  _has_bits_[0] &= ~0x00000001u;
}
void Idcstatus92_192::clear_gpslongitudehsc4() {
  gpslongitudehsc4_ = 0;
  clear_has_gpslongitudehsc4();
}
::google::protobuf::int32 Idcstatus92_192::gpslongitudehsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus92_192.gpslongitudehsc4)
  return gpslongitudehsc4_;
}
void Idcstatus92_192::set_gpslongitudehsc4(::google::protobuf::int32 value) {
  set_has_gpslongitudehsc4();
  gpslongitudehsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus92_192.gpslongitudehsc4)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Idcstatus2_12::kRequestAutoFieldNumber;
const int Idcstatus2_12::kAppStatusFieldNumber;
const int Idcstatus2_12::kApactlcmdFieldNumber;
const int Idcstatus2_12::kVehspdmaxlmthsc4FieldNumber;
const int Idcstatus2_12::kIdcdriveenvironmenthsc4FieldNumber;
const int Idcstatus2_12::kShifterposreqhsc4FieldNumber;
const int Idcstatus2_12::kVehspdreqhsc4FieldNumber;
const int Idcstatus2_12::kActualyhsc4FieldNumber;
const int Idcstatus2_12::kActualxhsc4FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Idcstatus2_12::Idcstatus2_12()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:atd.drivers.hsc4.Idcstatus2_12)
}
Idcstatus2_12::Idcstatus2_12(const Idcstatus2_12& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&request_auto_, &from.request_auto_,
    reinterpret_cast<char*>(&actualxhsc4_) -
    reinterpret_cast<char*>(&request_auto_) + sizeof(actualxhsc4_));
  // @@protoc_insertion_point(copy_constructor:atd.drivers.hsc4.Idcstatus2_12)
}

void Idcstatus2_12::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&request_auto_, 0, reinterpret_cast<char*>(&actualxhsc4_) -
    reinterpret_cast<char*>(&request_auto_) + sizeof(actualxhsc4_));
}

Idcstatus2_12::~Idcstatus2_12() {
  // @@protoc_insertion_point(destructor:atd.drivers.hsc4.Idcstatus2_12)
  SharedDtor();
}

void Idcstatus2_12::SharedDtor() {
}

void Idcstatus2_12::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Idcstatus2_12& Idcstatus2_12::default_instance() {
  protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  return *internal_default_instance();
}

Idcstatus2_12* Idcstatus2_12::New(::google::protobuf::Arena* arena) const {
  Idcstatus2_12* n = new Idcstatus2_12;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Idcstatus2_12::Clear() {
// @@protoc_insertion_point(message_clear_start:atd.drivers.hsc4.Idcstatus2_12)
  if (_has_bits_[0 / 32] & 255u) {
    ::memset(&request_auto_, 0, reinterpret_cast<char*>(&actualyhsc4_) -
      reinterpret_cast<char*>(&request_auto_) + sizeof(actualyhsc4_));
  }
  actualxhsc4_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Idcstatus2_12::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:atd.drivers.hsc4.Idcstatus2_12)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool request_auto = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_request_auto();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &request_auto_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool app_status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_app_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &app_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 apactlcmd = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_apactlcmd();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &apactlcmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double vehspdmaxlmthsc4 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u)) {
          set_has_vehspdmaxlmthsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vehspdmaxlmthsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 idcdriveenvironmenthsc4 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_idcdriveenvironmenthsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &idcdriveenvironmenthsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 shifterposreqhsc4 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_shifterposreqhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shifterposreqhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double vehspdreqhsc4 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u)) {
          set_has_vehspdreqhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vehspdreqhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double actualyhsc4 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u)) {
          set_has_actualyhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &actualyhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double actualxhsc4 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u)) {
          set_has_actualxhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &actualxhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:atd.drivers.hsc4.Idcstatus2_12)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:atd.drivers.hsc4.Idcstatus2_12)
  return false;
#undef DO_
}

void Idcstatus2_12::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:atd.drivers.hsc4.Idcstatus2_12)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool request_auto = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->request_auto(), output);
  }

  // optional bool app_status = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->app_status(), output);
  }

  // optional int32 apactlcmd = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->apactlcmd(), output);
  }

  // optional double vehspdmaxlmthsc4 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->vehspdmaxlmthsc4(), output);
  }

  // optional int32 idcdriveenvironmenthsc4 = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->idcdriveenvironmenthsc4(), output);
  }

  // optional int32 shifterposreqhsc4 = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->shifterposreqhsc4(), output);
  }

  // optional double vehspdreqhsc4 = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->vehspdreqhsc4(), output);
  }

  // optional double actualyhsc4 = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->actualyhsc4(), output);
  }

  // optional double actualxhsc4 = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->actualxhsc4(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:atd.drivers.hsc4.Idcstatus2_12)
}

size_t Idcstatus2_12::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:atd.drivers.hsc4.Idcstatus2_12)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 255u) {
    // optional bool request_auto = 1;
    if (has_request_auto()) {
      total_size += 1 + 1;
    }

    // optional bool app_status = 2;
    if (has_app_status()) {
      total_size += 1 + 1;
    }

    // optional int32 apactlcmd = 3;
    if (has_apactlcmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->apactlcmd());
    }

    // optional double vehspdmaxlmthsc4 = 4;
    if (has_vehspdmaxlmthsc4()) {
      total_size += 1 + 8;
    }

    // optional int32 idcdriveenvironmenthsc4 = 5;
    if (has_idcdriveenvironmenthsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->idcdriveenvironmenthsc4());
    }

    // optional int32 shifterposreqhsc4 = 6;
    if (has_shifterposreqhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->shifterposreqhsc4());
    }

    // optional double vehspdreqhsc4 = 7;
    if (has_vehspdreqhsc4()) {
      total_size += 1 + 8;
    }

    // optional double actualyhsc4 = 8;
    if (has_actualyhsc4()) {
      total_size += 1 + 8;
    }

  }
  // optional double actualxhsc4 = 9;
  if (has_actualxhsc4()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Idcstatus2_12::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Idcstatus2_12*>(&from));
}

void Idcstatus2_12::MergeFrom(const Idcstatus2_12& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:atd.drivers.hsc4.Idcstatus2_12)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      request_auto_ = from.request_auto_;
    }
    if (cached_has_bits & 0x00000002u) {
      app_status_ = from.app_status_;
    }
    if (cached_has_bits & 0x00000004u) {
      apactlcmd_ = from.apactlcmd_;
    }
    if (cached_has_bits & 0x00000008u) {
      vehspdmaxlmthsc4_ = from.vehspdmaxlmthsc4_;
    }
    if (cached_has_bits & 0x00000010u) {
      idcdriveenvironmenthsc4_ = from.idcdriveenvironmenthsc4_;
    }
    if (cached_has_bits & 0x00000020u) {
      shifterposreqhsc4_ = from.shifterposreqhsc4_;
    }
    if (cached_has_bits & 0x00000040u) {
      vehspdreqhsc4_ = from.vehspdreqhsc4_;
    }
    if (cached_has_bits & 0x00000080u) {
      actualyhsc4_ = from.actualyhsc4_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_actualxhsc4(from.actualxhsc4());
  }
}

void Idcstatus2_12::CopyFrom(const Idcstatus2_12& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:atd.drivers.hsc4.Idcstatus2_12)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Idcstatus2_12::IsInitialized() const {
  return true;
}

void Idcstatus2_12::Swap(Idcstatus2_12* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Idcstatus2_12::InternalSwap(Idcstatus2_12* other) {
  std::swap(request_auto_, other->request_auto_);
  std::swap(app_status_, other->app_status_);
  std::swap(apactlcmd_, other->apactlcmd_);
  std::swap(vehspdmaxlmthsc4_, other->vehspdmaxlmthsc4_);
  std::swap(idcdriveenvironmenthsc4_, other->idcdriveenvironmenthsc4_);
  std::swap(shifterposreqhsc4_, other->shifterposreqhsc4_);
  std::swap(vehspdreqhsc4_, other->vehspdreqhsc4_);
  std::swap(actualyhsc4_, other->actualyhsc4_);
  std::swap(actualxhsc4_, other->actualxhsc4_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Idcstatus2_12::GetTypeName() const {
  return "atd.drivers.hsc4.Idcstatus2_12";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Idcstatus2_12

// optional bool request_auto = 1;
bool Idcstatus2_12::has_request_auto() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Idcstatus2_12::set_has_request_auto() {
  _has_bits_[0] |= 0x00000001u;
}
void Idcstatus2_12::clear_has_request_auto() {
  _has_bits_[0] &= ~0x00000001u;
}
void Idcstatus2_12::clear_request_auto() {
  request_auto_ = false;
  clear_has_request_auto();
}
bool Idcstatus2_12::request_auto() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus2_12.request_auto)
  return request_auto_;
}
void Idcstatus2_12::set_request_auto(bool value) {
  set_has_request_auto();
  request_auto_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus2_12.request_auto)
}

// optional bool app_status = 2;
bool Idcstatus2_12::has_app_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Idcstatus2_12::set_has_app_status() {
  _has_bits_[0] |= 0x00000002u;
}
void Idcstatus2_12::clear_has_app_status() {
  _has_bits_[0] &= ~0x00000002u;
}
void Idcstatus2_12::clear_app_status() {
  app_status_ = false;
  clear_has_app_status();
}
bool Idcstatus2_12::app_status() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus2_12.app_status)
  return app_status_;
}
void Idcstatus2_12::set_app_status(bool value) {
  set_has_app_status();
  app_status_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus2_12.app_status)
}

// optional int32 apactlcmd = 3;
bool Idcstatus2_12::has_apactlcmd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Idcstatus2_12::set_has_apactlcmd() {
  _has_bits_[0] |= 0x00000004u;
}
void Idcstatus2_12::clear_has_apactlcmd() {
  _has_bits_[0] &= ~0x00000004u;
}
void Idcstatus2_12::clear_apactlcmd() {
  apactlcmd_ = 0;
  clear_has_apactlcmd();
}
::google::protobuf::int32 Idcstatus2_12::apactlcmd() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus2_12.apactlcmd)
  return apactlcmd_;
}
void Idcstatus2_12::set_apactlcmd(::google::protobuf::int32 value) {
  set_has_apactlcmd();
  apactlcmd_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus2_12.apactlcmd)
}

// optional double vehspdmaxlmthsc4 = 4;
bool Idcstatus2_12::has_vehspdmaxlmthsc4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Idcstatus2_12::set_has_vehspdmaxlmthsc4() {
  _has_bits_[0] |= 0x00000008u;
}
void Idcstatus2_12::clear_has_vehspdmaxlmthsc4() {
  _has_bits_[0] &= ~0x00000008u;
}
void Idcstatus2_12::clear_vehspdmaxlmthsc4() {
  vehspdmaxlmthsc4_ = 0;
  clear_has_vehspdmaxlmthsc4();
}
double Idcstatus2_12::vehspdmaxlmthsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus2_12.vehspdmaxlmthsc4)
  return vehspdmaxlmthsc4_;
}
void Idcstatus2_12::set_vehspdmaxlmthsc4(double value) {
  set_has_vehspdmaxlmthsc4();
  vehspdmaxlmthsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus2_12.vehspdmaxlmthsc4)
}

// optional int32 idcdriveenvironmenthsc4 = 5;
bool Idcstatus2_12::has_idcdriveenvironmenthsc4() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Idcstatus2_12::set_has_idcdriveenvironmenthsc4() {
  _has_bits_[0] |= 0x00000010u;
}
void Idcstatus2_12::clear_has_idcdriveenvironmenthsc4() {
  _has_bits_[0] &= ~0x00000010u;
}
void Idcstatus2_12::clear_idcdriveenvironmenthsc4() {
  idcdriveenvironmenthsc4_ = 0;
  clear_has_idcdriveenvironmenthsc4();
}
::google::protobuf::int32 Idcstatus2_12::idcdriveenvironmenthsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus2_12.idcdriveenvironmenthsc4)
  return idcdriveenvironmenthsc4_;
}
void Idcstatus2_12::set_idcdriveenvironmenthsc4(::google::protobuf::int32 value) {
  set_has_idcdriveenvironmenthsc4();
  idcdriveenvironmenthsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus2_12.idcdriveenvironmenthsc4)
}

// optional int32 shifterposreqhsc4 = 6;
bool Idcstatus2_12::has_shifterposreqhsc4() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Idcstatus2_12::set_has_shifterposreqhsc4() {
  _has_bits_[0] |= 0x00000020u;
}
void Idcstatus2_12::clear_has_shifterposreqhsc4() {
  _has_bits_[0] &= ~0x00000020u;
}
void Idcstatus2_12::clear_shifterposreqhsc4() {
  shifterposreqhsc4_ = 0;
  clear_has_shifterposreqhsc4();
}
::google::protobuf::int32 Idcstatus2_12::shifterposreqhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus2_12.shifterposreqhsc4)
  return shifterposreqhsc4_;
}
void Idcstatus2_12::set_shifterposreqhsc4(::google::protobuf::int32 value) {
  set_has_shifterposreqhsc4();
  shifterposreqhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus2_12.shifterposreqhsc4)
}

// optional double vehspdreqhsc4 = 7;
bool Idcstatus2_12::has_vehspdreqhsc4() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Idcstatus2_12::set_has_vehspdreqhsc4() {
  _has_bits_[0] |= 0x00000040u;
}
void Idcstatus2_12::clear_has_vehspdreqhsc4() {
  _has_bits_[0] &= ~0x00000040u;
}
void Idcstatus2_12::clear_vehspdreqhsc4() {
  vehspdreqhsc4_ = 0;
  clear_has_vehspdreqhsc4();
}
double Idcstatus2_12::vehspdreqhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus2_12.vehspdreqhsc4)
  return vehspdreqhsc4_;
}
void Idcstatus2_12::set_vehspdreqhsc4(double value) {
  set_has_vehspdreqhsc4();
  vehspdreqhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus2_12.vehspdreqhsc4)
}

// optional double actualyhsc4 = 8;
bool Idcstatus2_12::has_actualyhsc4() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Idcstatus2_12::set_has_actualyhsc4() {
  _has_bits_[0] |= 0x00000080u;
}
void Idcstatus2_12::clear_has_actualyhsc4() {
  _has_bits_[0] &= ~0x00000080u;
}
void Idcstatus2_12::clear_actualyhsc4() {
  actualyhsc4_ = 0;
  clear_has_actualyhsc4();
}
double Idcstatus2_12::actualyhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus2_12.actualyhsc4)
  return actualyhsc4_;
}
void Idcstatus2_12::set_actualyhsc4(double value) {
  set_has_actualyhsc4();
  actualyhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus2_12.actualyhsc4)
}

// optional double actualxhsc4 = 9;
bool Idcstatus2_12::has_actualxhsc4() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Idcstatus2_12::set_has_actualxhsc4() {
  _has_bits_[0] |= 0x00000100u;
}
void Idcstatus2_12::clear_has_actualxhsc4() {
  _has_bits_[0] &= ~0x00000100u;
}
void Idcstatus2_12::clear_actualxhsc4() {
  actualxhsc4_ = 0;
  clear_has_actualxhsc4();
}
double Idcstatus2_12::actualxhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus2_12.actualxhsc4)
  return actualxhsc4_;
}
void Idcstatus2_12::set_actualxhsc4(double value) {
  set_has_actualxhsc4();
  actualxhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus2_12.actualxhsc4)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Idcstatus7_17::kTrackcoefficianty5Hsc4FieldNumber;
const int Idcstatus7_17::kTrackcoefficianty5Vhsc4FieldNumber;
const int Idcstatus7_17::kTrackcoefficianty4Vhsc4FieldNumber;
const int Idcstatus7_17::kTrackcoefficianty4Hsc4FieldNumber;
const int Idcstatus7_17::kTrackcoefficianty3Vhsc4FieldNumber;
const int Idcstatus7_17::kTrackcoefficianty3Hsc4FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Idcstatus7_17::Idcstatus7_17()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:atd.drivers.hsc4.Idcstatus7_17)
}
Idcstatus7_17::Idcstatus7_17(const Idcstatus7_17& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&trackcoefficianty5hsc4_, &from.trackcoefficianty5hsc4_,
    reinterpret_cast<char*>(&trackcoefficianty3vhsc4_) -
    reinterpret_cast<char*>(&trackcoefficianty5hsc4_) + sizeof(trackcoefficianty3vhsc4_));
  // @@protoc_insertion_point(copy_constructor:atd.drivers.hsc4.Idcstatus7_17)
}

void Idcstatus7_17::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&trackcoefficianty5hsc4_, 0, reinterpret_cast<char*>(&trackcoefficianty3vhsc4_) -
    reinterpret_cast<char*>(&trackcoefficianty5hsc4_) + sizeof(trackcoefficianty3vhsc4_));
}

Idcstatus7_17::~Idcstatus7_17() {
  // @@protoc_insertion_point(destructor:atd.drivers.hsc4.Idcstatus7_17)
  SharedDtor();
}

void Idcstatus7_17::SharedDtor() {
}

void Idcstatus7_17::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Idcstatus7_17& Idcstatus7_17::default_instance() {
  protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  return *internal_default_instance();
}

Idcstatus7_17* Idcstatus7_17::New(::google::protobuf::Arena* arena) const {
  Idcstatus7_17* n = new Idcstatus7_17;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Idcstatus7_17::Clear() {
// @@protoc_insertion_point(message_clear_start:atd.drivers.hsc4.Idcstatus7_17)
  if (_has_bits_[0 / 32] & 63u) {
    ::memset(&trackcoefficianty5hsc4_, 0, reinterpret_cast<char*>(&trackcoefficianty3vhsc4_) -
      reinterpret_cast<char*>(&trackcoefficianty5hsc4_) + sizeof(trackcoefficianty3vhsc4_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Idcstatus7_17::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:atd.drivers.hsc4.Idcstatus7_17)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double trackcoefficianty5hsc4 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_trackcoefficianty5hsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &trackcoefficianty5hsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 trackcoefficianty5vhsc4 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_trackcoefficianty5vhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &trackcoefficianty5vhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 trackcoefficianty4vhsc4 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_trackcoefficianty4vhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &trackcoefficianty4vhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double trackcoefficianty4hsc4 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u)) {
          set_has_trackcoefficianty4hsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &trackcoefficianty4hsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 trackcoefficianty3vhsc4 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_trackcoefficianty3vhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &trackcoefficianty3vhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double trackcoefficianty3hsc4 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u)) {
          set_has_trackcoefficianty3hsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &trackcoefficianty3hsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:atd.drivers.hsc4.Idcstatus7_17)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:atd.drivers.hsc4.Idcstatus7_17)
  return false;
#undef DO_
}

void Idcstatus7_17::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:atd.drivers.hsc4.Idcstatus7_17)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double trackcoefficianty5hsc4 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->trackcoefficianty5hsc4(), output);
  }

  // optional int32 trackcoefficianty5vhsc4 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->trackcoefficianty5vhsc4(), output);
  }

  // optional int32 trackcoefficianty4vhsc4 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->trackcoefficianty4vhsc4(), output);
  }

  // optional double trackcoefficianty4hsc4 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->trackcoefficianty4hsc4(), output);
  }

  // optional int32 trackcoefficianty3vhsc4 = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->trackcoefficianty3vhsc4(), output);
  }

  // optional double trackcoefficianty3hsc4 = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->trackcoefficianty3hsc4(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:atd.drivers.hsc4.Idcstatus7_17)
}

size_t Idcstatus7_17::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:atd.drivers.hsc4.Idcstatus7_17)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 63u) {
    // optional double trackcoefficianty5hsc4 = 1;
    if (has_trackcoefficianty5hsc4()) {
      total_size += 1 + 8;
    }

    // optional int32 trackcoefficianty5vhsc4 = 2;
    if (has_trackcoefficianty5vhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->trackcoefficianty5vhsc4());
    }

    // optional int32 trackcoefficianty4vhsc4 = 3;
    if (has_trackcoefficianty4vhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->trackcoefficianty4vhsc4());
    }

    // optional double trackcoefficianty4hsc4 = 4;
    if (has_trackcoefficianty4hsc4()) {
      total_size += 1 + 8;
    }

    // optional double trackcoefficianty3hsc4 = 6;
    if (has_trackcoefficianty3hsc4()) {
      total_size += 1 + 8;
    }

    // optional int32 trackcoefficianty3vhsc4 = 5;
    if (has_trackcoefficianty3vhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->trackcoefficianty3vhsc4());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Idcstatus7_17::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Idcstatus7_17*>(&from));
}

void Idcstatus7_17::MergeFrom(const Idcstatus7_17& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:atd.drivers.hsc4.Idcstatus7_17)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      trackcoefficianty5hsc4_ = from.trackcoefficianty5hsc4_;
    }
    if (cached_has_bits & 0x00000002u) {
      trackcoefficianty5vhsc4_ = from.trackcoefficianty5vhsc4_;
    }
    if (cached_has_bits & 0x00000004u) {
      trackcoefficianty4vhsc4_ = from.trackcoefficianty4vhsc4_;
    }
    if (cached_has_bits & 0x00000008u) {
      trackcoefficianty4hsc4_ = from.trackcoefficianty4hsc4_;
    }
    if (cached_has_bits & 0x00000010u) {
      trackcoefficianty3hsc4_ = from.trackcoefficianty3hsc4_;
    }
    if (cached_has_bits & 0x00000020u) {
      trackcoefficianty3vhsc4_ = from.trackcoefficianty3vhsc4_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Idcstatus7_17::CopyFrom(const Idcstatus7_17& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:atd.drivers.hsc4.Idcstatus7_17)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Idcstatus7_17::IsInitialized() const {
  return true;
}

void Idcstatus7_17::Swap(Idcstatus7_17* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Idcstatus7_17::InternalSwap(Idcstatus7_17* other) {
  std::swap(trackcoefficianty5hsc4_, other->trackcoefficianty5hsc4_);
  std::swap(trackcoefficianty5vhsc4_, other->trackcoefficianty5vhsc4_);
  std::swap(trackcoefficianty4vhsc4_, other->trackcoefficianty4vhsc4_);
  std::swap(trackcoefficianty4hsc4_, other->trackcoefficianty4hsc4_);
  std::swap(trackcoefficianty3hsc4_, other->trackcoefficianty3hsc4_);
  std::swap(trackcoefficianty3vhsc4_, other->trackcoefficianty3vhsc4_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Idcstatus7_17::GetTypeName() const {
  return "atd.drivers.hsc4.Idcstatus7_17";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Idcstatus7_17

// optional double trackcoefficianty5hsc4 = 1;
bool Idcstatus7_17::has_trackcoefficianty5hsc4() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Idcstatus7_17::set_has_trackcoefficianty5hsc4() {
  _has_bits_[0] |= 0x00000001u;
}
void Idcstatus7_17::clear_has_trackcoefficianty5hsc4() {
  _has_bits_[0] &= ~0x00000001u;
}
void Idcstatus7_17::clear_trackcoefficianty5hsc4() {
  trackcoefficianty5hsc4_ = 0;
  clear_has_trackcoefficianty5hsc4();
}
double Idcstatus7_17::trackcoefficianty5hsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus7_17.trackcoefficianty5hsc4)
  return trackcoefficianty5hsc4_;
}
void Idcstatus7_17::set_trackcoefficianty5hsc4(double value) {
  set_has_trackcoefficianty5hsc4();
  trackcoefficianty5hsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus7_17.trackcoefficianty5hsc4)
}

// optional int32 trackcoefficianty5vhsc4 = 2;
bool Idcstatus7_17::has_trackcoefficianty5vhsc4() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Idcstatus7_17::set_has_trackcoefficianty5vhsc4() {
  _has_bits_[0] |= 0x00000002u;
}
void Idcstatus7_17::clear_has_trackcoefficianty5vhsc4() {
  _has_bits_[0] &= ~0x00000002u;
}
void Idcstatus7_17::clear_trackcoefficianty5vhsc4() {
  trackcoefficianty5vhsc4_ = 0;
  clear_has_trackcoefficianty5vhsc4();
}
::google::protobuf::int32 Idcstatus7_17::trackcoefficianty5vhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus7_17.trackcoefficianty5vhsc4)
  return trackcoefficianty5vhsc4_;
}
void Idcstatus7_17::set_trackcoefficianty5vhsc4(::google::protobuf::int32 value) {
  set_has_trackcoefficianty5vhsc4();
  trackcoefficianty5vhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus7_17.trackcoefficianty5vhsc4)
}

// optional int32 trackcoefficianty4vhsc4 = 3;
bool Idcstatus7_17::has_trackcoefficianty4vhsc4() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Idcstatus7_17::set_has_trackcoefficianty4vhsc4() {
  _has_bits_[0] |= 0x00000004u;
}
void Idcstatus7_17::clear_has_trackcoefficianty4vhsc4() {
  _has_bits_[0] &= ~0x00000004u;
}
void Idcstatus7_17::clear_trackcoefficianty4vhsc4() {
  trackcoefficianty4vhsc4_ = 0;
  clear_has_trackcoefficianty4vhsc4();
}
::google::protobuf::int32 Idcstatus7_17::trackcoefficianty4vhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus7_17.trackcoefficianty4vhsc4)
  return trackcoefficianty4vhsc4_;
}
void Idcstatus7_17::set_trackcoefficianty4vhsc4(::google::protobuf::int32 value) {
  set_has_trackcoefficianty4vhsc4();
  trackcoefficianty4vhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus7_17.trackcoefficianty4vhsc4)
}

// optional double trackcoefficianty4hsc4 = 4;
bool Idcstatus7_17::has_trackcoefficianty4hsc4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Idcstatus7_17::set_has_trackcoefficianty4hsc4() {
  _has_bits_[0] |= 0x00000008u;
}
void Idcstatus7_17::clear_has_trackcoefficianty4hsc4() {
  _has_bits_[0] &= ~0x00000008u;
}
void Idcstatus7_17::clear_trackcoefficianty4hsc4() {
  trackcoefficianty4hsc4_ = 0;
  clear_has_trackcoefficianty4hsc4();
}
double Idcstatus7_17::trackcoefficianty4hsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus7_17.trackcoefficianty4hsc4)
  return trackcoefficianty4hsc4_;
}
void Idcstatus7_17::set_trackcoefficianty4hsc4(double value) {
  set_has_trackcoefficianty4hsc4();
  trackcoefficianty4hsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus7_17.trackcoefficianty4hsc4)
}

// optional int32 trackcoefficianty3vhsc4 = 5;
bool Idcstatus7_17::has_trackcoefficianty3vhsc4() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Idcstatus7_17::set_has_trackcoefficianty3vhsc4() {
  _has_bits_[0] |= 0x00000020u;
}
void Idcstatus7_17::clear_has_trackcoefficianty3vhsc4() {
  _has_bits_[0] &= ~0x00000020u;
}
void Idcstatus7_17::clear_trackcoefficianty3vhsc4() {
  trackcoefficianty3vhsc4_ = 0;
  clear_has_trackcoefficianty3vhsc4();
}
::google::protobuf::int32 Idcstatus7_17::trackcoefficianty3vhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus7_17.trackcoefficianty3vhsc4)
  return trackcoefficianty3vhsc4_;
}
void Idcstatus7_17::set_trackcoefficianty3vhsc4(::google::protobuf::int32 value) {
  set_has_trackcoefficianty3vhsc4();
  trackcoefficianty3vhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus7_17.trackcoefficianty3vhsc4)
}

// optional double trackcoefficianty3hsc4 = 6;
bool Idcstatus7_17::has_trackcoefficianty3hsc4() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Idcstatus7_17::set_has_trackcoefficianty3hsc4() {
  _has_bits_[0] |= 0x00000010u;
}
void Idcstatus7_17::clear_has_trackcoefficianty3hsc4() {
  _has_bits_[0] &= ~0x00000010u;
}
void Idcstatus7_17::clear_trackcoefficianty3hsc4() {
  trackcoefficianty3hsc4_ = 0;
  clear_has_trackcoefficianty3hsc4();
}
double Idcstatus7_17::trackcoefficianty3hsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus7_17.trackcoefficianty3hsc4)
  return trackcoefficianty3hsc4_;
}
void Idcstatus7_17::set_trackcoefficianty3hsc4(double value) {
  set_has_trackcoefficianty3hsc4();
  trackcoefficianty3hsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus7_17.trackcoefficianty3hsc4)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Idcstatus4_14::kTtchsc4FieldNumber;
const int Idcstatus4_14::kBrakemodeFieldNumber;
const int Idcstatus4_14::kLongtaccreqhsc4FieldNumber;
const int Idcstatus4_14::kTrackcoefficiantx2Vhsc4FieldNumber;
const int Idcstatus4_14::kTrackcoefficiantx2Hsc4FieldNumber;
const int Idcstatus4_14::kTrackcoefficiantx1Vhsc4FieldNumber;
const int Idcstatus4_14::kTrackcoefficiantx1Hsc4FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Idcstatus4_14::Idcstatus4_14()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:atd.drivers.hsc4.Idcstatus4_14)
}
Idcstatus4_14::Idcstatus4_14(const Idcstatus4_14& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ttchsc4_, &from.ttchsc4_,
    reinterpret_cast<char*>(&trackcoefficiantx1vhsc4_) -
    reinterpret_cast<char*>(&ttchsc4_) + sizeof(trackcoefficiantx1vhsc4_));
  // @@protoc_insertion_point(copy_constructor:atd.drivers.hsc4.Idcstatus4_14)
}

void Idcstatus4_14::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&ttchsc4_, 0, reinterpret_cast<char*>(&trackcoefficiantx1vhsc4_) -
    reinterpret_cast<char*>(&ttchsc4_) + sizeof(trackcoefficiantx1vhsc4_));
}

Idcstatus4_14::~Idcstatus4_14() {
  // @@protoc_insertion_point(destructor:atd.drivers.hsc4.Idcstatus4_14)
  SharedDtor();
}

void Idcstatus4_14::SharedDtor() {
}

void Idcstatus4_14::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Idcstatus4_14& Idcstatus4_14::default_instance() {
  protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  return *internal_default_instance();
}

Idcstatus4_14* Idcstatus4_14::New(::google::protobuf::Arena* arena) const {
  Idcstatus4_14* n = new Idcstatus4_14;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Idcstatus4_14::Clear() {
// @@protoc_insertion_point(message_clear_start:atd.drivers.hsc4.Idcstatus4_14)
  if (_has_bits_[0 / 32] & 127u) {
    ::memset(&ttchsc4_, 0, reinterpret_cast<char*>(&trackcoefficiantx1vhsc4_) -
      reinterpret_cast<char*>(&ttchsc4_) + sizeof(trackcoefficiantx1vhsc4_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Idcstatus4_14::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:atd.drivers.hsc4.Idcstatus4_14)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double ttchsc4 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_ttchsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ttchsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 brakemode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_brakemode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &brakemode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double longtaccreqhsc4 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {
          set_has_longtaccreqhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longtaccreqhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 trackcoefficiantx2vhsc4 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_trackcoefficiantx2vhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &trackcoefficiantx2vhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double trackcoefficiantx2hsc4 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u)) {
          set_has_trackcoefficiantx2hsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &trackcoefficiantx2hsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 trackcoefficiantx1vhsc4 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_trackcoefficiantx1vhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &trackcoefficiantx1vhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double trackcoefficiantx1hsc4 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u)) {
          set_has_trackcoefficiantx1hsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &trackcoefficiantx1hsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:atd.drivers.hsc4.Idcstatus4_14)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:atd.drivers.hsc4.Idcstatus4_14)
  return false;
#undef DO_
}

void Idcstatus4_14::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:atd.drivers.hsc4.Idcstatus4_14)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double ttchsc4 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->ttchsc4(), output);
  }

  // optional int32 brakemode = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->brakemode(), output);
  }

  // optional double longtaccreqhsc4 = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->longtaccreqhsc4(), output);
  }

  // optional int32 trackcoefficiantx2vhsc4 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->trackcoefficiantx2vhsc4(), output);
  }

  // optional double trackcoefficiantx2hsc4 = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->trackcoefficiantx2hsc4(), output);
  }

  // optional int32 trackcoefficiantx1vhsc4 = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->trackcoefficiantx1vhsc4(), output);
  }

  // optional double trackcoefficiantx1hsc4 = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->trackcoefficiantx1hsc4(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:atd.drivers.hsc4.Idcstatus4_14)
}

size_t Idcstatus4_14::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:atd.drivers.hsc4.Idcstatus4_14)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 127u) {
    // optional double ttchsc4 = 1;
    if (has_ttchsc4()) {
      total_size += 1 + 8;
    }

    // optional double longtaccreqhsc4 = 3;
    if (has_longtaccreqhsc4()) {
      total_size += 1 + 8;
    }

    // optional int32 brakemode = 2;
    if (has_brakemode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->brakemode());
    }

    // optional int32 trackcoefficiantx2vhsc4 = 4;
    if (has_trackcoefficiantx2vhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->trackcoefficiantx2vhsc4());
    }

    // optional double trackcoefficiantx2hsc4 = 5;
    if (has_trackcoefficiantx2hsc4()) {
      total_size += 1 + 8;
    }

    // optional double trackcoefficiantx1hsc4 = 7;
    if (has_trackcoefficiantx1hsc4()) {
      total_size += 1 + 8;
    }

    // optional int32 trackcoefficiantx1vhsc4 = 6;
    if (has_trackcoefficiantx1vhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->trackcoefficiantx1vhsc4());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Idcstatus4_14::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Idcstatus4_14*>(&from));
}

void Idcstatus4_14::MergeFrom(const Idcstatus4_14& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:atd.drivers.hsc4.Idcstatus4_14)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      ttchsc4_ = from.ttchsc4_;
    }
    if (cached_has_bits & 0x00000002u) {
      longtaccreqhsc4_ = from.longtaccreqhsc4_;
    }
    if (cached_has_bits & 0x00000004u) {
      brakemode_ = from.brakemode_;
    }
    if (cached_has_bits & 0x00000008u) {
      trackcoefficiantx2vhsc4_ = from.trackcoefficiantx2vhsc4_;
    }
    if (cached_has_bits & 0x00000010u) {
      trackcoefficiantx2hsc4_ = from.trackcoefficiantx2hsc4_;
    }
    if (cached_has_bits & 0x00000020u) {
      trackcoefficiantx1hsc4_ = from.trackcoefficiantx1hsc4_;
    }
    if (cached_has_bits & 0x00000040u) {
      trackcoefficiantx1vhsc4_ = from.trackcoefficiantx1vhsc4_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Idcstatus4_14::CopyFrom(const Idcstatus4_14& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:atd.drivers.hsc4.Idcstatus4_14)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Idcstatus4_14::IsInitialized() const {
  return true;
}

void Idcstatus4_14::Swap(Idcstatus4_14* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Idcstatus4_14::InternalSwap(Idcstatus4_14* other) {
  std::swap(ttchsc4_, other->ttchsc4_);
  std::swap(longtaccreqhsc4_, other->longtaccreqhsc4_);
  std::swap(brakemode_, other->brakemode_);
  std::swap(trackcoefficiantx2vhsc4_, other->trackcoefficiantx2vhsc4_);
  std::swap(trackcoefficiantx2hsc4_, other->trackcoefficiantx2hsc4_);
  std::swap(trackcoefficiantx1hsc4_, other->trackcoefficiantx1hsc4_);
  std::swap(trackcoefficiantx1vhsc4_, other->trackcoefficiantx1vhsc4_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Idcstatus4_14::GetTypeName() const {
  return "atd.drivers.hsc4.Idcstatus4_14";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Idcstatus4_14

// optional double ttchsc4 = 1;
bool Idcstatus4_14::has_ttchsc4() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Idcstatus4_14::set_has_ttchsc4() {
  _has_bits_[0] |= 0x00000001u;
}
void Idcstatus4_14::clear_has_ttchsc4() {
  _has_bits_[0] &= ~0x00000001u;
}
void Idcstatus4_14::clear_ttchsc4() {
  ttchsc4_ = 0;
  clear_has_ttchsc4();
}
double Idcstatus4_14::ttchsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus4_14.ttchsc4)
  return ttchsc4_;
}
void Idcstatus4_14::set_ttchsc4(double value) {
  set_has_ttchsc4();
  ttchsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus4_14.ttchsc4)
}

// optional int32 brakemode = 2;
bool Idcstatus4_14::has_brakemode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Idcstatus4_14::set_has_brakemode() {
  _has_bits_[0] |= 0x00000004u;
}
void Idcstatus4_14::clear_has_brakemode() {
  _has_bits_[0] &= ~0x00000004u;
}
void Idcstatus4_14::clear_brakemode() {
  brakemode_ = 0;
  clear_has_brakemode();
}
::google::protobuf::int32 Idcstatus4_14::brakemode() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus4_14.brakemode)
  return brakemode_;
}
void Idcstatus4_14::set_brakemode(::google::protobuf::int32 value) {
  set_has_brakemode();
  brakemode_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus4_14.brakemode)
}

// optional double longtaccreqhsc4 = 3;
bool Idcstatus4_14::has_longtaccreqhsc4() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Idcstatus4_14::set_has_longtaccreqhsc4() {
  _has_bits_[0] |= 0x00000002u;
}
void Idcstatus4_14::clear_has_longtaccreqhsc4() {
  _has_bits_[0] &= ~0x00000002u;
}
void Idcstatus4_14::clear_longtaccreqhsc4() {
  longtaccreqhsc4_ = 0;
  clear_has_longtaccreqhsc4();
}
double Idcstatus4_14::longtaccreqhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus4_14.longtaccreqhsc4)
  return longtaccreqhsc4_;
}
void Idcstatus4_14::set_longtaccreqhsc4(double value) {
  set_has_longtaccreqhsc4();
  longtaccreqhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus4_14.longtaccreqhsc4)
}

// optional int32 trackcoefficiantx2vhsc4 = 4;
bool Idcstatus4_14::has_trackcoefficiantx2vhsc4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Idcstatus4_14::set_has_trackcoefficiantx2vhsc4() {
  _has_bits_[0] |= 0x00000008u;
}
void Idcstatus4_14::clear_has_trackcoefficiantx2vhsc4() {
  _has_bits_[0] &= ~0x00000008u;
}
void Idcstatus4_14::clear_trackcoefficiantx2vhsc4() {
  trackcoefficiantx2vhsc4_ = 0;
  clear_has_trackcoefficiantx2vhsc4();
}
::google::protobuf::int32 Idcstatus4_14::trackcoefficiantx2vhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus4_14.trackcoefficiantx2vhsc4)
  return trackcoefficiantx2vhsc4_;
}
void Idcstatus4_14::set_trackcoefficiantx2vhsc4(::google::protobuf::int32 value) {
  set_has_trackcoefficiantx2vhsc4();
  trackcoefficiantx2vhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus4_14.trackcoefficiantx2vhsc4)
}

// optional double trackcoefficiantx2hsc4 = 5;
bool Idcstatus4_14::has_trackcoefficiantx2hsc4() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Idcstatus4_14::set_has_trackcoefficiantx2hsc4() {
  _has_bits_[0] |= 0x00000010u;
}
void Idcstatus4_14::clear_has_trackcoefficiantx2hsc4() {
  _has_bits_[0] &= ~0x00000010u;
}
void Idcstatus4_14::clear_trackcoefficiantx2hsc4() {
  trackcoefficiantx2hsc4_ = 0;
  clear_has_trackcoefficiantx2hsc4();
}
double Idcstatus4_14::trackcoefficiantx2hsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus4_14.trackcoefficiantx2hsc4)
  return trackcoefficiantx2hsc4_;
}
void Idcstatus4_14::set_trackcoefficiantx2hsc4(double value) {
  set_has_trackcoefficiantx2hsc4();
  trackcoefficiantx2hsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus4_14.trackcoefficiantx2hsc4)
}

// optional int32 trackcoefficiantx1vhsc4 = 6;
bool Idcstatus4_14::has_trackcoefficiantx1vhsc4() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Idcstatus4_14::set_has_trackcoefficiantx1vhsc4() {
  _has_bits_[0] |= 0x00000040u;
}
void Idcstatus4_14::clear_has_trackcoefficiantx1vhsc4() {
  _has_bits_[0] &= ~0x00000040u;
}
void Idcstatus4_14::clear_trackcoefficiantx1vhsc4() {
  trackcoefficiantx1vhsc4_ = 0;
  clear_has_trackcoefficiantx1vhsc4();
}
::google::protobuf::int32 Idcstatus4_14::trackcoefficiantx1vhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus4_14.trackcoefficiantx1vhsc4)
  return trackcoefficiantx1vhsc4_;
}
void Idcstatus4_14::set_trackcoefficiantx1vhsc4(::google::protobuf::int32 value) {
  set_has_trackcoefficiantx1vhsc4();
  trackcoefficiantx1vhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus4_14.trackcoefficiantx1vhsc4)
}

// optional double trackcoefficiantx1hsc4 = 7;
bool Idcstatus4_14::has_trackcoefficiantx1hsc4() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Idcstatus4_14::set_has_trackcoefficiantx1hsc4() {
  _has_bits_[0] |= 0x00000020u;
}
void Idcstatus4_14::clear_has_trackcoefficiantx1hsc4() {
  _has_bits_[0] &= ~0x00000020u;
}
void Idcstatus4_14::clear_trackcoefficiantx1hsc4() {
  trackcoefficiantx1hsc4_ = 0;
  clear_has_trackcoefficiantx1hsc4();
}
double Idcstatus4_14::trackcoefficiantx1hsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus4_14.trackcoefficiantx1hsc4)
  return trackcoefficiantx1hsc4_;
}
void Idcstatus4_14::set_trackcoefficiantx1hsc4(double value) {
  set_has_trackcoefficiantx1hsc4();
  trackcoefficiantx1hsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus4_14.trackcoefficiantx1hsc4)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vcustatus4_24::kVehlckngstahsc4FieldNumber;
const int Vcustatus4_24::kFrtpsngdooropenstshsc4FieldNumber;
const int Vcustatus4_24::kDrvrdooropenstshsc4FieldNumber;
const int Vcustatus4_24::kVehinertiaswtrigdhsc4FieldNumber;
const int Vcustatus4_24::kBrkpdldrvrappdprsvHsc4FieldNumber;
const int Vcustatus4_24::kBrkpdldrvrappdprsalvrcHsc4FieldNumber;
const int Vcustatus4_24::kBrkpdldrvrappdprsHsc4FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vcustatus4_24::Vcustatus4_24()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:atd.drivers.hsc4.Vcustatus4_24)
}
Vcustatus4_24::Vcustatus4_24(const Vcustatus4_24& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&vehlckngstahsc4_, &from.vehlckngstahsc4_,
    reinterpret_cast<char*>(&brkpdldrvrappdprs_hsc4_) -
    reinterpret_cast<char*>(&vehlckngstahsc4_) + sizeof(brkpdldrvrappdprs_hsc4_));
  // @@protoc_insertion_point(copy_constructor:atd.drivers.hsc4.Vcustatus4_24)
}

void Vcustatus4_24::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&vehlckngstahsc4_, 0, reinterpret_cast<char*>(&brkpdldrvrappdprs_hsc4_) -
    reinterpret_cast<char*>(&vehlckngstahsc4_) + sizeof(brkpdldrvrappdprs_hsc4_));
}

Vcustatus4_24::~Vcustatus4_24() {
  // @@protoc_insertion_point(destructor:atd.drivers.hsc4.Vcustatus4_24)
  SharedDtor();
}

void Vcustatus4_24::SharedDtor() {
}

void Vcustatus4_24::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Vcustatus4_24& Vcustatus4_24::default_instance() {
  protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  return *internal_default_instance();
}

Vcustatus4_24* Vcustatus4_24::New(::google::protobuf::Arena* arena) const {
  Vcustatus4_24* n = new Vcustatus4_24;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vcustatus4_24::Clear() {
// @@protoc_insertion_point(message_clear_start:atd.drivers.hsc4.Vcustatus4_24)
  if (_has_bits_[0 / 32] & 127u) {
    ::memset(&vehlckngstahsc4_, 0, reinterpret_cast<char*>(&brkpdldrvrappdprs_hsc4_) -
      reinterpret_cast<char*>(&vehlckngstahsc4_) + sizeof(brkpdldrvrappdprs_hsc4_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Vcustatus4_24::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:atd.drivers.hsc4.Vcustatus4_24)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 vehlckngstahsc4 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_vehlckngstahsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vehlckngstahsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 frtpsngdooropenstshsc4 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_frtpsngdooropenstshsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &frtpsngdooropenstshsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 drvrdooropenstshsc4 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_drvrdooropenstshsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &drvrdooropenstshsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vehinertiaswtrigdhsc4 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_vehinertiaswtrigdhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vehinertiaswtrigdhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 brkpdldrvrappdprsv_hsc4 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_brkpdldrvrappdprsv_hsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &brkpdldrvrappdprsv_hsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 brkpdldrvrappdprsalvrc_hsc4 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_brkpdldrvrappdprsalvrc_hsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &brkpdldrvrappdprsalvrc_hsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double brkpdldrvrappdprs_hsc4 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u)) {
          set_has_brkpdldrvrappdprs_hsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &brkpdldrvrappdprs_hsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:atd.drivers.hsc4.Vcustatus4_24)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:atd.drivers.hsc4.Vcustatus4_24)
  return false;
#undef DO_
}

void Vcustatus4_24::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:atd.drivers.hsc4.Vcustatus4_24)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 vehlckngstahsc4 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->vehlckngstahsc4(), output);
  }

  // optional int32 frtpsngdooropenstshsc4 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->frtpsngdooropenstshsc4(), output);
  }

  // optional int32 drvrdooropenstshsc4 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->drvrdooropenstshsc4(), output);
  }

  // optional int32 vehinertiaswtrigdhsc4 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->vehinertiaswtrigdhsc4(), output);
  }

  // optional int32 brkpdldrvrappdprsv_hsc4 = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->brkpdldrvrappdprsv_hsc4(), output);
  }

  // optional int32 brkpdldrvrappdprsalvrc_hsc4 = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->brkpdldrvrappdprsalvrc_hsc4(), output);
  }

  // optional double brkpdldrvrappdprs_hsc4 = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->brkpdldrvrappdprs_hsc4(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:atd.drivers.hsc4.Vcustatus4_24)
}

size_t Vcustatus4_24::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:atd.drivers.hsc4.Vcustatus4_24)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 127u) {
    // optional int32 vehlckngstahsc4 = 1;
    if (has_vehlckngstahsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vehlckngstahsc4());
    }

    // optional int32 frtpsngdooropenstshsc4 = 2;
    if (has_frtpsngdooropenstshsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->frtpsngdooropenstshsc4());
    }

    // optional int32 drvrdooropenstshsc4 = 3;
    if (has_drvrdooropenstshsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->drvrdooropenstshsc4());
    }

    // optional int32 vehinertiaswtrigdhsc4 = 4;
    if (has_vehinertiaswtrigdhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vehinertiaswtrigdhsc4());
    }

    // optional int32 brkpdldrvrappdprsv_hsc4 = 5;
    if (has_brkpdldrvrappdprsv_hsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->brkpdldrvrappdprsv_hsc4());
    }

    // optional int32 brkpdldrvrappdprsalvrc_hsc4 = 6;
    if (has_brkpdldrvrappdprsalvrc_hsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->brkpdldrvrappdprsalvrc_hsc4());
    }

    // optional double brkpdldrvrappdprs_hsc4 = 7;
    if (has_brkpdldrvrappdprs_hsc4()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Vcustatus4_24::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Vcustatus4_24*>(&from));
}

void Vcustatus4_24::MergeFrom(const Vcustatus4_24& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:atd.drivers.hsc4.Vcustatus4_24)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      vehlckngstahsc4_ = from.vehlckngstahsc4_;
    }
    if (cached_has_bits & 0x00000002u) {
      frtpsngdooropenstshsc4_ = from.frtpsngdooropenstshsc4_;
    }
    if (cached_has_bits & 0x00000004u) {
      drvrdooropenstshsc4_ = from.drvrdooropenstshsc4_;
    }
    if (cached_has_bits & 0x00000008u) {
      vehinertiaswtrigdhsc4_ = from.vehinertiaswtrigdhsc4_;
    }
    if (cached_has_bits & 0x00000010u) {
      brkpdldrvrappdprsv_hsc4_ = from.brkpdldrvrappdprsv_hsc4_;
    }
    if (cached_has_bits & 0x00000020u) {
      brkpdldrvrappdprsalvrc_hsc4_ = from.brkpdldrvrappdprsalvrc_hsc4_;
    }
    if (cached_has_bits & 0x00000040u) {
      brkpdldrvrappdprs_hsc4_ = from.brkpdldrvrappdprs_hsc4_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Vcustatus4_24::CopyFrom(const Vcustatus4_24& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:atd.drivers.hsc4.Vcustatus4_24)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vcustatus4_24::IsInitialized() const {
  return true;
}

void Vcustatus4_24::Swap(Vcustatus4_24* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vcustatus4_24::InternalSwap(Vcustatus4_24* other) {
  std::swap(vehlckngstahsc4_, other->vehlckngstahsc4_);
  std::swap(frtpsngdooropenstshsc4_, other->frtpsngdooropenstshsc4_);
  std::swap(drvrdooropenstshsc4_, other->drvrdooropenstshsc4_);
  std::swap(vehinertiaswtrigdhsc4_, other->vehinertiaswtrigdhsc4_);
  std::swap(brkpdldrvrappdprsv_hsc4_, other->brkpdldrvrappdprsv_hsc4_);
  std::swap(brkpdldrvrappdprsalvrc_hsc4_, other->brkpdldrvrappdprsalvrc_hsc4_);
  std::swap(brkpdldrvrappdprs_hsc4_, other->brkpdldrvrappdprs_hsc4_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Vcustatus4_24::GetTypeName() const {
  return "atd.drivers.hsc4.Vcustatus4_24";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Vcustatus4_24

// optional int32 vehlckngstahsc4 = 1;
bool Vcustatus4_24::has_vehlckngstahsc4() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Vcustatus4_24::set_has_vehlckngstahsc4() {
  _has_bits_[0] |= 0x00000001u;
}
void Vcustatus4_24::clear_has_vehlckngstahsc4() {
  _has_bits_[0] &= ~0x00000001u;
}
void Vcustatus4_24::clear_vehlckngstahsc4() {
  vehlckngstahsc4_ = 0;
  clear_has_vehlckngstahsc4();
}
::google::protobuf::int32 Vcustatus4_24::vehlckngstahsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus4_24.vehlckngstahsc4)
  return vehlckngstahsc4_;
}
void Vcustatus4_24::set_vehlckngstahsc4(::google::protobuf::int32 value) {
  set_has_vehlckngstahsc4();
  vehlckngstahsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus4_24.vehlckngstahsc4)
}

// optional int32 frtpsngdooropenstshsc4 = 2;
bool Vcustatus4_24::has_frtpsngdooropenstshsc4() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Vcustatus4_24::set_has_frtpsngdooropenstshsc4() {
  _has_bits_[0] |= 0x00000002u;
}
void Vcustatus4_24::clear_has_frtpsngdooropenstshsc4() {
  _has_bits_[0] &= ~0x00000002u;
}
void Vcustatus4_24::clear_frtpsngdooropenstshsc4() {
  frtpsngdooropenstshsc4_ = 0;
  clear_has_frtpsngdooropenstshsc4();
}
::google::protobuf::int32 Vcustatus4_24::frtpsngdooropenstshsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus4_24.frtpsngdooropenstshsc4)
  return frtpsngdooropenstshsc4_;
}
void Vcustatus4_24::set_frtpsngdooropenstshsc4(::google::protobuf::int32 value) {
  set_has_frtpsngdooropenstshsc4();
  frtpsngdooropenstshsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus4_24.frtpsngdooropenstshsc4)
}

// optional int32 drvrdooropenstshsc4 = 3;
bool Vcustatus4_24::has_drvrdooropenstshsc4() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Vcustatus4_24::set_has_drvrdooropenstshsc4() {
  _has_bits_[0] |= 0x00000004u;
}
void Vcustatus4_24::clear_has_drvrdooropenstshsc4() {
  _has_bits_[0] &= ~0x00000004u;
}
void Vcustatus4_24::clear_drvrdooropenstshsc4() {
  drvrdooropenstshsc4_ = 0;
  clear_has_drvrdooropenstshsc4();
}
::google::protobuf::int32 Vcustatus4_24::drvrdooropenstshsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus4_24.drvrdooropenstshsc4)
  return drvrdooropenstshsc4_;
}
void Vcustatus4_24::set_drvrdooropenstshsc4(::google::protobuf::int32 value) {
  set_has_drvrdooropenstshsc4();
  drvrdooropenstshsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus4_24.drvrdooropenstshsc4)
}

// optional int32 vehinertiaswtrigdhsc4 = 4;
bool Vcustatus4_24::has_vehinertiaswtrigdhsc4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Vcustatus4_24::set_has_vehinertiaswtrigdhsc4() {
  _has_bits_[0] |= 0x00000008u;
}
void Vcustatus4_24::clear_has_vehinertiaswtrigdhsc4() {
  _has_bits_[0] &= ~0x00000008u;
}
void Vcustatus4_24::clear_vehinertiaswtrigdhsc4() {
  vehinertiaswtrigdhsc4_ = 0;
  clear_has_vehinertiaswtrigdhsc4();
}
::google::protobuf::int32 Vcustatus4_24::vehinertiaswtrigdhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus4_24.vehinertiaswtrigdhsc4)
  return vehinertiaswtrigdhsc4_;
}
void Vcustatus4_24::set_vehinertiaswtrigdhsc4(::google::protobuf::int32 value) {
  set_has_vehinertiaswtrigdhsc4();
  vehinertiaswtrigdhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus4_24.vehinertiaswtrigdhsc4)
}

// optional int32 brkpdldrvrappdprsv_hsc4 = 5;
bool Vcustatus4_24::has_brkpdldrvrappdprsv_hsc4() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Vcustatus4_24::set_has_brkpdldrvrappdprsv_hsc4() {
  _has_bits_[0] |= 0x00000010u;
}
void Vcustatus4_24::clear_has_brkpdldrvrappdprsv_hsc4() {
  _has_bits_[0] &= ~0x00000010u;
}
void Vcustatus4_24::clear_brkpdldrvrappdprsv_hsc4() {
  brkpdldrvrappdprsv_hsc4_ = 0;
  clear_has_brkpdldrvrappdprsv_hsc4();
}
::google::protobuf::int32 Vcustatus4_24::brkpdldrvrappdprsv_hsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus4_24.brkpdldrvrappdprsv_hsc4)
  return brkpdldrvrappdprsv_hsc4_;
}
void Vcustatus4_24::set_brkpdldrvrappdprsv_hsc4(::google::protobuf::int32 value) {
  set_has_brkpdldrvrappdprsv_hsc4();
  brkpdldrvrappdprsv_hsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus4_24.brkpdldrvrappdprsv_hsc4)
}

// optional int32 brkpdldrvrappdprsalvrc_hsc4 = 6;
bool Vcustatus4_24::has_brkpdldrvrappdprsalvrc_hsc4() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Vcustatus4_24::set_has_brkpdldrvrappdprsalvrc_hsc4() {
  _has_bits_[0] |= 0x00000020u;
}
void Vcustatus4_24::clear_has_brkpdldrvrappdprsalvrc_hsc4() {
  _has_bits_[0] &= ~0x00000020u;
}
void Vcustatus4_24::clear_brkpdldrvrappdprsalvrc_hsc4() {
  brkpdldrvrappdprsalvrc_hsc4_ = 0;
  clear_has_brkpdldrvrappdprsalvrc_hsc4();
}
::google::protobuf::int32 Vcustatus4_24::brkpdldrvrappdprsalvrc_hsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus4_24.brkpdldrvrappdprsalvrc_hsc4)
  return brkpdldrvrappdprsalvrc_hsc4_;
}
void Vcustatus4_24::set_brkpdldrvrappdprsalvrc_hsc4(::google::protobuf::int32 value) {
  set_has_brkpdldrvrappdprsalvrc_hsc4();
  brkpdldrvrappdprsalvrc_hsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus4_24.brkpdldrvrappdprsalvrc_hsc4)
}

// optional double brkpdldrvrappdprs_hsc4 = 7;
bool Vcustatus4_24::has_brkpdldrvrappdprs_hsc4() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Vcustatus4_24::set_has_brkpdldrvrappdprs_hsc4() {
  _has_bits_[0] |= 0x00000040u;
}
void Vcustatus4_24::clear_has_brkpdldrvrappdprs_hsc4() {
  _has_bits_[0] &= ~0x00000040u;
}
void Vcustatus4_24::clear_brkpdldrvrappdprs_hsc4() {
  brkpdldrvrappdprs_hsc4_ = 0;
  clear_has_brkpdldrvrappdprs_hsc4();
}
double Vcustatus4_24::brkpdldrvrappdprs_hsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus4_24.brkpdldrvrappdprs_hsc4)
  return brkpdldrvrappdprs_hsc4_;
}
void Vcustatus4_24::set_brkpdldrvrappdprs_hsc4(double value) {
  set_has_brkpdldrvrappdprs_hsc4();
  brkpdldrvrappdprs_hsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus4_24.brkpdldrvrappdprs_hsc4)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vcustatus5_25::kVehdecelmthsc4FieldNumber;
const int Vcustatus5_25::kVehaccelmthsc4FieldNumber;
const int Vcustatus5_25::kStrgwhlanglmthsc4FieldNumber;
const int Vcustatus5_25::kStrgwhlanggrdlmthsc4FieldNumber;
const int Vcustatus5_25::kRdfrictioncoefficienthsc4FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vcustatus5_25::Vcustatus5_25()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:atd.drivers.hsc4.Vcustatus5_25)
}
Vcustatus5_25::Vcustatus5_25(const Vcustatus5_25& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&vehdecelmthsc4_, &from.vehdecelmthsc4_,
    reinterpret_cast<char*>(&strgwhlanggrdlmthsc4_) -
    reinterpret_cast<char*>(&vehdecelmthsc4_) + sizeof(strgwhlanggrdlmthsc4_));
  // @@protoc_insertion_point(copy_constructor:atd.drivers.hsc4.Vcustatus5_25)
}

void Vcustatus5_25::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&vehdecelmthsc4_, 0, reinterpret_cast<char*>(&strgwhlanggrdlmthsc4_) -
    reinterpret_cast<char*>(&vehdecelmthsc4_) + sizeof(strgwhlanggrdlmthsc4_));
}

Vcustatus5_25::~Vcustatus5_25() {
  // @@protoc_insertion_point(destructor:atd.drivers.hsc4.Vcustatus5_25)
  SharedDtor();
}

void Vcustatus5_25::SharedDtor() {
}

void Vcustatus5_25::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Vcustatus5_25& Vcustatus5_25::default_instance() {
  protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  return *internal_default_instance();
}

Vcustatus5_25* Vcustatus5_25::New(::google::protobuf::Arena* arena) const {
  Vcustatus5_25* n = new Vcustatus5_25;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vcustatus5_25::Clear() {
// @@protoc_insertion_point(message_clear_start:atd.drivers.hsc4.Vcustatus5_25)
  if (_has_bits_[0 / 32] & 31u) {
    ::memset(&vehdecelmthsc4_, 0, reinterpret_cast<char*>(&strgwhlanggrdlmthsc4_) -
      reinterpret_cast<char*>(&vehdecelmthsc4_) + sizeof(strgwhlanggrdlmthsc4_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Vcustatus5_25::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:atd.drivers.hsc4.Vcustatus5_25)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double vehdecelmthsc4 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_vehdecelmthsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vehdecelmthsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double vehaccelmthsc4 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_vehaccelmthsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vehaccelmthsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double strgwhlanglmthsc4 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {
          set_has_strgwhlanglmthsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &strgwhlanglmthsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 strgwhlanggrdlmthsc4 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_strgwhlanggrdlmthsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &strgwhlanggrdlmthsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double rdfrictioncoefficienthsc4 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u)) {
          set_has_rdfrictioncoefficienthsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &rdfrictioncoefficienthsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:atd.drivers.hsc4.Vcustatus5_25)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:atd.drivers.hsc4.Vcustatus5_25)
  return false;
#undef DO_
}

void Vcustatus5_25::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:atd.drivers.hsc4.Vcustatus5_25)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double vehdecelmthsc4 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->vehdecelmthsc4(), output);
  }

  // optional double vehaccelmthsc4 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->vehaccelmthsc4(), output);
  }

  // optional double strgwhlanglmthsc4 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->strgwhlanglmthsc4(), output);
  }

  // optional int32 strgwhlanggrdlmthsc4 = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->strgwhlanggrdlmthsc4(), output);
  }

  // optional double rdfrictioncoefficienthsc4 = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->rdfrictioncoefficienthsc4(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:atd.drivers.hsc4.Vcustatus5_25)
}

size_t Vcustatus5_25::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:atd.drivers.hsc4.Vcustatus5_25)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 31u) {
    // optional double vehdecelmthsc4 = 1;
    if (has_vehdecelmthsc4()) {
      total_size += 1 + 8;
    }

    // optional double vehaccelmthsc4 = 2;
    if (has_vehaccelmthsc4()) {
      total_size += 1 + 8;
    }

    // optional double strgwhlanglmthsc4 = 3;
    if (has_strgwhlanglmthsc4()) {
      total_size += 1 + 8;
    }

    // optional double rdfrictioncoefficienthsc4 = 5;
    if (has_rdfrictioncoefficienthsc4()) {
      total_size += 1 + 8;
    }

    // optional int32 strgwhlanggrdlmthsc4 = 4;
    if (has_strgwhlanggrdlmthsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->strgwhlanggrdlmthsc4());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Vcustatus5_25::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Vcustatus5_25*>(&from));
}

void Vcustatus5_25::MergeFrom(const Vcustatus5_25& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:atd.drivers.hsc4.Vcustatus5_25)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      vehdecelmthsc4_ = from.vehdecelmthsc4_;
    }
    if (cached_has_bits & 0x00000002u) {
      vehaccelmthsc4_ = from.vehaccelmthsc4_;
    }
    if (cached_has_bits & 0x00000004u) {
      strgwhlanglmthsc4_ = from.strgwhlanglmthsc4_;
    }
    if (cached_has_bits & 0x00000008u) {
      rdfrictioncoefficienthsc4_ = from.rdfrictioncoefficienthsc4_;
    }
    if (cached_has_bits & 0x00000010u) {
      strgwhlanggrdlmthsc4_ = from.strgwhlanggrdlmthsc4_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Vcustatus5_25::CopyFrom(const Vcustatus5_25& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:atd.drivers.hsc4.Vcustatus5_25)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vcustatus5_25::IsInitialized() const {
  return true;
}

void Vcustatus5_25::Swap(Vcustatus5_25* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vcustatus5_25::InternalSwap(Vcustatus5_25* other) {
  std::swap(vehdecelmthsc4_, other->vehdecelmthsc4_);
  std::swap(vehaccelmthsc4_, other->vehaccelmthsc4_);
  std::swap(strgwhlanglmthsc4_, other->strgwhlanglmthsc4_);
  std::swap(rdfrictioncoefficienthsc4_, other->rdfrictioncoefficienthsc4_);
  std::swap(strgwhlanggrdlmthsc4_, other->strgwhlanggrdlmthsc4_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Vcustatus5_25::GetTypeName() const {
  return "atd.drivers.hsc4.Vcustatus5_25";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Vcustatus5_25

// optional double vehdecelmthsc4 = 1;
bool Vcustatus5_25::has_vehdecelmthsc4() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Vcustatus5_25::set_has_vehdecelmthsc4() {
  _has_bits_[0] |= 0x00000001u;
}
void Vcustatus5_25::clear_has_vehdecelmthsc4() {
  _has_bits_[0] &= ~0x00000001u;
}
void Vcustatus5_25::clear_vehdecelmthsc4() {
  vehdecelmthsc4_ = 0;
  clear_has_vehdecelmthsc4();
}
double Vcustatus5_25::vehdecelmthsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus5_25.vehdecelmthsc4)
  return vehdecelmthsc4_;
}
void Vcustatus5_25::set_vehdecelmthsc4(double value) {
  set_has_vehdecelmthsc4();
  vehdecelmthsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus5_25.vehdecelmthsc4)
}

// optional double vehaccelmthsc4 = 2;
bool Vcustatus5_25::has_vehaccelmthsc4() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Vcustatus5_25::set_has_vehaccelmthsc4() {
  _has_bits_[0] |= 0x00000002u;
}
void Vcustatus5_25::clear_has_vehaccelmthsc4() {
  _has_bits_[0] &= ~0x00000002u;
}
void Vcustatus5_25::clear_vehaccelmthsc4() {
  vehaccelmthsc4_ = 0;
  clear_has_vehaccelmthsc4();
}
double Vcustatus5_25::vehaccelmthsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus5_25.vehaccelmthsc4)
  return vehaccelmthsc4_;
}
void Vcustatus5_25::set_vehaccelmthsc4(double value) {
  set_has_vehaccelmthsc4();
  vehaccelmthsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus5_25.vehaccelmthsc4)
}

// optional double strgwhlanglmthsc4 = 3;
bool Vcustatus5_25::has_strgwhlanglmthsc4() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Vcustatus5_25::set_has_strgwhlanglmthsc4() {
  _has_bits_[0] |= 0x00000004u;
}
void Vcustatus5_25::clear_has_strgwhlanglmthsc4() {
  _has_bits_[0] &= ~0x00000004u;
}
void Vcustatus5_25::clear_strgwhlanglmthsc4() {
  strgwhlanglmthsc4_ = 0;
  clear_has_strgwhlanglmthsc4();
}
double Vcustatus5_25::strgwhlanglmthsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus5_25.strgwhlanglmthsc4)
  return strgwhlanglmthsc4_;
}
void Vcustatus5_25::set_strgwhlanglmthsc4(double value) {
  set_has_strgwhlanglmthsc4();
  strgwhlanglmthsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus5_25.strgwhlanglmthsc4)
}

// optional int32 strgwhlanggrdlmthsc4 = 4;
bool Vcustatus5_25::has_strgwhlanggrdlmthsc4() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Vcustatus5_25::set_has_strgwhlanggrdlmthsc4() {
  _has_bits_[0] |= 0x00000010u;
}
void Vcustatus5_25::clear_has_strgwhlanggrdlmthsc4() {
  _has_bits_[0] &= ~0x00000010u;
}
void Vcustatus5_25::clear_strgwhlanggrdlmthsc4() {
  strgwhlanggrdlmthsc4_ = 0;
  clear_has_strgwhlanggrdlmthsc4();
}
::google::protobuf::int32 Vcustatus5_25::strgwhlanggrdlmthsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus5_25.strgwhlanggrdlmthsc4)
  return strgwhlanggrdlmthsc4_;
}
void Vcustatus5_25::set_strgwhlanggrdlmthsc4(::google::protobuf::int32 value) {
  set_has_strgwhlanggrdlmthsc4();
  strgwhlanggrdlmthsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus5_25.strgwhlanggrdlmthsc4)
}

// optional double rdfrictioncoefficienthsc4 = 5;
bool Vcustatus5_25::has_rdfrictioncoefficienthsc4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Vcustatus5_25::set_has_rdfrictioncoefficienthsc4() {
  _has_bits_[0] |= 0x00000008u;
}
void Vcustatus5_25::clear_has_rdfrictioncoefficienthsc4() {
  _has_bits_[0] &= ~0x00000008u;
}
void Vcustatus5_25::clear_rdfrictioncoefficienthsc4() {
  rdfrictioncoefficienthsc4_ = 0;
  clear_has_rdfrictioncoefficienthsc4();
}
double Vcustatus5_25::rdfrictioncoefficienthsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus5_25.rdfrictioncoefficienthsc4)
  return rdfrictioncoefficienthsc4_;
}
void Vcustatus5_25::set_rdfrictioncoefficienthsc4(double value) {
  set_has_rdfrictioncoefficienthsc4();
  rdfrictioncoefficienthsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus5_25.rdfrictioncoefficienthsc4)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vcustatus6_26::kWhlgndvelrnondrvnvHsc4FieldNumber;
const int Vcustatus6_26::kWhlgndvelrnondrvnHsc4FieldNumber;
const int Vcustatus6_26::kWhlgndvellnondrvnHsc4FieldNumber;
const int Vcustatus6_26::kWhlgndvellnondrvnvHsc4FieldNumber;
const int Vcustatus6_26::kWhlgndvelrdrvnHsc4FieldNumber;
const int Vcustatus6_26::kWhlgndvelrdrvnvHsc4FieldNumber;
const int Vcustatus6_26::kWhlgndvelldrvnHsc4FieldNumber;
const int Vcustatus6_26::kWhlgndvelldrvnvHsc4FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vcustatus6_26::Vcustatus6_26()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:atd.drivers.hsc4.Vcustatus6_26)
}
Vcustatus6_26::Vcustatus6_26(const Vcustatus6_26& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&whlgndvelrnondrvn_hsc4_, &from.whlgndvelrnondrvn_hsc4_,
    reinterpret_cast<char*>(&whlgndvelldrvnv_hsc4_) -
    reinterpret_cast<char*>(&whlgndvelrnondrvn_hsc4_) + sizeof(whlgndvelldrvnv_hsc4_));
  // @@protoc_insertion_point(copy_constructor:atd.drivers.hsc4.Vcustatus6_26)
}

void Vcustatus6_26::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&whlgndvelrnondrvn_hsc4_, 0, reinterpret_cast<char*>(&whlgndvelldrvnv_hsc4_) -
    reinterpret_cast<char*>(&whlgndvelrnondrvn_hsc4_) + sizeof(whlgndvelldrvnv_hsc4_));
}

Vcustatus6_26::~Vcustatus6_26() {
  // @@protoc_insertion_point(destructor:atd.drivers.hsc4.Vcustatus6_26)
  SharedDtor();
}

void Vcustatus6_26::SharedDtor() {
}

void Vcustatus6_26::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Vcustatus6_26& Vcustatus6_26::default_instance() {
  protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  return *internal_default_instance();
}

Vcustatus6_26* Vcustatus6_26::New(::google::protobuf::Arena* arena) const {
  Vcustatus6_26* n = new Vcustatus6_26;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vcustatus6_26::Clear() {
// @@protoc_insertion_point(message_clear_start:atd.drivers.hsc4.Vcustatus6_26)
  if (_has_bits_[0 / 32] & 255u) {
    ::memset(&whlgndvelrnondrvn_hsc4_, 0, reinterpret_cast<char*>(&whlgndvelldrvnv_hsc4_) -
      reinterpret_cast<char*>(&whlgndvelrnondrvn_hsc4_) + sizeof(whlgndvelldrvnv_hsc4_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Vcustatus6_26::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:atd.drivers.hsc4.Vcustatus6_26)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 whlgndvelrnondrvnv_hsc4 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_whlgndvelrnondrvnv_hsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &whlgndvelrnondrvnv_hsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double whlgndvelrnondrvn_hsc4 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_whlgndvelrnondrvn_hsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &whlgndvelrnondrvn_hsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double whlgndvellnondrvn_hsc4 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {
          set_has_whlgndvellnondrvn_hsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &whlgndvellnondrvn_hsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 whlgndvellnondrvnv_hsc4 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_whlgndvellnondrvnv_hsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &whlgndvellnondrvnv_hsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double whlgndvelrdrvn_hsc4 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u)) {
          set_has_whlgndvelrdrvn_hsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &whlgndvelrdrvn_hsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 whlgndvelrdrvnv_hsc4 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_whlgndvelrdrvnv_hsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &whlgndvelrdrvnv_hsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double whlgndvelldrvn_hsc4 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u)) {
          set_has_whlgndvelldrvn_hsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &whlgndvelldrvn_hsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 whlgndvelldrvnv_hsc4 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_whlgndvelldrvnv_hsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &whlgndvelldrvnv_hsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:atd.drivers.hsc4.Vcustatus6_26)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:atd.drivers.hsc4.Vcustatus6_26)
  return false;
#undef DO_
}

void Vcustatus6_26::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:atd.drivers.hsc4.Vcustatus6_26)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 whlgndvelrnondrvnv_hsc4 = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->whlgndvelrnondrvnv_hsc4(), output);
  }

  // optional double whlgndvelrnondrvn_hsc4 = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->whlgndvelrnondrvn_hsc4(), output);
  }

  // optional double whlgndvellnondrvn_hsc4 = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->whlgndvellnondrvn_hsc4(), output);
  }

  // optional int32 whlgndvellnondrvnv_hsc4 = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->whlgndvellnondrvnv_hsc4(), output);
  }

  // optional double whlgndvelrdrvn_hsc4 = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->whlgndvelrdrvn_hsc4(), output);
  }

  // optional int32 whlgndvelrdrvnv_hsc4 = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->whlgndvelrdrvnv_hsc4(), output);
  }

  // optional double whlgndvelldrvn_hsc4 = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->whlgndvelldrvn_hsc4(), output);
  }

  // optional int32 whlgndvelldrvnv_hsc4 = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->whlgndvelldrvnv_hsc4(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:atd.drivers.hsc4.Vcustatus6_26)
}

size_t Vcustatus6_26::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:atd.drivers.hsc4.Vcustatus6_26)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 255u) {
    // optional double whlgndvelrnondrvn_hsc4 = 2;
    if (has_whlgndvelrnondrvn_hsc4()) {
      total_size += 1 + 8;
    }

    // optional int32 whlgndvelrnondrvnv_hsc4 = 1;
    if (has_whlgndvelrnondrvnv_hsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->whlgndvelrnondrvnv_hsc4());
    }

    // optional int32 whlgndvellnondrvnv_hsc4 = 4;
    if (has_whlgndvellnondrvnv_hsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->whlgndvellnondrvnv_hsc4());
    }

    // optional double whlgndvellnondrvn_hsc4 = 3;
    if (has_whlgndvellnondrvn_hsc4()) {
      total_size += 1 + 8;
    }

    // optional double whlgndvelrdrvn_hsc4 = 5;
    if (has_whlgndvelrdrvn_hsc4()) {
      total_size += 1 + 8;
    }

    // optional double whlgndvelldrvn_hsc4 = 7;
    if (has_whlgndvelldrvn_hsc4()) {
      total_size += 1 + 8;
    }

    // optional int32 whlgndvelrdrvnv_hsc4 = 6;
    if (has_whlgndvelrdrvnv_hsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->whlgndvelrdrvnv_hsc4());
    }

    // optional int32 whlgndvelldrvnv_hsc4 = 8;
    if (has_whlgndvelldrvnv_hsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->whlgndvelldrvnv_hsc4());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Vcustatus6_26::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Vcustatus6_26*>(&from));
}

void Vcustatus6_26::MergeFrom(const Vcustatus6_26& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:atd.drivers.hsc4.Vcustatus6_26)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      whlgndvelrnondrvn_hsc4_ = from.whlgndvelrnondrvn_hsc4_;
    }
    if (cached_has_bits & 0x00000002u) {
      whlgndvelrnondrvnv_hsc4_ = from.whlgndvelrnondrvnv_hsc4_;
    }
    if (cached_has_bits & 0x00000004u) {
      whlgndvellnondrvnv_hsc4_ = from.whlgndvellnondrvnv_hsc4_;
    }
    if (cached_has_bits & 0x00000008u) {
      whlgndvellnondrvn_hsc4_ = from.whlgndvellnondrvn_hsc4_;
    }
    if (cached_has_bits & 0x00000010u) {
      whlgndvelrdrvn_hsc4_ = from.whlgndvelrdrvn_hsc4_;
    }
    if (cached_has_bits & 0x00000020u) {
      whlgndvelldrvn_hsc4_ = from.whlgndvelldrvn_hsc4_;
    }
    if (cached_has_bits & 0x00000040u) {
      whlgndvelrdrvnv_hsc4_ = from.whlgndvelrdrvnv_hsc4_;
    }
    if (cached_has_bits & 0x00000080u) {
      whlgndvelldrvnv_hsc4_ = from.whlgndvelldrvnv_hsc4_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Vcustatus6_26::CopyFrom(const Vcustatus6_26& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:atd.drivers.hsc4.Vcustatus6_26)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vcustatus6_26::IsInitialized() const {
  return true;
}

void Vcustatus6_26::Swap(Vcustatus6_26* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vcustatus6_26::InternalSwap(Vcustatus6_26* other) {
  std::swap(whlgndvelrnondrvn_hsc4_, other->whlgndvelrnondrvn_hsc4_);
  std::swap(whlgndvelrnondrvnv_hsc4_, other->whlgndvelrnondrvnv_hsc4_);
  std::swap(whlgndvellnondrvnv_hsc4_, other->whlgndvellnondrvnv_hsc4_);
  std::swap(whlgndvellnondrvn_hsc4_, other->whlgndvellnondrvn_hsc4_);
  std::swap(whlgndvelrdrvn_hsc4_, other->whlgndvelrdrvn_hsc4_);
  std::swap(whlgndvelldrvn_hsc4_, other->whlgndvelldrvn_hsc4_);
  std::swap(whlgndvelrdrvnv_hsc4_, other->whlgndvelrdrvnv_hsc4_);
  std::swap(whlgndvelldrvnv_hsc4_, other->whlgndvelldrvnv_hsc4_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Vcustatus6_26::GetTypeName() const {
  return "atd.drivers.hsc4.Vcustatus6_26";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Vcustatus6_26

// optional int32 whlgndvelrnondrvnv_hsc4 = 1;
bool Vcustatus6_26::has_whlgndvelrnondrvnv_hsc4() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Vcustatus6_26::set_has_whlgndvelrnondrvnv_hsc4() {
  _has_bits_[0] |= 0x00000002u;
}
void Vcustatus6_26::clear_has_whlgndvelrnondrvnv_hsc4() {
  _has_bits_[0] &= ~0x00000002u;
}
void Vcustatus6_26::clear_whlgndvelrnondrvnv_hsc4() {
  whlgndvelrnondrvnv_hsc4_ = 0;
  clear_has_whlgndvelrnondrvnv_hsc4();
}
::google::protobuf::int32 Vcustatus6_26::whlgndvelrnondrvnv_hsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus6_26.whlgndvelrnondrvnv_hsc4)
  return whlgndvelrnondrvnv_hsc4_;
}
void Vcustatus6_26::set_whlgndvelrnondrvnv_hsc4(::google::protobuf::int32 value) {
  set_has_whlgndvelrnondrvnv_hsc4();
  whlgndvelrnondrvnv_hsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus6_26.whlgndvelrnondrvnv_hsc4)
}

// optional double whlgndvelrnondrvn_hsc4 = 2;
bool Vcustatus6_26::has_whlgndvelrnondrvn_hsc4() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Vcustatus6_26::set_has_whlgndvelrnondrvn_hsc4() {
  _has_bits_[0] |= 0x00000001u;
}
void Vcustatus6_26::clear_has_whlgndvelrnondrvn_hsc4() {
  _has_bits_[0] &= ~0x00000001u;
}
void Vcustatus6_26::clear_whlgndvelrnondrvn_hsc4() {
  whlgndvelrnondrvn_hsc4_ = 0;
  clear_has_whlgndvelrnondrvn_hsc4();
}
double Vcustatus6_26::whlgndvelrnondrvn_hsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus6_26.whlgndvelrnondrvn_hsc4)
  return whlgndvelrnondrvn_hsc4_;
}
void Vcustatus6_26::set_whlgndvelrnondrvn_hsc4(double value) {
  set_has_whlgndvelrnondrvn_hsc4();
  whlgndvelrnondrvn_hsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus6_26.whlgndvelrnondrvn_hsc4)
}

// optional double whlgndvellnondrvn_hsc4 = 3;
bool Vcustatus6_26::has_whlgndvellnondrvn_hsc4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Vcustatus6_26::set_has_whlgndvellnondrvn_hsc4() {
  _has_bits_[0] |= 0x00000008u;
}
void Vcustatus6_26::clear_has_whlgndvellnondrvn_hsc4() {
  _has_bits_[0] &= ~0x00000008u;
}
void Vcustatus6_26::clear_whlgndvellnondrvn_hsc4() {
  whlgndvellnondrvn_hsc4_ = 0;
  clear_has_whlgndvellnondrvn_hsc4();
}
double Vcustatus6_26::whlgndvellnondrvn_hsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus6_26.whlgndvellnondrvn_hsc4)
  return whlgndvellnondrvn_hsc4_;
}
void Vcustatus6_26::set_whlgndvellnondrvn_hsc4(double value) {
  set_has_whlgndvellnondrvn_hsc4();
  whlgndvellnondrvn_hsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus6_26.whlgndvellnondrvn_hsc4)
}

// optional int32 whlgndvellnondrvnv_hsc4 = 4;
bool Vcustatus6_26::has_whlgndvellnondrvnv_hsc4() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Vcustatus6_26::set_has_whlgndvellnondrvnv_hsc4() {
  _has_bits_[0] |= 0x00000004u;
}
void Vcustatus6_26::clear_has_whlgndvellnondrvnv_hsc4() {
  _has_bits_[0] &= ~0x00000004u;
}
void Vcustatus6_26::clear_whlgndvellnondrvnv_hsc4() {
  whlgndvellnondrvnv_hsc4_ = 0;
  clear_has_whlgndvellnondrvnv_hsc4();
}
::google::protobuf::int32 Vcustatus6_26::whlgndvellnondrvnv_hsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus6_26.whlgndvellnondrvnv_hsc4)
  return whlgndvellnondrvnv_hsc4_;
}
void Vcustatus6_26::set_whlgndvellnondrvnv_hsc4(::google::protobuf::int32 value) {
  set_has_whlgndvellnondrvnv_hsc4();
  whlgndvellnondrvnv_hsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus6_26.whlgndvellnondrvnv_hsc4)
}

// optional double whlgndvelrdrvn_hsc4 = 5;
bool Vcustatus6_26::has_whlgndvelrdrvn_hsc4() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Vcustatus6_26::set_has_whlgndvelrdrvn_hsc4() {
  _has_bits_[0] |= 0x00000010u;
}
void Vcustatus6_26::clear_has_whlgndvelrdrvn_hsc4() {
  _has_bits_[0] &= ~0x00000010u;
}
void Vcustatus6_26::clear_whlgndvelrdrvn_hsc4() {
  whlgndvelrdrvn_hsc4_ = 0;
  clear_has_whlgndvelrdrvn_hsc4();
}
double Vcustatus6_26::whlgndvelrdrvn_hsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus6_26.whlgndvelrdrvn_hsc4)
  return whlgndvelrdrvn_hsc4_;
}
void Vcustatus6_26::set_whlgndvelrdrvn_hsc4(double value) {
  set_has_whlgndvelrdrvn_hsc4();
  whlgndvelrdrvn_hsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus6_26.whlgndvelrdrvn_hsc4)
}

// optional int32 whlgndvelrdrvnv_hsc4 = 6;
bool Vcustatus6_26::has_whlgndvelrdrvnv_hsc4() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Vcustatus6_26::set_has_whlgndvelrdrvnv_hsc4() {
  _has_bits_[0] |= 0x00000040u;
}
void Vcustatus6_26::clear_has_whlgndvelrdrvnv_hsc4() {
  _has_bits_[0] &= ~0x00000040u;
}
void Vcustatus6_26::clear_whlgndvelrdrvnv_hsc4() {
  whlgndvelrdrvnv_hsc4_ = 0;
  clear_has_whlgndvelrdrvnv_hsc4();
}
::google::protobuf::int32 Vcustatus6_26::whlgndvelrdrvnv_hsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus6_26.whlgndvelrdrvnv_hsc4)
  return whlgndvelrdrvnv_hsc4_;
}
void Vcustatus6_26::set_whlgndvelrdrvnv_hsc4(::google::protobuf::int32 value) {
  set_has_whlgndvelrdrvnv_hsc4();
  whlgndvelrdrvnv_hsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus6_26.whlgndvelrdrvnv_hsc4)
}

// optional double whlgndvelldrvn_hsc4 = 7;
bool Vcustatus6_26::has_whlgndvelldrvn_hsc4() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Vcustatus6_26::set_has_whlgndvelldrvn_hsc4() {
  _has_bits_[0] |= 0x00000020u;
}
void Vcustatus6_26::clear_has_whlgndvelldrvn_hsc4() {
  _has_bits_[0] &= ~0x00000020u;
}
void Vcustatus6_26::clear_whlgndvelldrvn_hsc4() {
  whlgndvelldrvn_hsc4_ = 0;
  clear_has_whlgndvelldrvn_hsc4();
}
double Vcustatus6_26::whlgndvelldrvn_hsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus6_26.whlgndvelldrvn_hsc4)
  return whlgndvelldrvn_hsc4_;
}
void Vcustatus6_26::set_whlgndvelldrvn_hsc4(double value) {
  set_has_whlgndvelldrvn_hsc4();
  whlgndvelldrvn_hsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus6_26.whlgndvelldrvn_hsc4)
}

// optional int32 whlgndvelldrvnv_hsc4 = 8;
bool Vcustatus6_26::has_whlgndvelldrvnv_hsc4() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Vcustatus6_26::set_has_whlgndvelldrvnv_hsc4() {
  _has_bits_[0] |= 0x00000080u;
}
void Vcustatus6_26::clear_has_whlgndvelldrvnv_hsc4() {
  _has_bits_[0] &= ~0x00000080u;
}
void Vcustatus6_26::clear_whlgndvelldrvnv_hsc4() {
  whlgndvelldrvnv_hsc4_ = 0;
  clear_has_whlgndvelldrvnv_hsc4();
}
::google::protobuf::int32 Vcustatus6_26::whlgndvelldrvnv_hsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus6_26.whlgndvelldrvnv_hsc4)
  return whlgndvelldrvnv_hsc4_;
}
void Vcustatus6_26::set_whlgndvelldrvnv_hsc4(::google::protobuf::int32 value) {
  set_has_whlgndvelldrvnv_hsc4();
  whlgndvelldrvnv_hsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus6_26.whlgndvelldrvnv_hsc4)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vcustatus7_27::kAcincartemhsc4FieldNumber;
const int Vcustatus7_27::kFuellvlpcntvhsc4FieldNumber;
const int Vcustatus7_27::kFuellvlpcnthsc4FieldNumber;
const int Vcustatus7_27::kAmbtlghtlvlhsc4FieldNumber;
const int Vcustatus7_27::kOtsdairtemcrvalvHsc4FieldNumber;
const int Vcustatus7_27::kOtsdairtemcrvalHsc4FieldNumber;
const int Vcustatus7_27::kBrklghtsstahsc4FieldNumber;
const int Vcustatus7_27::kDangerouswrnnglghtstahsc4FieldNumber;
const int Vcustatus7_27::kDipdbeamlampsstahsc4FieldNumber;
const int Vcustatus7_27::kFrtfoglampstahsc4FieldNumber;
const int Vcustatus7_27::kHornstahsc4FieldNumber;
const int Vcustatus7_27::kLdircnlampsstahsc4FieldNumber;
const int Vcustatus7_27::kMainbeamlampsstahsc4FieldNumber;
const int Vcustatus7_27::kRdircnlampsstahsc4FieldNumber;
const int Vcustatus7_27::kRevsnglghtstahsc4FieldNumber;
const int Vcustatus7_27::kRrfoglampstahsc4FieldNumber;
const int Vcustatus7_27::kWidthlampandtaillightstatehsc4FieldNumber;
const int Vcustatus7_27::kWiperstahsc4FieldNumber;
const int Vcustatus7_27::kWshrstahsc4FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vcustatus7_27::Vcustatus7_27()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:atd.drivers.hsc4.Vcustatus7_27)
}
Vcustatus7_27::Vcustatus7_27(const Vcustatus7_27& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&acincartemhsc4_, &from.acincartemhsc4_,
    reinterpret_cast<char*>(&wshrstahsc4_) -
    reinterpret_cast<char*>(&acincartemhsc4_) + sizeof(wshrstahsc4_));
  // @@protoc_insertion_point(copy_constructor:atd.drivers.hsc4.Vcustatus7_27)
}

void Vcustatus7_27::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&acincartemhsc4_, 0, reinterpret_cast<char*>(&wshrstahsc4_) -
    reinterpret_cast<char*>(&acincartemhsc4_) + sizeof(wshrstahsc4_));
}

Vcustatus7_27::~Vcustatus7_27() {
  // @@protoc_insertion_point(destructor:atd.drivers.hsc4.Vcustatus7_27)
  SharedDtor();
}

void Vcustatus7_27::SharedDtor() {
}

void Vcustatus7_27::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Vcustatus7_27& Vcustatus7_27::default_instance() {
  protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  return *internal_default_instance();
}

Vcustatus7_27* Vcustatus7_27::New(::google::protobuf::Arena* arena) const {
  Vcustatus7_27* n = new Vcustatus7_27;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vcustatus7_27::Clear() {
// @@protoc_insertion_point(message_clear_start:atd.drivers.hsc4.Vcustatus7_27)
  if (_has_bits_[0 / 32] & 255u) {
    ::memset(&acincartemhsc4_, 0, reinterpret_cast<char*>(&dangerouswrnnglghtstahsc4_) -
      reinterpret_cast<char*>(&acincartemhsc4_) + sizeof(dangerouswrnnglghtstahsc4_));
  }
  if (_has_bits_[8 / 32] & 65280u) {
    ::memset(&dipdbeamlampsstahsc4_, 0, reinterpret_cast<char*>(&rrfoglampstahsc4_) -
      reinterpret_cast<char*>(&dipdbeamlampsstahsc4_) + sizeof(rrfoglampstahsc4_));
  }
  if (_has_bits_[16 / 32] & 458752u) {
    ::memset(&widthlampandtaillightstatehsc4_, 0, reinterpret_cast<char*>(&wshrstahsc4_) -
      reinterpret_cast<char*>(&widthlampandtaillightstatehsc4_) + sizeof(wshrstahsc4_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Vcustatus7_27::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:atd.drivers.hsc4.Vcustatus7_27)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double acincartemhsc4 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_acincartemhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &acincartemhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Vcustatus7_27.Fuellvlpcntvhsc4Type fuellvlpcntvhsc4 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::atd::drivers::hsc4::Vcustatus7_27_Fuellvlpcntvhsc4Type_IsValid(value)) {
            set_fuellvlpcntvhsc4(static_cast< ::atd::drivers::hsc4::Vcustatus7_27_Fuellvlpcntvhsc4Type >(value));
          } else {
            unknown_fields_stream.WriteVarint32(16u);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double fuellvlpcnthsc4 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {
          set_has_fuellvlpcnthsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &fuellvlpcnthsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ambtlghtlvlhsc4 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_ambtlghtlvlhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ambtlghtlvlhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 otsdairtemcrvalv_hsc4 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_otsdairtemcrvalv_hsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &otsdairtemcrvalv_hsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double otsdairtemcrval_hsc4 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u)) {
          set_has_otsdairtemcrval_hsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &otsdairtemcrval_hsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 brklghtsstahsc4 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_brklghtsstahsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &brklghtsstahsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 dangerouswrnnglghtstahsc4 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_dangerouswrnnglghtstahsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dangerouswrnnglghtstahsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 dipdbeamlampsstahsc4 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has_dipdbeamlampsstahsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dipdbeamlampsstahsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 frtfoglampstahsc4 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          set_has_frtfoglampstahsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &frtfoglampstahsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 hornstahsc4 = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {
          set_has_hornstahsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hornstahsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ldircnlampsstahsc4 = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {
          set_has_ldircnlampsstahsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ldircnlampsstahsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 mainbeamlampsstahsc4 = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {
          set_has_mainbeamlampsstahsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mainbeamlampsstahsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 rdircnlampsstahsc4 = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u)) {
          set_has_rdircnlampsstahsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rdircnlampsstahsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 revsnglghtstahsc4 = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u)) {
          set_has_revsnglghtstahsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &revsnglghtstahsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 rrfoglampstahsc4 = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u)) {
          set_has_rrfoglampstahsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rrfoglampstahsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 widthlampandtaillightstatehsc4 = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u)) {
          set_has_widthlampandtaillightstatehsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &widthlampandtaillightstatehsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 wiperstahsc4 = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u)) {
          set_has_wiperstahsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wiperstahsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 wshrstahsc4 = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u)) {
          set_has_wshrstahsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wshrstahsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:atd.drivers.hsc4.Vcustatus7_27)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:atd.drivers.hsc4.Vcustatus7_27)
  return false;
#undef DO_
}

void Vcustatus7_27::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:atd.drivers.hsc4.Vcustatus7_27)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double acincartemhsc4 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->acincartemhsc4(), output);
  }

  // optional .atd.drivers.hsc4.Vcustatus7_27.Fuellvlpcntvhsc4Type fuellvlpcntvhsc4 = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->fuellvlpcntvhsc4(), output);
  }

  // optional double fuellvlpcnthsc4 = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->fuellvlpcnthsc4(), output);
  }

  // optional int32 ambtlghtlvlhsc4 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->ambtlghtlvlhsc4(), output);
  }

  // optional int32 otsdairtemcrvalv_hsc4 = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->otsdairtemcrvalv_hsc4(), output);
  }

  // optional double otsdairtemcrval_hsc4 = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->otsdairtemcrval_hsc4(), output);
  }

  // optional int32 brklghtsstahsc4 = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->brklghtsstahsc4(), output);
  }

  // optional int32 dangerouswrnnglghtstahsc4 = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->dangerouswrnnglghtstahsc4(), output);
  }

  // optional int32 dipdbeamlampsstahsc4 = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->dipdbeamlampsstahsc4(), output);
  }

  // optional int32 frtfoglampstahsc4 = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->frtfoglampstahsc4(), output);
  }

  // optional int32 hornstahsc4 = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->hornstahsc4(), output);
  }

  // optional int32 ldircnlampsstahsc4 = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->ldircnlampsstahsc4(), output);
  }

  // optional int32 mainbeamlampsstahsc4 = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->mainbeamlampsstahsc4(), output);
  }

  // optional int32 rdircnlampsstahsc4 = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->rdircnlampsstahsc4(), output);
  }

  // optional int32 revsnglghtstahsc4 = 15;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->revsnglghtstahsc4(), output);
  }

  // optional int32 rrfoglampstahsc4 = 16;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->rrfoglampstahsc4(), output);
  }

  // optional int32 widthlampandtaillightstatehsc4 = 17;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->widthlampandtaillightstatehsc4(), output);
  }

  // optional int32 wiperstahsc4 = 18;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->wiperstahsc4(), output);
  }

  // optional int32 wshrstahsc4 = 19;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->wshrstahsc4(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:atd.drivers.hsc4.Vcustatus7_27)
}

size_t Vcustatus7_27::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:atd.drivers.hsc4.Vcustatus7_27)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 255u) {
    // optional double acincartemhsc4 = 1;
    if (has_acincartemhsc4()) {
      total_size += 1 + 8;
    }

    // optional double fuellvlpcnthsc4 = 3;
    if (has_fuellvlpcnthsc4()) {
      total_size += 1 + 8;
    }

    // optional .atd.drivers.hsc4.Vcustatus7_27.Fuellvlpcntvhsc4Type fuellvlpcntvhsc4 = 2;
    if (has_fuellvlpcntvhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->fuellvlpcntvhsc4());
    }

    // optional int32 ambtlghtlvlhsc4 = 4;
    if (has_ambtlghtlvlhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ambtlghtlvlhsc4());
    }

    // optional double otsdairtemcrval_hsc4 = 6;
    if (has_otsdairtemcrval_hsc4()) {
      total_size += 1 + 8;
    }

    // optional int32 otsdairtemcrvalv_hsc4 = 5;
    if (has_otsdairtemcrvalv_hsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->otsdairtemcrvalv_hsc4());
    }

    // optional int32 brklghtsstahsc4 = 7;
    if (has_brklghtsstahsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->brklghtsstahsc4());
    }

    // optional int32 dangerouswrnnglghtstahsc4 = 8;
    if (has_dangerouswrnnglghtstahsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dangerouswrnnglghtstahsc4());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional int32 dipdbeamlampsstahsc4 = 9;
    if (has_dipdbeamlampsstahsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dipdbeamlampsstahsc4());
    }

    // optional int32 frtfoglampstahsc4 = 10;
    if (has_frtfoglampstahsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->frtfoglampstahsc4());
    }

    // optional int32 hornstahsc4 = 11;
    if (has_hornstahsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hornstahsc4());
    }

    // optional int32 ldircnlampsstahsc4 = 12;
    if (has_ldircnlampsstahsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ldircnlampsstahsc4());
    }

    // optional int32 mainbeamlampsstahsc4 = 13;
    if (has_mainbeamlampsstahsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mainbeamlampsstahsc4());
    }

    // optional int32 rdircnlampsstahsc4 = 14;
    if (has_rdircnlampsstahsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rdircnlampsstahsc4());
    }

    // optional int32 revsnglghtstahsc4 = 15;
    if (has_revsnglghtstahsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->revsnglghtstahsc4());
    }

    // optional int32 rrfoglampstahsc4 = 16;
    if (has_rrfoglampstahsc4()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rrfoglampstahsc4());
    }

  }
  if (_has_bits_[16 / 32] & 458752u) {
    // optional int32 widthlampandtaillightstatehsc4 = 17;
    if (has_widthlampandtaillightstatehsc4()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->widthlampandtaillightstatehsc4());
    }

    // optional int32 wiperstahsc4 = 18;
    if (has_wiperstahsc4()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wiperstahsc4());
    }

    // optional int32 wshrstahsc4 = 19;
    if (has_wshrstahsc4()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wshrstahsc4());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Vcustatus7_27::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Vcustatus7_27*>(&from));
}

void Vcustatus7_27::MergeFrom(const Vcustatus7_27& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:atd.drivers.hsc4.Vcustatus7_27)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      acincartemhsc4_ = from.acincartemhsc4_;
    }
    if (cached_has_bits & 0x00000002u) {
      fuellvlpcnthsc4_ = from.fuellvlpcnthsc4_;
    }
    if (cached_has_bits & 0x00000004u) {
      fuellvlpcntvhsc4_ = from.fuellvlpcntvhsc4_;
    }
    if (cached_has_bits & 0x00000008u) {
      ambtlghtlvlhsc4_ = from.ambtlghtlvlhsc4_;
    }
    if (cached_has_bits & 0x00000010u) {
      otsdairtemcrval_hsc4_ = from.otsdairtemcrval_hsc4_;
    }
    if (cached_has_bits & 0x00000020u) {
      otsdairtemcrvalv_hsc4_ = from.otsdairtemcrvalv_hsc4_;
    }
    if (cached_has_bits & 0x00000040u) {
      brklghtsstahsc4_ = from.brklghtsstahsc4_;
    }
    if (cached_has_bits & 0x00000080u) {
      dangerouswrnnglghtstahsc4_ = from.dangerouswrnnglghtstahsc4_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      dipdbeamlampsstahsc4_ = from.dipdbeamlampsstahsc4_;
    }
    if (cached_has_bits & 0x00000200u) {
      frtfoglampstahsc4_ = from.frtfoglampstahsc4_;
    }
    if (cached_has_bits & 0x00000400u) {
      hornstahsc4_ = from.hornstahsc4_;
    }
    if (cached_has_bits & 0x00000800u) {
      ldircnlampsstahsc4_ = from.ldircnlampsstahsc4_;
    }
    if (cached_has_bits & 0x00001000u) {
      mainbeamlampsstahsc4_ = from.mainbeamlampsstahsc4_;
    }
    if (cached_has_bits & 0x00002000u) {
      rdircnlampsstahsc4_ = from.rdircnlampsstahsc4_;
    }
    if (cached_has_bits & 0x00004000u) {
      revsnglghtstahsc4_ = from.revsnglghtstahsc4_;
    }
    if (cached_has_bits & 0x00008000u) {
      rrfoglampstahsc4_ = from.rrfoglampstahsc4_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 458752u) {
    if (cached_has_bits & 0x00010000u) {
      widthlampandtaillightstatehsc4_ = from.widthlampandtaillightstatehsc4_;
    }
    if (cached_has_bits & 0x00020000u) {
      wiperstahsc4_ = from.wiperstahsc4_;
    }
    if (cached_has_bits & 0x00040000u) {
      wshrstahsc4_ = from.wshrstahsc4_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Vcustatus7_27::CopyFrom(const Vcustatus7_27& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:atd.drivers.hsc4.Vcustatus7_27)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vcustatus7_27::IsInitialized() const {
  return true;
}

void Vcustatus7_27::Swap(Vcustatus7_27* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vcustatus7_27::InternalSwap(Vcustatus7_27* other) {
  std::swap(acincartemhsc4_, other->acincartemhsc4_);
  std::swap(fuellvlpcnthsc4_, other->fuellvlpcnthsc4_);
  std::swap(fuellvlpcntvhsc4_, other->fuellvlpcntvhsc4_);
  std::swap(ambtlghtlvlhsc4_, other->ambtlghtlvlhsc4_);
  std::swap(otsdairtemcrval_hsc4_, other->otsdairtemcrval_hsc4_);
  std::swap(otsdairtemcrvalv_hsc4_, other->otsdairtemcrvalv_hsc4_);
  std::swap(brklghtsstahsc4_, other->brklghtsstahsc4_);
  std::swap(dangerouswrnnglghtstahsc4_, other->dangerouswrnnglghtstahsc4_);
  std::swap(dipdbeamlampsstahsc4_, other->dipdbeamlampsstahsc4_);
  std::swap(frtfoglampstahsc4_, other->frtfoglampstahsc4_);
  std::swap(hornstahsc4_, other->hornstahsc4_);
  std::swap(ldircnlampsstahsc4_, other->ldircnlampsstahsc4_);
  std::swap(mainbeamlampsstahsc4_, other->mainbeamlampsstahsc4_);
  std::swap(rdircnlampsstahsc4_, other->rdircnlampsstahsc4_);
  std::swap(revsnglghtstahsc4_, other->revsnglghtstahsc4_);
  std::swap(rrfoglampstahsc4_, other->rrfoglampstahsc4_);
  std::swap(widthlampandtaillightstatehsc4_, other->widthlampandtaillightstatehsc4_);
  std::swap(wiperstahsc4_, other->wiperstahsc4_);
  std::swap(wshrstahsc4_, other->wshrstahsc4_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Vcustatus7_27::GetTypeName() const {
  return "atd.drivers.hsc4.Vcustatus7_27";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Vcustatus7_27

// optional double acincartemhsc4 = 1;
bool Vcustatus7_27::has_acincartemhsc4() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Vcustatus7_27::set_has_acincartemhsc4() {
  _has_bits_[0] |= 0x00000001u;
}
void Vcustatus7_27::clear_has_acincartemhsc4() {
  _has_bits_[0] &= ~0x00000001u;
}
void Vcustatus7_27::clear_acincartemhsc4() {
  acincartemhsc4_ = 0;
  clear_has_acincartemhsc4();
}
double Vcustatus7_27::acincartemhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus7_27.acincartemhsc4)
  return acincartemhsc4_;
}
void Vcustatus7_27::set_acincartemhsc4(double value) {
  set_has_acincartemhsc4();
  acincartemhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus7_27.acincartemhsc4)
}

// optional .atd.drivers.hsc4.Vcustatus7_27.Fuellvlpcntvhsc4Type fuellvlpcntvhsc4 = 2;
bool Vcustatus7_27::has_fuellvlpcntvhsc4() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Vcustatus7_27::set_has_fuellvlpcntvhsc4() {
  _has_bits_[0] |= 0x00000004u;
}
void Vcustatus7_27::clear_has_fuellvlpcntvhsc4() {
  _has_bits_[0] &= ~0x00000004u;
}
void Vcustatus7_27::clear_fuellvlpcntvhsc4() {
  fuellvlpcntvhsc4_ = 0;
  clear_has_fuellvlpcntvhsc4();
}
::atd::drivers::hsc4::Vcustatus7_27_Fuellvlpcntvhsc4Type Vcustatus7_27::fuellvlpcntvhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus7_27.fuellvlpcntvhsc4)
  return static_cast< ::atd::drivers::hsc4::Vcustatus7_27_Fuellvlpcntvhsc4Type >(fuellvlpcntvhsc4_);
}
void Vcustatus7_27::set_fuellvlpcntvhsc4(::atd::drivers::hsc4::Vcustatus7_27_Fuellvlpcntvhsc4Type value) {
  assert(::atd::drivers::hsc4::Vcustatus7_27_Fuellvlpcntvhsc4Type_IsValid(value));
  set_has_fuellvlpcntvhsc4();
  fuellvlpcntvhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus7_27.fuellvlpcntvhsc4)
}

// optional double fuellvlpcnthsc4 = 3;
bool Vcustatus7_27::has_fuellvlpcnthsc4() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Vcustatus7_27::set_has_fuellvlpcnthsc4() {
  _has_bits_[0] |= 0x00000002u;
}
void Vcustatus7_27::clear_has_fuellvlpcnthsc4() {
  _has_bits_[0] &= ~0x00000002u;
}
void Vcustatus7_27::clear_fuellvlpcnthsc4() {
  fuellvlpcnthsc4_ = 0;
  clear_has_fuellvlpcnthsc4();
}
double Vcustatus7_27::fuellvlpcnthsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus7_27.fuellvlpcnthsc4)
  return fuellvlpcnthsc4_;
}
void Vcustatus7_27::set_fuellvlpcnthsc4(double value) {
  set_has_fuellvlpcnthsc4();
  fuellvlpcnthsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus7_27.fuellvlpcnthsc4)
}

// optional int32 ambtlghtlvlhsc4 = 4;
bool Vcustatus7_27::has_ambtlghtlvlhsc4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Vcustatus7_27::set_has_ambtlghtlvlhsc4() {
  _has_bits_[0] |= 0x00000008u;
}
void Vcustatus7_27::clear_has_ambtlghtlvlhsc4() {
  _has_bits_[0] &= ~0x00000008u;
}
void Vcustatus7_27::clear_ambtlghtlvlhsc4() {
  ambtlghtlvlhsc4_ = 0;
  clear_has_ambtlghtlvlhsc4();
}
::google::protobuf::int32 Vcustatus7_27::ambtlghtlvlhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus7_27.ambtlghtlvlhsc4)
  return ambtlghtlvlhsc4_;
}
void Vcustatus7_27::set_ambtlghtlvlhsc4(::google::protobuf::int32 value) {
  set_has_ambtlghtlvlhsc4();
  ambtlghtlvlhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus7_27.ambtlghtlvlhsc4)
}

// optional int32 otsdairtemcrvalv_hsc4 = 5;
bool Vcustatus7_27::has_otsdairtemcrvalv_hsc4() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Vcustatus7_27::set_has_otsdairtemcrvalv_hsc4() {
  _has_bits_[0] |= 0x00000020u;
}
void Vcustatus7_27::clear_has_otsdairtemcrvalv_hsc4() {
  _has_bits_[0] &= ~0x00000020u;
}
void Vcustatus7_27::clear_otsdairtemcrvalv_hsc4() {
  otsdairtemcrvalv_hsc4_ = 0;
  clear_has_otsdairtemcrvalv_hsc4();
}
::google::protobuf::int32 Vcustatus7_27::otsdairtemcrvalv_hsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus7_27.otsdairtemcrvalv_hsc4)
  return otsdairtemcrvalv_hsc4_;
}
void Vcustatus7_27::set_otsdairtemcrvalv_hsc4(::google::protobuf::int32 value) {
  set_has_otsdairtemcrvalv_hsc4();
  otsdairtemcrvalv_hsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus7_27.otsdairtemcrvalv_hsc4)
}

// optional double otsdairtemcrval_hsc4 = 6;
bool Vcustatus7_27::has_otsdairtemcrval_hsc4() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Vcustatus7_27::set_has_otsdairtemcrval_hsc4() {
  _has_bits_[0] |= 0x00000010u;
}
void Vcustatus7_27::clear_has_otsdairtemcrval_hsc4() {
  _has_bits_[0] &= ~0x00000010u;
}
void Vcustatus7_27::clear_otsdairtemcrval_hsc4() {
  otsdairtemcrval_hsc4_ = 0;
  clear_has_otsdairtemcrval_hsc4();
}
double Vcustatus7_27::otsdairtemcrval_hsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus7_27.otsdairtemcrval_hsc4)
  return otsdairtemcrval_hsc4_;
}
void Vcustatus7_27::set_otsdairtemcrval_hsc4(double value) {
  set_has_otsdairtemcrval_hsc4();
  otsdairtemcrval_hsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus7_27.otsdairtemcrval_hsc4)
}

// optional int32 brklghtsstahsc4 = 7;
bool Vcustatus7_27::has_brklghtsstahsc4() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Vcustatus7_27::set_has_brklghtsstahsc4() {
  _has_bits_[0] |= 0x00000040u;
}
void Vcustatus7_27::clear_has_brklghtsstahsc4() {
  _has_bits_[0] &= ~0x00000040u;
}
void Vcustatus7_27::clear_brklghtsstahsc4() {
  brklghtsstahsc4_ = 0;
  clear_has_brklghtsstahsc4();
}
::google::protobuf::int32 Vcustatus7_27::brklghtsstahsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus7_27.brklghtsstahsc4)
  return brklghtsstahsc4_;
}
void Vcustatus7_27::set_brklghtsstahsc4(::google::protobuf::int32 value) {
  set_has_brklghtsstahsc4();
  brklghtsstahsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus7_27.brklghtsstahsc4)
}

// optional int32 dangerouswrnnglghtstahsc4 = 8;
bool Vcustatus7_27::has_dangerouswrnnglghtstahsc4() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Vcustatus7_27::set_has_dangerouswrnnglghtstahsc4() {
  _has_bits_[0] |= 0x00000080u;
}
void Vcustatus7_27::clear_has_dangerouswrnnglghtstahsc4() {
  _has_bits_[0] &= ~0x00000080u;
}
void Vcustatus7_27::clear_dangerouswrnnglghtstahsc4() {
  dangerouswrnnglghtstahsc4_ = 0;
  clear_has_dangerouswrnnglghtstahsc4();
}
::google::protobuf::int32 Vcustatus7_27::dangerouswrnnglghtstahsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus7_27.dangerouswrnnglghtstahsc4)
  return dangerouswrnnglghtstahsc4_;
}
void Vcustatus7_27::set_dangerouswrnnglghtstahsc4(::google::protobuf::int32 value) {
  set_has_dangerouswrnnglghtstahsc4();
  dangerouswrnnglghtstahsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus7_27.dangerouswrnnglghtstahsc4)
}

// optional int32 dipdbeamlampsstahsc4 = 9;
bool Vcustatus7_27::has_dipdbeamlampsstahsc4() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Vcustatus7_27::set_has_dipdbeamlampsstahsc4() {
  _has_bits_[0] |= 0x00000100u;
}
void Vcustatus7_27::clear_has_dipdbeamlampsstahsc4() {
  _has_bits_[0] &= ~0x00000100u;
}
void Vcustatus7_27::clear_dipdbeamlampsstahsc4() {
  dipdbeamlampsstahsc4_ = 0;
  clear_has_dipdbeamlampsstahsc4();
}
::google::protobuf::int32 Vcustatus7_27::dipdbeamlampsstahsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus7_27.dipdbeamlampsstahsc4)
  return dipdbeamlampsstahsc4_;
}
void Vcustatus7_27::set_dipdbeamlampsstahsc4(::google::protobuf::int32 value) {
  set_has_dipdbeamlampsstahsc4();
  dipdbeamlampsstahsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus7_27.dipdbeamlampsstahsc4)
}

// optional int32 frtfoglampstahsc4 = 10;
bool Vcustatus7_27::has_frtfoglampstahsc4() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Vcustatus7_27::set_has_frtfoglampstahsc4() {
  _has_bits_[0] |= 0x00000200u;
}
void Vcustatus7_27::clear_has_frtfoglampstahsc4() {
  _has_bits_[0] &= ~0x00000200u;
}
void Vcustatus7_27::clear_frtfoglampstahsc4() {
  frtfoglampstahsc4_ = 0;
  clear_has_frtfoglampstahsc4();
}
::google::protobuf::int32 Vcustatus7_27::frtfoglampstahsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus7_27.frtfoglampstahsc4)
  return frtfoglampstahsc4_;
}
void Vcustatus7_27::set_frtfoglampstahsc4(::google::protobuf::int32 value) {
  set_has_frtfoglampstahsc4();
  frtfoglampstahsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus7_27.frtfoglampstahsc4)
}

// optional int32 hornstahsc4 = 11;
bool Vcustatus7_27::has_hornstahsc4() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void Vcustatus7_27::set_has_hornstahsc4() {
  _has_bits_[0] |= 0x00000400u;
}
void Vcustatus7_27::clear_has_hornstahsc4() {
  _has_bits_[0] &= ~0x00000400u;
}
void Vcustatus7_27::clear_hornstahsc4() {
  hornstahsc4_ = 0;
  clear_has_hornstahsc4();
}
::google::protobuf::int32 Vcustatus7_27::hornstahsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus7_27.hornstahsc4)
  return hornstahsc4_;
}
void Vcustatus7_27::set_hornstahsc4(::google::protobuf::int32 value) {
  set_has_hornstahsc4();
  hornstahsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus7_27.hornstahsc4)
}

// optional int32 ldircnlampsstahsc4 = 12;
bool Vcustatus7_27::has_ldircnlampsstahsc4() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void Vcustatus7_27::set_has_ldircnlampsstahsc4() {
  _has_bits_[0] |= 0x00000800u;
}
void Vcustatus7_27::clear_has_ldircnlampsstahsc4() {
  _has_bits_[0] &= ~0x00000800u;
}
void Vcustatus7_27::clear_ldircnlampsstahsc4() {
  ldircnlampsstahsc4_ = 0;
  clear_has_ldircnlampsstahsc4();
}
::google::protobuf::int32 Vcustatus7_27::ldircnlampsstahsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus7_27.ldircnlampsstahsc4)
  return ldircnlampsstahsc4_;
}
void Vcustatus7_27::set_ldircnlampsstahsc4(::google::protobuf::int32 value) {
  set_has_ldircnlampsstahsc4();
  ldircnlampsstahsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus7_27.ldircnlampsstahsc4)
}

// optional int32 mainbeamlampsstahsc4 = 13;
bool Vcustatus7_27::has_mainbeamlampsstahsc4() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void Vcustatus7_27::set_has_mainbeamlampsstahsc4() {
  _has_bits_[0] |= 0x00001000u;
}
void Vcustatus7_27::clear_has_mainbeamlampsstahsc4() {
  _has_bits_[0] &= ~0x00001000u;
}
void Vcustatus7_27::clear_mainbeamlampsstahsc4() {
  mainbeamlampsstahsc4_ = 0;
  clear_has_mainbeamlampsstahsc4();
}
::google::protobuf::int32 Vcustatus7_27::mainbeamlampsstahsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus7_27.mainbeamlampsstahsc4)
  return mainbeamlampsstahsc4_;
}
void Vcustatus7_27::set_mainbeamlampsstahsc4(::google::protobuf::int32 value) {
  set_has_mainbeamlampsstahsc4();
  mainbeamlampsstahsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus7_27.mainbeamlampsstahsc4)
}

// optional int32 rdircnlampsstahsc4 = 14;
bool Vcustatus7_27::has_rdircnlampsstahsc4() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void Vcustatus7_27::set_has_rdircnlampsstahsc4() {
  _has_bits_[0] |= 0x00002000u;
}
void Vcustatus7_27::clear_has_rdircnlampsstahsc4() {
  _has_bits_[0] &= ~0x00002000u;
}
void Vcustatus7_27::clear_rdircnlampsstahsc4() {
  rdircnlampsstahsc4_ = 0;
  clear_has_rdircnlampsstahsc4();
}
::google::protobuf::int32 Vcustatus7_27::rdircnlampsstahsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus7_27.rdircnlampsstahsc4)
  return rdircnlampsstahsc4_;
}
void Vcustatus7_27::set_rdircnlampsstahsc4(::google::protobuf::int32 value) {
  set_has_rdircnlampsstahsc4();
  rdircnlampsstahsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus7_27.rdircnlampsstahsc4)
}

// optional int32 revsnglghtstahsc4 = 15;
bool Vcustatus7_27::has_revsnglghtstahsc4() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void Vcustatus7_27::set_has_revsnglghtstahsc4() {
  _has_bits_[0] |= 0x00004000u;
}
void Vcustatus7_27::clear_has_revsnglghtstahsc4() {
  _has_bits_[0] &= ~0x00004000u;
}
void Vcustatus7_27::clear_revsnglghtstahsc4() {
  revsnglghtstahsc4_ = 0;
  clear_has_revsnglghtstahsc4();
}
::google::protobuf::int32 Vcustatus7_27::revsnglghtstahsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus7_27.revsnglghtstahsc4)
  return revsnglghtstahsc4_;
}
void Vcustatus7_27::set_revsnglghtstahsc4(::google::protobuf::int32 value) {
  set_has_revsnglghtstahsc4();
  revsnglghtstahsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus7_27.revsnglghtstahsc4)
}

// optional int32 rrfoglampstahsc4 = 16;
bool Vcustatus7_27::has_rrfoglampstahsc4() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void Vcustatus7_27::set_has_rrfoglampstahsc4() {
  _has_bits_[0] |= 0x00008000u;
}
void Vcustatus7_27::clear_has_rrfoglampstahsc4() {
  _has_bits_[0] &= ~0x00008000u;
}
void Vcustatus7_27::clear_rrfoglampstahsc4() {
  rrfoglampstahsc4_ = 0;
  clear_has_rrfoglampstahsc4();
}
::google::protobuf::int32 Vcustatus7_27::rrfoglampstahsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus7_27.rrfoglampstahsc4)
  return rrfoglampstahsc4_;
}
void Vcustatus7_27::set_rrfoglampstahsc4(::google::protobuf::int32 value) {
  set_has_rrfoglampstahsc4();
  rrfoglampstahsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus7_27.rrfoglampstahsc4)
}

// optional int32 widthlampandtaillightstatehsc4 = 17;
bool Vcustatus7_27::has_widthlampandtaillightstatehsc4() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void Vcustatus7_27::set_has_widthlampandtaillightstatehsc4() {
  _has_bits_[0] |= 0x00010000u;
}
void Vcustatus7_27::clear_has_widthlampandtaillightstatehsc4() {
  _has_bits_[0] &= ~0x00010000u;
}
void Vcustatus7_27::clear_widthlampandtaillightstatehsc4() {
  widthlampandtaillightstatehsc4_ = 0;
  clear_has_widthlampandtaillightstatehsc4();
}
::google::protobuf::int32 Vcustatus7_27::widthlampandtaillightstatehsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus7_27.widthlampandtaillightstatehsc4)
  return widthlampandtaillightstatehsc4_;
}
void Vcustatus7_27::set_widthlampandtaillightstatehsc4(::google::protobuf::int32 value) {
  set_has_widthlampandtaillightstatehsc4();
  widthlampandtaillightstatehsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus7_27.widthlampandtaillightstatehsc4)
}

// optional int32 wiperstahsc4 = 18;
bool Vcustatus7_27::has_wiperstahsc4() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void Vcustatus7_27::set_has_wiperstahsc4() {
  _has_bits_[0] |= 0x00020000u;
}
void Vcustatus7_27::clear_has_wiperstahsc4() {
  _has_bits_[0] &= ~0x00020000u;
}
void Vcustatus7_27::clear_wiperstahsc4() {
  wiperstahsc4_ = 0;
  clear_has_wiperstahsc4();
}
::google::protobuf::int32 Vcustatus7_27::wiperstahsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus7_27.wiperstahsc4)
  return wiperstahsc4_;
}
void Vcustatus7_27::set_wiperstahsc4(::google::protobuf::int32 value) {
  set_has_wiperstahsc4();
  wiperstahsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus7_27.wiperstahsc4)
}

// optional int32 wshrstahsc4 = 19;
bool Vcustatus7_27::has_wshrstahsc4() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void Vcustatus7_27::set_has_wshrstahsc4() {
  _has_bits_[0] |= 0x00040000u;
}
void Vcustatus7_27::clear_has_wshrstahsc4() {
  _has_bits_[0] &= ~0x00040000u;
}
void Vcustatus7_27::clear_wshrstahsc4() {
  wshrstahsc4_ = 0;
  clear_has_wshrstahsc4();
}
::google::protobuf::int32 Vcustatus7_27::wshrstahsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus7_27.wshrstahsc4)
  return wshrstahsc4_;
}
void Vcustatus7_27::set_wshrstahsc4(::google::protobuf::int32 value) {
  set_has_wshrstahsc4();
  wshrstahsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus7_27.wshrstahsc4)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Idcstatus5_15::kRoadfollowfrontaxleerrorhsc4FieldNumber;
const int Idcstatus5_15::kInsslopehsc4FieldNumber;
const int Idcstatus5_15::kTrackcoefficiantx4Vhsc4FieldNumber;
const int Idcstatus5_15::kTrackcoefficiantx4Hsc4FieldNumber;
const int Idcstatus5_15::kTrackcoefficiantx3Hsc4FieldNumber;
const int Idcstatus5_15::kTrackcoefficiantx3Vhsc4FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Idcstatus5_15::Idcstatus5_15()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:atd.drivers.hsc4.Idcstatus5_15)
}
Idcstatus5_15::Idcstatus5_15(const Idcstatus5_15& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&insslopehsc4_, &from.insslopehsc4_,
    reinterpret_cast<char*>(&trackcoefficiantx3vhsc4_) -
    reinterpret_cast<char*>(&insslopehsc4_) + sizeof(trackcoefficiantx3vhsc4_));
  // @@protoc_insertion_point(copy_constructor:atd.drivers.hsc4.Idcstatus5_15)
}

void Idcstatus5_15::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&insslopehsc4_, 0, reinterpret_cast<char*>(&trackcoefficiantx3vhsc4_) -
    reinterpret_cast<char*>(&insslopehsc4_) + sizeof(trackcoefficiantx3vhsc4_));
}

Idcstatus5_15::~Idcstatus5_15() {
  // @@protoc_insertion_point(destructor:atd.drivers.hsc4.Idcstatus5_15)
  SharedDtor();
}

void Idcstatus5_15::SharedDtor() {
}

void Idcstatus5_15::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Idcstatus5_15& Idcstatus5_15::default_instance() {
  protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  return *internal_default_instance();
}

Idcstatus5_15* Idcstatus5_15::New(::google::protobuf::Arena* arena) const {
  Idcstatus5_15* n = new Idcstatus5_15;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Idcstatus5_15::Clear() {
// @@protoc_insertion_point(message_clear_start:atd.drivers.hsc4.Idcstatus5_15)
  if (_has_bits_[0 / 32] & 63u) {
    ::memset(&insslopehsc4_, 0, reinterpret_cast<char*>(&trackcoefficiantx3vhsc4_) -
      reinterpret_cast<char*>(&insslopehsc4_) + sizeof(trackcoefficiantx3vhsc4_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Idcstatus5_15::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:atd.drivers.hsc4.Idcstatus5_15)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 roadfollowfrontaxleerrorhsc4 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_roadfollowfrontaxleerrorhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roadfollowfrontaxleerrorhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double insslopehsc4 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_insslopehsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &insslopehsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 trackcoefficiantx4vhsc4 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_trackcoefficiantx4vhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &trackcoefficiantx4vhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double trackcoefficiantx4hsc4 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u)) {
          set_has_trackcoefficiantx4hsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &trackcoefficiantx4hsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double trackcoefficiantx3hsc4 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u)) {
          set_has_trackcoefficiantx3hsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &trackcoefficiantx3hsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 trackcoefficiantx3vhsc4 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_trackcoefficiantx3vhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &trackcoefficiantx3vhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:atd.drivers.hsc4.Idcstatus5_15)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:atd.drivers.hsc4.Idcstatus5_15)
  return false;
#undef DO_
}

void Idcstatus5_15::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:atd.drivers.hsc4.Idcstatus5_15)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 roadfollowfrontaxleerrorhsc4 = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->roadfollowfrontaxleerrorhsc4(), output);
  }

  // optional double insslopehsc4 = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->insslopehsc4(), output);
  }

  // optional int32 trackcoefficiantx4vhsc4 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->trackcoefficiantx4vhsc4(), output);
  }

  // optional double trackcoefficiantx4hsc4 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->trackcoefficiantx4hsc4(), output);
  }

  // optional double trackcoefficiantx3hsc4 = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->trackcoefficiantx3hsc4(), output);
  }

  // optional int32 trackcoefficiantx3vhsc4 = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->trackcoefficiantx3vhsc4(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:atd.drivers.hsc4.Idcstatus5_15)
}

size_t Idcstatus5_15::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:atd.drivers.hsc4.Idcstatus5_15)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 63u) {
    // optional double insslopehsc4 = 2;
    if (has_insslopehsc4()) {
      total_size += 1 + 8;
    }

    // optional int32 roadfollowfrontaxleerrorhsc4 = 1;
    if (has_roadfollowfrontaxleerrorhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roadfollowfrontaxleerrorhsc4());
    }

    // optional int32 trackcoefficiantx4vhsc4 = 3;
    if (has_trackcoefficiantx4vhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->trackcoefficiantx4vhsc4());
    }

    // optional double trackcoefficiantx4hsc4 = 4;
    if (has_trackcoefficiantx4hsc4()) {
      total_size += 1 + 8;
    }

    // optional double trackcoefficiantx3hsc4 = 5;
    if (has_trackcoefficiantx3hsc4()) {
      total_size += 1 + 8;
    }

    // optional int32 trackcoefficiantx3vhsc4 = 6;
    if (has_trackcoefficiantx3vhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->trackcoefficiantx3vhsc4());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Idcstatus5_15::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Idcstatus5_15*>(&from));
}

void Idcstatus5_15::MergeFrom(const Idcstatus5_15& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:atd.drivers.hsc4.Idcstatus5_15)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      insslopehsc4_ = from.insslopehsc4_;
    }
    if (cached_has_bits & 0x00000002u) {
      roadfollowfrontaxleerrorhsc4_ = from.roadfollowfrontaxleerrorhsc4_;
    }
    if (cached_has_bits & 0x00000004u) {
      trackcoefficiantx4vhsc4_ = from.trackcoefficiantx4vhsc4_;
    }
    if (cached_has_bits & 0x00000008u) {
      trackcoefficiantx4hsc4_ = from.trackcoefficiantx4hsc4_;
    }
    if (cached_has_bits & 0x00000010u) {
      trackcoefficiantx3hsc4_ = from.trackcoefficiantx3hsc4_;
    }
    if (cached_has_bits & 0x00000020u) {
      trackcoefficiantx3vhsc4_ = from.trackcoefficiantx3vhsc4_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Idcstatus5_15::CopyFrom(const Idcstatus5_15& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:atd.drivers.hsc4.Idcstatus5_15)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Idcstatus5_15::IsInitialized() const {
  return true;
}

void Idcstatus5_15::Swap(Idcstatus5_15* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Idcstatus5_15::InternalSwap(Idcstatus5_15* other) {
  std::swap(insslopehsc4_, other->insslopehsc4_);
  std::swap(roadfollowfrontaxleerrorhsc4_, other->roadfollowfrontaxleerrorhsc4_);
  std::swap(trackcoefficiantx4vhsc4_, other->trackcoefficiantx4vhsc4_);
  std::swap(trackcoefficiantx4hsc4_, other->trackcoefficiantx4hsc4_);
  std::swap(trackcoefficiantx3hsc4_, other->trackcoefficiantx3hsc4_);
  std::swap(trackcoefficiantx3vhsc4_, other->trackcoefficiantx3vhsc4_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Idcstatus5_15::GetTypeName() const {
  return "atd.drivers.hsc4.Idcstatus5_15";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Idcstatus5_15

// optional int32 roadfollowfrontaxleerrorhsc4 = 1;
bool Idcstatus5_15::has_roadfollowfrontaxleerrorhsc4() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Idcstatus5_15::set_has_roadfollowfrontaxleerrorhsc4() {
  _has_bits_[0] |= 0x00000002u;
}
void Idcstatus5_15::clear_has_roadfollowfrontaxleerrorhsc4() {
  _has_bits_[0] &= ~0x00000002u;
}
void Idcstatus5_15::clear_roadfollowfrontaxleerrorhsc4() {
  roadfollowfrontaxleerrorhsc4_ = 0;
  clear_has_roadfollowfrontaxleerrorhsc4();
}
::google::protobuf::int32 Idcstatus5_15::roadfollowfrontaxleerrorhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus5_15.roadfollowfrontaxleerrorhsc4)
  return roadfollowfrontaxleerrorhsc4_;
}
void Idcstatus5_15::set_roadfollowfrontaxleerrorhsc4(::google::protobuf::int32 value) {
  set_has_roadfollowfrontaxleerrorhsc4();
  roadfollowfrontaxleerrorhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus5_15.roadfollowfrontaxleerrorhsc4)
}

// optional double insslopehsc4 = 2;
bool Idcstatus5_15::has_insslopehsc4() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Idcstatus5_15::set_has_insslopehsc4() {
  _has_bits_[0] |= 0x00000001u;
}
void Idcstatus5_15::clear_has_insslopehsc4() {
  _has_bits_[0] &= ~0x00000001u;
}
void Idcstatus5_15::clear_insslopehsc4() {
  insslopehsc4_ = 0;
  clear_has_insslopehsc4();
}
double Idcstatus5_15::insslopehsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus5_15.insslopehsc4)
  return insslopehsc4_;
}
void Idcstatus5_15::set_insslopehsc4(double value) {
  set_has_insslopehsc4();
  insslopehsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus5_15.insslopehsc4)
}

// optional int32 trackcoefficiantx4vhsc4 = 3;
bool Idcstatus5_15::has_trackcoefficiantx4vhsc4() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Idcstatus5_15::set_has_trackcoefficiantx4vhsc4() {
  _has_bits_[0] |= 0x00000004u;
}
void Idcstatus5_15::clear_has_trackcoefficiantx4vhsc4() {
  _has_bits_[0] &= ~0x00000004u;
}
void Idcstatus5_15::clear_trackcoefficiantx4vhsc4() {
  trackcoefficiantx4vhsc4_ = 0;
  clear_has_trackcoefficiantx4vhsc4();
}
::google::protobuf::int32 Idcstatus5_15::trackcoefficiantx4vhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus5_15.trackcoefficiantx4vhsc4)
  return trackcoefficiantx4vhsc4_;
}
void Idcstatus5_15::set_trackcoefficiantx4vhsc4(::google::protobuf::int32 value) {
  set_has_trackcoefficiantx4vhsc4();
  trackcoefficiantx4vhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus5_15.trackcoefficiantx4vhsc4)
}

// optional double trackcoefficiantx4hsc4 = 4;
bool Idcstatus5_15::has_trackcoefficiantx4hsc4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Idcstatus5_15::set_has_trackcoefficiantx4hsc4() {
  _has_bits_[0] |= 0x00000008u;
}
void Idcstatus5_15::clear_has_trackcoefficiantx4hsc4() {
  _has_bits_[0] &= ~0x00000008u;
}
void Idcstatus5_15::clear_trackcoefficiantx4hsc4() {
  trackcoefficiantx4hsc4_ = 0;
  clear_has_trackcoefficiantx4hsc4();
}
double Idcstatus5_15::trackcoefficiantx4hsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus5_15.trackcoefficiantx4hsc4)
  return trackcoefficiantx4hsc4_;
}
void Idcstatus5_15::set_trackcoefficiantx4hsc4(double value) {
  set_has_trackcoefficiantx4hsc4();
  trackcoefficiantx4hsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus5_15.trackcoefficiantx4hsc4)
}

// optional double trackcoefficiantx3hsc4 = 5;
bool Idcstatus5_15::has_trackcoefficiantx3hsc4() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Idcstatus5_15::set_has_trackcoefficiantx3hsc4() {
  _has_bits_[0] |= 0x00000010u;
}
void Idcstatus5_15::clear_has_trackcoefficiantx3hsc4() {
  _has_bits_[0] &= ~0x00000010u;
}
void Idcstatus5_15::clear_trackcoefficiantx3hsc4() {
  trackcoefficiantx3hsc4_ = 0;
  clear_has_trackcoefficiantx3hsc4();
}
double Idcstatus5_15::trackcoefficiantx3hsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus5_15.trackcoefficiantx3hsc4)
  return trackcoefficiantx3hsc4_;
}
void Idcstatus5_15::set_trackcoefficiantx3hsc4(double value) {
  set_has_trackcoefficiantx3hsc4();
  trackcoefficiantx3hsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus5_15.trackcoefficiantx3hsc4)
}

// optional int32 trackcoefficiantx3vhsc4 = 6;
bool Idcstatus5_15::has_trackcoefficiantx3vhsc4() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Idcstatus5_15::set_has_trackcoefficiantx3vhsc4() {
  _has_bits_[0] |= 0x00000020u;
}
void Idcstatus5_15::clear_has_trackcoefficiantx3vhsc4() {
  _has_bits_[0] &= ~0x00000020u;
}
void Idcstatus5_15::clear_trackcoefficiantx3vhsc4() {
  trackcoefficiantx3vhsc4_ = 0;
  clear_has_trackcoefficiantx3vhsc4();
}
::google::protobuf::int32 Idcstatus5_15::trackcoefficiantx3vhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus5_15.trackcoefficiantx3vhsc4)
  return trackcoefficiantx3vhsc4_;
}
void Idcstatus5_15::set_trackcoefficiantx3vhsc4(::google::protobuf::int32 value) {
  set_has_trackcoefficiantx3vhsc4();
  trackcoefficiantx3vhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus5_15.trackcoefficiantx3vhsc4)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vcustatus1_21::kScushifterlvrposhsc4FieldNumber;
const int Vcustatus1_21::kEpsmototpttoqhsc4FieldNumber;
const int Vcustatus1_21::kPtbrkpdldscrtinptstsvhsc4FieldNumber;
const int Vcustatus1_21::kPtbrkpdldscrtinptstshsc4FieldNumber;
const int Vcustatus1_21::kEnspdhsc4FieldNumber;
const int Vcustatus1_21::kDrivemmodestshsc4FieldNumber;
const int Vcustatus1_21::kDrivemodereqhsc4FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vcustatus1_21::Vcustatus1_21()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:atd.drivers.hsc4.Vcustatus1_21)
}
Vcustatus1_21::Vcustatus1_21(const Vcustatus1_21& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&scushifterlvrposhsc4_, &from.scushifterlvrposhsc4_,
    reinterpret_cast<char*>(&drivemodereqhsc4_) -
    reinterpret_cast<char*>(&scushifterlvrposhsc4_) + sizeof(drivemodereqhsc4_));
  // @@protoc_insertion_point(copy_constructor:atd.drivers.hsc4.Vcustatus1_21)
}

void Vcustatus1_21::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&scushifterlvrposhsc4_, 0, reinterpret_cast<char*>(&drivemodereqhsc4_) -
    reinterpret_cast<char*>(&scushifterlvrposhsc4_) + sizeof(drivemodereqhsc4_));
}

Vcustatus1_21::~Vcustatus1_21() {
  // @@protoc_insertion_point(destructor:atd.drivers.hsc4.Vcustatus1_21)
  SharedDtor();
}

void Vcustatus1_21::SharedDtor() {
}

void Vcustatus1_21::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Vcustatus1_21& Vcustatus1_21::default_instance() {
  protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  return *internal_default_instance();
}

Vcustatus1_21* Vcustatus1_21::New(::google::protobuf::Arena* arena) const {
  Vcustatus1_21* n = new Vcustatus1_21;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vcustatus1_21::Clear() {
// @@protoc_insertion_point(message_clear_start:atd.drivers.hsc4.Vcustatus1_21)
  if (_has_bits_[0 / 32] & 127u) {
    ::memset(&scushifterlvrposhsc4_, 0, reinterpret_cast<char*>(&drivemodereqhsc4_) -
      reinterpret_cast<char*>(&scushifterlvrposhsc4_) + sizeof(drivemodereqhsc4_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Vcustatus1_21::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:atd.drivers.hsc4.Vcustatus1_21)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .atd.drivers.hsc4.Vcustatus1_21.Scushifterlvrposhsc4Type scushifterlvrposhsc4 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::atd::drivers::hsc4::Vcustatus1_21_Scushifterlvrposhsc4Type_IsValid(value)) {
            set_scushifterlvrposhsc4(static_cast< ::atd::drivers::hsc4::Vcustatus1_21_Scushifterlvrposhsc4Type >(value));
          } else {
            unknown_fields_stream.WriteVarint32(8u);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Vcustatus1_21.Epsmototpttoqhsc4Type epsmototpttoqhsc4 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::atd::drivers::hsc4::Vcustatus1_21_Epsmototpttoqhsc4Type_IsValid(value)) {
            set_epsmototpttoqhsc4(static_cast< ::atd::drivers::hsc4::Vcustatus1_21_Epsmototpttoqhsc4Type >(value));
          } else {
            unknown_fields_stream.WriteVarint32(16u);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Vcustatus1_21.Ptbrkpdldscrtinptstsvhsc4Type ptbrkpdldscrtinptstsvhsc4 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::atd::drivers::hsc4::Vcustatus1_21_Ptbrkpdldscrtinptstsvhsc4Type_IsValid(value)) {
            set_ptbrkpdldscrtinptstsvhsc4(static_cast< ::atd::drivers::hsc4::Vcustatus1_21_Ptbrkpdldscrtinptstsvhsc4Type >(value));
          } else {
            unknown_fields_stream.WriteVarint32(24u);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Vcustatus1_21.Ptbrkpdldscrtinptstshsc4Type ptbrkpdldscrtinptstshsc4 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::atd::drivers::hsc4::Vcustatus1_21_Ptbrkpdldscrtinptstshsc4Type_IsValid(value)) {
            set_ptbrkpdldscrtinptstshsc4(static_cast< ::atd::drivers::hsc4::Vcustatus1_21_Ptbrkpdldscrtinptstshsc4Type >(value));
          } else {
            unknown_fields_stream.WriteVarint32(32u);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double enspdhsc4 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u)) {
          set_has_enspdhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &enspdhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Vcustatus1_21.Drivemmodestshsc4Type drivemmodestshsc4 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::atd::drivers::hsc4::Vcustatus1_21_Drivemmodestshsc4Type_IsValid(value)) {
            set_drivemmodestshsc4(static_cast< ::atd::drivers::hsc4::Vcustatus1_21_Drivemmodestshsc4Type >(value));
          } else {
            unknown_fields_stream.WriteVarint32(48u);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Vcustatus1_21.Drivemodereqhsc4Type drivemodereqhsc4 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::atd::drivers::hsc4::Vcustatus1_21_Drivemodereqhsc4Type_IsValid(value)) {
            set_drivemodereqhsc4(static_cast< ::atd::drivers::hsc4::Vcustatus1_21_Drivemodereqhsc4Type >(value));
          } else {
            unknown_fields_stream.WriteVarint32(56u);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:atd.drivers.hsc4.Vcustatus1_21)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:atd.drivers.hsc4.Vcustatus1_21)
  return false;
#undef DO_
}

void Vcustatus1_21::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:atd.drivers.hsc4.Vcustatus1_21)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .atd.drivers.hsc4.Vcustatus1_21.Scushifterlvrposhsc4Type scushifterlvrposhsc4 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->scushifterlvrposhsc4(), output);
  }

  // optional .atd.drivers.hsc4.Vcustatus1_21.Epsmototpttoqhsc4Type epsmototpttoqhsc4 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->epsmototpttoqhsc4(), output);
  }

  // optional .atd.drivers.hsc4.Vcustatus1_21.Ptbrkpdldscrtinptstsvhsc4Type ptbrkpdldscrtinptstsvhsc4 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->ptbrkpdldscrtinptstsvhsc4(), output);
  }

  // optional .atd.drivers.hsc4.Vcustatus1_21.Ptbrkpdldscrtinptstshsc4Type ptbrkpdldscrtinptstshsc4 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->ptbrkpdldscrtinptstshsc4(), output);
  }

  // optional double enspdhsc4 = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->enspdhsc4(), output);
  }

  // optional .atd.drivers.hsc4.Vcustatus1_21.Drivemmodestshsc4Type drivemmodestshsc4 = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->drivemmodestshsc4(), output);
  }

  // optional .atd.drivers.hsc4.Vcustatus1_21.Drivemodereqhsc4Type drivemodereqhsc4 = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->drivemodereqhsc4(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:atd.drivers.hsc4.Vcustatus1_21)
}

size_t Vcustatus1_21::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:atd.drivers.hsc4.Vcustatus1_21)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 127u) {
    // optional .atd.drivers.hsc4.Vcustatus1_21.Scushifterlvrposhsc4Type scushifterlvrposhsc4 = 1;
    if (has_scushifterlvrposhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->scushifterlvrposhsc4());
    }

    // optional .atd.drivers.hsc4.Vcustatus1_21.Epsmototpttoqhsc4Type epsmototpttoqhsc4 = 2;
    if (has_epsmototpttoqhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->epsmototpttoqhsc4());
    }

    // optional .atd.drivers.hsc4.Vcustatus1_21.Ptbrkpdldscrtinptstsvhsc4Type ptbrkpdldscrtinptstsvhsc4 = 3;
    if (has_ptbrkpdldscrtinptstsvhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->ptbrkpdldscrtinptstsvhsc4());
    }

    // optional .atd.drivers.hsc4.Vcustatus1_21.Ptbrkpdldscrtinptstshsc4Type ptbrkpdldscrtinptstshsc4 = 4;
    if (has_ptbrkpdldscrtinptstshsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->ptbrkpdldscrtinptstshsc4());
    }

    // optional double enspdhsc4 = 5;
    if (has_enspdhsc4()) {
      total_size += 1 + 8;
    }

    // optional .atd.drivers.hsc4.Vcustatus1_21.Drivemmodestshsc4Type drivemmodestshsc4 = 6;
    if (has_drivemmodestshsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->drivemmodestshsc4());
    }

    // optional .atd.drivers.hsc4.Vcustatus1_21.Drivemodereqhsc4Type drivemodereqhsc4 = 7;
    if (has_drivemodereqhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->drivemodereqhsc4());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Vcustatus1_21::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Vcustatus1_21*>(&from));
}

void Vcustatus1_21::MergeFrom(const Vcustatus1_21& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:atd.drivers.hsc4.Vcustatus1_21)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      scushifterlvrposhsc4_ = from.scushifterlvrposhsc4_;
    }
    if (cached_has_bits & 0x00000002u) {
      epsmototpttoqhsc4_ = from.epsmototpttoqhsc4_;
    }
    if (cached_has_bits & 0x00000004u) {
      ptbrkpdldscrtinptstsvhsc4_ = from.ptbrkpdldscrtinptstsvhsc4_;
    }
    if (cached_has_bits & 0x00000008u) {
      ptbrkpdldscrtinptstshsc4_ = from.ptbrkpdldscrtinptstshsc4_;
    }
    if (cached_has_bits & 0x00000010u) {
      enspdhsc4_ = from.enspdhsc4_;
    }
    if (cached_has_bits & 0x00000020u) {
      drivemmodestshsc4_ = from.drivemmodestshsc4_;
    }
    if (cached_has_bits & 0x00000040u) {
      drivemodereqhsc4_ = from.drivemodereqhsc4_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Vcustatus1_21::CopyFrom(const Vcustatus1_21& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:atd.drivers.hsc4.Vcustatus1_21)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vcustatus1_21::IsInitialized() const {
  return true;
}

void Vcustatus1_21::Swap(Vcustatus1_21* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vcustatus1_21::InternalSwap(Vcustatus1_21* other) {
  std::swap(scushifterlvrposhsc4_, other->scushifterlvrposhsc4_);
  std::swap(epsmototpttoqhsc4_, other->epsmototpttoqhsc4_);
  std::swap(ptbrkpdldscrtinptstsvhsc4_, other->ptbrkpdldscrtinptstsvhsc4_);
  std::swap(ptbrkpdldscrtinptstshsc4_, other->ptbrkpdldscrtinptstshsc4_);
  std::swap(enspdhsc4_, other->enspdhsc4_);
  std::swap(drivemmodestshsc4_, other->drivemmodestshsc4_);
  std::swap(drivemodereqhsc4_, other->drivemodereqhsc4_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Vcustatus1_21::GetTypeName() const {
  return "atd.drivers.hsc4.Vcustatus1_21";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Vcustatus1_21

// optional .atd.drivers.hsc4.Vcustatus1_21.Scushifterlvrposhsc4Type scushifterlvrposhsc4 = 1;
bool Vcustatus1_21::has_scushifterlvrposhsc4() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Vcustatus1_21::set_has_scushifterlvrposhsc4() {
  _has_bits_[0] |= 0x00000001u;
}
void Vcustatus1_21::clear_has_scushifterlvrposhsc4() {
  _has_bits_[0] &= ~0x00000001u;
}
void Vcustatus1_21::clear_scushifterlvrposhsc4() {
  scushifterlvrposhsc4_ = 0;
  clear_has_scushifterlvrposhsc4();
}
::atd::drivers::hsc4::Vcustatus1_21_Scushifterlvrposhsc4Type Vcustatus1_21::scushifterlvrposhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus1_21.scushifterlvrposhsc4)
  return static_cast< ::atd::drivers::hsc4::Vcustatus1_21_Scushifterlvrposhsc4Type >(scushifterlvrposhsc4_);
}
void Vcustatus1_21::set_scushifterlvrposhsc4(::atd::drivers::hsc4::Vcustatus1_21_Scushifterlvrposhsc4Type value) {
  assert(::atd::drivers::hsc4::Vcustatus1_21_Scushifterlvrposhsc4Type_IsValid(value));
  set_has_scushifterlvrposhsc4();
  scushifterlvrposhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus1_21.scushifterlvrposhsc4)
}

// optional .atd.drivers.hsc4.Vcustatus1_21.Epsmototpttoqhsc4Type epsmototpttoqhsc4 = 2;
bool Vcustatus1_21::has_epsmototpttoqhsc4() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Vcustatus1_21::set_has_epsmototpttoqhsc4() {
  _has_bits_[0] |= 0x00000002u;
}
void Vcustatus1_21::clear_has_epsmototpttoqhsc4() {
  _has_bits_[0] &= ~0x00000002u;
}
void Vcustatus1_21::clear_epsmototpttoqhsc4() {
  epsmototpttoqhsc4_ = 0;
  clear_has_epsmototpttoqhsc4();
}
::atd::drivers::hsc4::Vcustatus1_21_Epsmototpttoqhsc4Type Vcustatus1_21::epsmototpttoqhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus1_21.epsmototpttoqhsc4)
  return static_cast< ::atd::drivers::hsc4::Vcustatus1_21_Epsmototpttoqhsc4Type >(epsmototpttoqhsc4_);
}
void Vcustatus1_21::set_epsmototpttoqhsc4(::atd::drivers::hsc4::Vcustatus1_21_Epsmototpttoqhsc4Type value) {
  assert(::atd::drivers::hsc4::Vcustatus1_21_Epsmototpttoqhsc4Type_IsValid(value));
  set_has_epsmototpttoqhsc4();
  epsmototpttoqhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus1_21.epsmototpttoqhsc4)
}

// optional .atd.drivers.hsc4.Vcustatus1_21.Ptbrkpdldscrtinptstsvhsc4Type ptbrkpdldscrtinptstsvhsc4 = 3;
bool Vcustatus1_21::has_ptbrkpdldscrtinptstsvhsc4() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Vcustatus1_21::set_has_ptbrkpdldscrtinptstsvhsc4() {
  _has_bits_[0] |= 0x00000004u;
}
void Vcustatus1_21::clear_has_ptbrkpdldscrtinptstsvhsc4() {
  _has_bits_[0] &= ~0x00000004u;
}
void Vcustatus1_21::clear_ptbrkpdldscrtinptstsvhsc4() {
  ptbrkpdldscrtinptstsvhsc4_ = 0;
  clear_has_ptbrkpdldscrtinptstsvhsc4();
}
::atd::drivers::hsc4::Vcustatus1_21_Ptbrkpdldscrtinptstsvhsc4Type Vcustatus1_21::ptbrkpdldscrtinptstsvhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus1_21.ptbrkpdldscrtinptstsvhsc4)
  return static_cast< ::atd::drivers::hsc4::Vcustatus1_21_Ptbrkpdldscrtinptstsvhsc4Type >(ptbrkpdldscrtinptstsvhsc4_);
}
void Vcustatus1_21::set_ptbrkpdldscrtinptstsvhsc4(::atd::drivers::hsc4::Vcustatus1_21_Ptbrkpdldscrtinptstsvhsc4Type value) {
  assert(::atd::drivers::hsc4::Vcustatus1_21_Ptbrkpdldscrtinptstsvhsc4Type_IsValid(value));
  set_has_ptbrkpdldscrtinptstsvhsc4();
  ptbrkpdldscrtinptstsvhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus1_21.ptbrkpdldscrtinptstsvhsc4)
}

// optional .atd.drivers.hsc4.Vcustatus1_21.Ptbrkpdldscrtinptstshsc4Type ptbrkpdldscrtinptstshsc4 = 4;
bool Vcustatus1_21::has_ptbrkpdldscrtinptstshsc4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Vcustatus1_21::set_has_ptbrkpdldscrtinptstshsc4() {
  _has_bits_[0] |= 0x00000008u;
}
void Vcustatus1_21::clear_has_ptbrkpdldscrtinptstshsc4() {
  _has_bits_[0] &= ~0x00000008u;
}
void Vcustatus1_21::clear_ptbrkpdldscrtinptstshsc4() {
  ptbrkpdldscrtinptstshsc4_ = 0;
  clear_has_ptbrkpdldscrtinptstshsc4();
}
::atd::drivers::hsc4::Vcustatus1_21_Ptbrkpdldscrtinptstshsc4Type Vcustatus1_21::ptbrkpdldscrtinptstshsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus1_21.ptbrkpdldscrtinptstshsc4)
  return static_cast< ::atd::drivers::hsc4::Vcustatus1_21_Ptbrkpdldscrtinptstshsc4Type >(ptbrkpdldscrtinptstshsc4_);
}
void Vcustatus1_21::set_ptbrkpdldscrtinptstshsc4(::atd::drivers::hsc4::Vcustatus1_21_Ptbrkpdldscrtinptstshsc4Type value) {
  assert(::atd::drivers::hsc4::Vcustatus1_21_Ptbrkpdldscrtinptstshsc4Type_IsValid(value));
  set_has_ptbrkpdldscrtinptstshsc4();
  ptbrkpdldscrtinptstshsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus1_21.ptbrkpdldscrtinptstshsc4)
}

// optional double enspdhsc4 = 5;
bool Vcustatus1_21::has_enspdhsc4() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Vcustatus1_21::set_has_enspdhsc4() {
  _has_bits_[0] |= 0x00000010u;
}
void Vcustatus1_21::clear_has_enspdhsc4() {
  _has_bits_[0] &= ~0x00000010u;
}
void Vcustatus1_21::clear_enspdhsc4() {
  enspdhsc4_ = 0;
  clear_has_enspdhsc4();
}
double Vcustatus1_21::enspdhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus1_21.enspdhsc4)
  return enspdhsc4_;
}
void Vcustatus1_21::set_enspdhsc4(double value) {
  set_has_enspdhsc4();
  enspdhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus1_21.enspdhsc4)
}

// optional .atd.drivers.hsc4.Vcustatus1_21.Drivemmodestshsc4Type drivemmodestshsc4 = 6;
bool Vcustatus1_21::has_drivemmodestshsc4() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Vcustatus1_21::set_has_drivemmodestshsc4() {
  _has_bits_[0] |= 0x00000020u;
}
void Vcustatus1_21::clear_has_drivemmodestshsc4() {
  _has_bits_[0] &= ~0x00000020u;
}
void Vcustatus1_21::clear_drivemmodestshsc4() {
  drivemmodestshsc4_ = 0;
  clear_has_drivemmodestshsc4();
}
::atd::drivers::hsc4::Vcustatus1_21_Drivemmodestshsc4Type Vcustatus1_21::drivemmodestshsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus1_21.drivemmodestshsc4)
  return static_cast< ::atd::drivers::hsc4::Vcustatus1_21_Drivemmodestshsc4Type >(drivemmodestshsc4_);
}
void Vcustatus1_21::set_drivemmodestshsc4(::atd::drivers::hsc4::Vcustatus1_21_Drivemmodestshsc4Type value) {
  assert(::atd::drivers::hsc4::Vcustatus1_21_Drivemmodestshsc4Type_IsValid(value));
  set_has_drivemmodestshsc4();
  drivemmodestshsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus1_21.drivemmodestshsc4)
}

// optional .atd.drivers.hsc4.Vcustatus1_21.Drivemodereqhsc4Type drivemodereqhsc4 = 7;
bool Vcustatus1_21::has_drivemodereqhsc4() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Vcustatus1_21::set_has_drivemodereqhsc4() {
  _has_bits_[0] |= 0x00000040u;
}
void Vcustatus1_21::clear_has_drivemodereqhsc4() {
  _has_bits_[0] &= ~0x00000040u;
}
void Vcustatus1_21::clear_drivemodereqhsc4() {
  drivemodereqhsc4_ = 0;
  clear_has_drivemodereqhsc4();
}
::atd::drivers::hsc4::Vcustatus1_21_Drivemodereqhsc4Type Vcustatus1_21::drivemodereqhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus1_21.drivemodereqhsc4)
  return static_cast< ::atd::drivers::hsc4::Vcustatus1_21_Drivemodereqhsc4Type >(drivemodereqhsc4_);
}
void Vcustatus1_21::set_drivemodereqhsc4(::atd::drivers::hsc4::Vcustatus1_21_Drivemodereqhsc4Type value) {
  assert(::atd::drivers::hsc4::Vcustatus1_21_Drivemodereqhsc4Type_IsValid(value));
  set_has_drivemodereqhsc4();
  drivemodereqhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus1_21.drivemodereqhsc4)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vcustatus2_22::kStrgwhlanghsc4FieldNumber;
const int Vcustatus2_22::kStrgwhlangalvrchsc4FieldNumber;
const int Vcustatus2_22::kStrgwhlangextdpvhsc4FieldNumber;
const int Vcustatus2_22::kStrgwhlanggrdhsc4FieldNumber;
const int Vcustatus2_22::kStrgwhlangsnsrcalstshsc4FieldNumber;
const int Vcustatus2_22::kStrgwhlangsnsrchksmhsc4FieldNumber;
const int Vcustatus2_22::kStrgwhlangsnsrflthsc4FieldNumber;
const int Vcustatus2_22::kStrgwhlangsnsrinidhsc4FieldNumber;
const int Vcustatus2_22::kStrgwhlangsnsrmultcapbhsc4FieldNumber;
const int Vcustatus2_22::kStrgwhlangvhsc4FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vcustatus2_22::Vcustatus2_22()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:atd.drivers.hsc4.Vcustatus2_22)
}
Vcustatus2_22::Vcustatus2_22(const Vcustatus2_22& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&strgwhlanghsc4_, &from.strgwhlanghsc4_,
    reinterpret_cast<char*>(&strgwhlangvhsc4_) -
    reinterpret_cast<char*>(&strgwhlanghsc4_) + sizeof(strgwhlangvhsc4_));
  // @@protoc_insertion_point(copy_constructor:atd.drivers.hsc4.Vcustatus2_22)
}

void Vcustatus2_22::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&strgwhlanghsc4_, 0, reinterpret_cast<char*>(&strgwhlangvhsc4_) -
    reinterpret_cast<char*>(&strgwhlanghsc4_) + sizeof(strgwhlangvhsc4_));
}

Vcustatus2_22::~Vcustatus2_22() {
  // @@protoc_insertion_point(destructor:atd.drivers.hsc4.Vcustatus2_22)
  SharedDtor();
}

void Vcustatus2_22::SharedDtor() {
}

void Vcustatus2_22::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Vcustatus2_22& Vcustatus2_22::default_instance() {
  protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  return *internal_default_instance();
}

Vcustatus2_22* Vcustatus2_22::New(::google::protobuf::Arena* arena) const {
  Vcustatus2_22* n = new Vcustatus2_22;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vcustatus2_22::Clear() {
// @@protoc_insertion_point(message_clear_start:atd.drivers.hsc4.Vcustatus2_22)
  if (_has_bits_[0 / 32] & 255u) {
    ::memset(&strgwhlanghsc4_, 0, reinterpret_cast<char*>(&strgwhlangsnsrinidhsc4_) -
      reinterpret_cast<char*>(&strgwhlanghsc4_) + sizeof(strgwhlangsnsrinidhsc4_));
  }
  if (_has_bits_[8 / 32] & 768u) {
    ::memset(&strgwhlangsnsrmultcapbhsc4_, 0, reinterpret_cast<char*>(&strgwhlangvhsc4_) -
      reinterpret_cast<char*>(&strgwhlangsnsrmultcapbhsc4_) + sizeof(strgwhlangvhsc4_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Vcustatus2_22::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:atd.drivers.hsc4.Vcustatus2_22)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .atd.drivers.hsc4.Vcustatus2_22.Strgwhlanghsc4Type strgwhlanghsc4 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::atd::drivers::hsc4::Vcustatus2_22_Strgwhlanghsc4Type_IsValid(value)) {
            set_strgwhlanghsc4(static_cast< ::atd::drivers::hsc4::Vcustatus2_22_Strgwhlanghsc4Type >(value));
          } else {
            unknown_fields_stream.WriteVarint32(8u);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Vcustatus2_22.Strgwhlangalvrchsc4Type strgwhlangalvrchsc4 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangalvrchsc4Type_IsValid(value)) {
            set_strgwhlangalvrchsc4(static_cast< ::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangalvrchsc4Type >(value));
          } else {
            unknown_fields_stream.WriteVarint32(16u);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Vcustatus2_22.Strgwhlangextdpvhsc4Type strgwhlangextdpvhsc4 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangextdpvhsc4Type_IsValid(value)) {
            set_strgwhlangextdpvhsc4(static_cast< ::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangextdpvhsc4Type >(value));
          } else {
            unknown_fields_stream.WriteVarint32(24u);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Vcustatus2_22.Strgwhlanggrdhsc4Type strgwhlanggrdhsc4 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::atd::drivers::hsc4::Vcustatus2_22_Strgwhlanggrdhsc4Type_IsValid(value)) {
            set_strgwhlanggrdhsc4(static_cast< ::atd::drivers::hsc4::Vcustatus2_22_Strgwhlanggrdhsc4Type >(value));
          } else {
            unknown_fields_stream.WriteVarint32(32u);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Vcustatus2_22.Strgwhlangsnsrcalstshsc4Type strgwhlangsnsrcalstshsc4 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangsnsrcalstshsc4Type_IsValid(value)) {
            set_strgwhlangsnsrcalstshsc4(static_cast< ::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangsnsrcalstshsc4Type >(value));
          } else {
            unknown_fields_stream.WriteVarint32(40u);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Vcustatus2_22.Strgwhlangsnsrchksmhsc4Type strgwhlangsnsrchksmhsc4 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangsnsrchksmhsc4Type_IsValid(value)) {
            set_strgwhlangsnsrchksmhsc4(static_cast< ::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangsnsrchksmhsc4Type >(value));
          } else {
            unknown_fields_stream.WriteVarint32(48u);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Vcustatus2_22.Strgwhlangsnsrflthsc4Type strgwhlangsnsrflthsc4 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangsnsrflthsc4Type_IsValid(value)) {
            set_strgwhlangsnsrflthsc4(static_cast< ::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangsnsrflthsc4Type >(value));
          } else {
            unknown_fields_stream.WriteVarint32(56u);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Vcustatus2_22.Strgwhlangsnsrinidhsc4Type strgwhlangsnsrinidhsc4 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangsnsrinidhsc4Type_IsValid(value)) {
            set_strgwhlangsnsrinidhsc4(static_cast< ::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangsnsrinidhsc4Type >(value));
          } else {
            unknown_fields_stream.WriteVarint32(64u);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Vcustatus2_22.Strgwhlangsnsrmultcapbhsc4Type strgwhlangsnsrmultcapbhsc4 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangsnsrmultcapbhsc4Type_IsValid(value)) {
            set_strgwhlangsnsrmultcapbhsc4(static_cast< ::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangsnsrmultcapbhsc4Type >(value));
          } else {
            unknown_fields_stream.WriteVarint32(72u);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Vcustatus2_22.Strgwhlangvhsc4Type strgwhlangvhsc4 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangvhsc4Type_IsValid(value)) {
            set_strgwhlangvhsc4(static_cast< ::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangvhsc4Type >(value));
          } else {
            unknown_fields_stream.WriteVarint32(80u);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:atd.drivers.hsc4.Vcustatus2_22)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:atd.drivers.hsc4.Vcustatus2_22)
  return false;
#undef DO_
}

void Vcustatus2_22::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:atd.drivers.hsc4.Vcustatus2_22)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .atd.drivers.hsc4.Vcustatus2_22.Strgwhlanghsc4Type strgwhlanghsc4 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->strgwhlanghsc4(), output);
  }

  // optional .atd.drivers.hsc4.Vcustatus2_22.Strgwhlangalvrchsc4Type strgwhlangalvrchsc4 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->strgwhlangalvrchsc4(), output);
  }

  // optional .atd.drivers.hsc4.Vcustatus2_22.Strgwhlangextdpvhsc4Type strgwhlangextdpvhsc4 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->strgwhlangextdpvhsc4(), output);
  }

  // optional .atd.drivers.hsc4.Vcustatus2_22.Strgwhlanggrdhsc4Type strgwhlanggrdhsc4 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->strgwhlanggrdhsc4(), output);
  }

  // optional .atd.drivers.hsc4.Vcustatus2_22.Strgwhlangsnsrcalstshsc4Type strgwhlangsnsrcalstshsc4 = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->strgwhlangsnsrcalstshsc4(), output);
  }

  // optional .atd.drivers.hsc4.Vcustatus2_22.Strgwhlangsnsrchksmhsc4Type strgwhlangsnsrchksmhsc4 = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->strgwhlangsnsrchksmhsc4(), output);
  }

  // optional .atd.drivers.hsc4.Vcustatus2_22.Strgwhlangsnsrflthsc4Type strgwhlangsnsrflthsc4 = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->strgwhlangsnsrflthsc4(), output);
  }

  // optional .atd.drivers.hsc4.Vcustatus2_22.Strgwhlangsnsrinidhsc4Type strgwhlangsnsrinidhsc4 = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->strgwhlangsnsrinidhsc4(), output);
  }

  // optional .atd.drivers.hsc4.Vcustatus2_22.Strgwhlangsnsrmultcapbhsc4Type strgwhlangsnsrmultcapbhsc4 = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->strgwhlangsnsrmultcapbhsc4(), output);
  }

  // optional .atd.drivers.hsc4.Vcustatus2_22.Strgwhlangvhsc4Type strgwhlangvhsc4 = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->strgwhlangvhsc4(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:atd.drivers.hsc4.Vcustatus2_22)
}

size_t Vcustatus2_22::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:atd.drivers.hsc4.Vcustatus2_22)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 255u) {
    // optional .atd.drivers.hsc4.Vcustatus2_22.Strgwhlanghsc4Type strgwhlanghsc4 = 1;
    if (has_strgwhlanghsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->strgwhlanghsc4());
    }

    // optional .atd.drivers.hsc4.Vcustatus2_22.Strgwhlangalvrchsc4Type strgwhlangalvrchsc4 = 2;
    if (has_strgwhlangalvrchsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->strgwhlangalvrchsc4());
    }

    // optional .atd.drivers.hsc4.Vcustatus2_22.Strgwhlangextdpvhsc4Type strgwhlangextdpvhsc4 = 3;
    if (has_strgwhlangextdpvhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->strgwhlangextdpvhsc4());
    }

    // optional .atd.drivers.hsc4.Vcustatus2_22.Strgwhlanggrdhsc4Type strgwhlanggrdhsc4 = 4;
    if (has_strgwhlanggrdhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->strgwhlanggrdhsc4());
    }

    // optional .atd.drivers.hsc4.Vcustatus2_22.Strgwhlangsnsrcalstshsc4Type strgwhlangsnsrcalstshsc4 = 5;
    if (has_strgwhlangsnsrcalstshsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->strgwhlangsnsrcalstshsc4());
    }

    // optional .atd.drivers.hsc4.Vcustatus2_22.Strgwhlangsnsrchksmhsc4Type strgwhlangsnsrchksmhsc4 = 6;
    if (has_strgwhlangsnsrchksmhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->strgwhlangsnsrchksmhsc4());
    }

    // optional .atd.drivers.hsc4.Vcustatus2_22.Strgwhlangsnsrflthsc4Type strgwhlangsnsrflthsc4 = 7;
    if (has_strgwhlangsnsrflthsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->strgwhlangsnsrflthsc4());
    }

    // optional .atd.drivers.hsc4.Vcustatus2_22.Strgwhlangsnsrinidhsc4Type strgwhlangsnsrinidhsc4 = 8;
    if (has_strgwhlangsnsrinidhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->strgwhlangsnsrinidhsc4());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional .atd.drivers.hsc4.Vcustatus2_22.Strgwhlangsnsrmultcapbhsc4Type strgwhlangsnsrmultcapbhsc4 = 9;
    if (has_strgwhlangsnsrmultcapbhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->strgwhlangsnsrmultcapbhsc4());
    }

    // optional .atd.drivers.hsc4.Vcustatus2_22.Strgwhlangvhsc4Type strgwhlangvhsc4 = 10;
    if (has_strgwhlangvhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->strgwhlangvhsc4());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Vcustatus2_22::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Vcustatus2_22*>(&from));
}

void Vcustatus2_22::MergeFrom(const Vcustatus2_22& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:atd.drivers.hsc4.Vcustatus2_22)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      strgwhlanghsc4_ = from.strgwhlanghsc4_;
    }
    if (cached_has_bits & 0x00000002u) {
      strgwhlangalvrchsc4_ = from.strgwhlangalvrchsc4_;
    }
    if (cached_has_bits & 0x00000004u) {
      strgwhlangextdpvhsc4_ = from.strgwhlangextdpvhsc4_;
    }
    if (cached_has_bits & 0x00000008u) {
      strgwhlanggrdhsc4_ = from.strgwhlanggrdhsc4_;
    }
    if (cached_has_bits & 0x00000010u) {
      strgwhlangsnsrcalstshsc4_ = from.strgwhlangsnsrcalstshsc4_;
    }
    if (cached_has_bits & 0x00000020u) {
      strgwhlangsnsrchksmhsc4_ = from.strgwhlangsnsrchksmhsc4_;
    }
    if (cached_has_bits & 0x00000040u) {
      strgwhlangsnsrflthsc4_ = from.strgwhlangsnsrflthsc4_;
    }
    if (cached_has_bits & 0x00000080u) {
      strgwhlangsnsrinidhsc4_ = from.strgwhlangsnsrinidhsc4_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      strgwhlangsnsrmultcapbhsc4_ = from.strgwhlangsnsrmultcapbhsc4_;
    }
    if (cached_has_bits & 0x00000200u) {
      strgwhlangvhsc4_ = from.strgwhlangvhsc4_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Vcustatus2_22::CopyFrom(const Vcustatus2_22& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:atd.drivers.hsc4.Vcustatus2_22)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vcustatus2_22::IsInitialized() const {
  return true;
}

void Vcustatus2_22::Swap(Vcustatus2_22* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vcustatus2_22::InternalSwap(Vcustatus2_22* other) {
  std::swap(strgwhlanghsc4_, other->strgwhlanghsc4_);
  std::swap(strgwhlangalvrchsc4_, other->strgwhlangalvrchsc4_);
  std::swap(strgwhlangextdpvhsc4_, other->strgwhlangextdpvhsc4_);
  std::swap(strgwhlanggrdhsc4_, other->strgwhlanggrdhsc4_);
  std::swap(strgwhlangsnsrcalstshsc4_, other->strgwhlangsnsrcalstshsc4_);
  std::swap(strgwhlangsnsrchksmhsc4_, other->strgwhlangsnsrchksmhsc4_);
  std::swap(strgwhlangsnsrflthsc4_, other->strgwhlangsnsrflthsc4_);
  std::swap(strgwhlangsnsrinidhsc4_, other->strgwhlangsnsrinidhsc4_);
  std::swap(strgwhlangsnsrmultcapbhsc4_, other->strgwhlangsnsrmultcapbhsc4_);
  std::swap(strgwhlangvhsc4_, other->strgwhlangvhsc4_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Vcustatus2_22::GetTypeName() const {
  return "atd.drivers.hsc4.Vcustatus2_22";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Vcustatus2_22

// optional .atd.drivers.hsc4.Vcustatus2_22.Strgwhlanghsc4Type strgwhlanghsc4 = 1;
bool Vcustatus2_22::has_strgwhlanghsc4() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Vcustatus2_22::set_has_strgwhlanghsc4() {
  _has_bits_[0] |= 0x00000001u;
}
void Vcustatus2_22::clear_has_strgwhlanghsc4() {
  _has_bits_[0] &= ~0x00000001u;
}
void Vcustatus2_22::clear_strgwhlanghsc4() {
  strgwhlanghsc4_ = 0;
  clear_has_strgwhlanghsc4();
}
::atd::drivers::hsc4::Vcustatus2_22_Strgwhlanghsc4Type Vcustatus2_22::strgwhlanghsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus2_22.strgwhlanghsc4)
  return static_cast< ::atd::drivers::hsc4::Vcustatus2_22_Strgwhlanghsc4Type >(strgwhlanghsc4_);
}
void Vcustatus2_22::set_strgwhlanghsc4(::atd::drivers::hsc4::Vcustatus2_22_Strgwhlanghsc4Type value) {
  assert(::atd::drivers::hsc4::Vcustatus2_22_Strgwhlanghsc4Type_IsValid(value));
  set_has_strgwhlanghsc4();
  strgwhlanghsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus2_22.strgwhlanghsc4)
}

// optional .atd.drivers.hsc4.Vcustatus2_22.Strgwhlangalvrchsc4Type strgwhlangalvrchsc4 = 2;
bool Vcustatus2_22::has_strgwhlangalvrchsc4() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Vcustatus2_22::set_has_strgwhlangalvrchsc4() {
  _has_bits_[0] |= 0x00000002u;
}
void Vcustatus2_22::clear_has_strgwhlangalvrchsc4() {
  _has_bits_[0] &= ~0x00000002u;
}
void Vcustatus2_22::clear_strgwhlangalvrchsc4() {
  strgwhlangalvrchsc4_ = 0;
  clear_has_strgwhlangalvrchsc4();
}
::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangalvrchsc4Type Vcustatus2_22::strgwhlangalvrchsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus2_22.strgwhlangalvrchsc4)
  return static_cast< ::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangalvrchsc4Type >(strgwhlangalvrchsc4_);
}
void Vcustatus2_22::set_strgwhlangalvrchsc4(::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangalvrchsc4Type value) {
  assert(::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangalvrchsc4Type_IsValid(value));
  set_has_strgwhlangalvrchsc4();
  strgwhlangalvrchsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus2_22.strgwhlangalvrchsc4)
}

// optional .atd.drivers.hsc4.Vcustatus2_22.Strgwhlangextdpvhsc4Type strgwhlangextdpvhsc4 = 3;
bool Vcustatus2_22::has_strgwhlangextdpvhsc4() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Vcustatus2_22::set_has_strgwhlangextdpvhsc4() {
  _has_bits_[0] |= 0x00000004u;
}
void Vcustatus2_22::clear_has_strgwhlangextdpvhsc4() {
  _has_bits_[0] &= ~0x00000004u;
}
void Vcustatus2_22::clear_strgwhlangextdpvhsc4() {
  strgwhlangextdpvhsc4_ = 0;
  clear_has_strgwhlangextdpvhsc4();
}
::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangextdpvhsc4Type Vcustatus2_22::strgwhlangextdpvhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus2_22.strgwhlangextdpvhsc4)
  return static_cast< ::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangextdpvhsc4Type >(strgwhlangextdpvhsc4_);
}
void Vcustatus2_22::set_strgwhlangextdpvhsc4(::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangextdpvhsc4Type value) {
  assert(::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangextdpvhsc4Type_IsValid(value));
  set_has_strgwhlangextdpvhsc4();
  strgwhlangextdpvhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus2_22.strgwhlangextdpvhsc4)
}

// optional .atd.drivers.hsc4.Vcustatus2_22.Strgwhlanggrdhsc4Type strgwhlanggrdhsc4 = 4;
bool Vcustatus2_22::has_strgwhlanggrdhsc4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Vcustatus2_22::set_has_strgwhlanggrdhsc4() {
  _has_bits_[0] |= 0x00000008u;
}
void Vcustatus2_22::clear_has_strgwhlanggrdhsc4() {
  _has_bits_[0] &= ~0x00000008u;
}
void Vcustatus2_22::clear_strgwhlanggrdhsc4() {
  strgwhlanggrdhsc4_ = 0;
  clear_has_strgwhlanggrdhsc4();
}
::atd::drivers::hsc4::Vcustatus2_22_Strgwhlanggrdhsc4Type Vcustatus2_22::strgwhlanggrdhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus2_22.strgwhlanggrdhsc4)
  return static_cast< ::atd::drivers::hsc4::Vcustatus2_22_Strgwhlanggrdhsc4Type >(strgwhlanggrdhsc4_);
}
void Vcustatus2_22::set_strgwhlanggrdhsc4(::atd::drivers::hsc4::Vcustatus2_22_Strgwhlanggrdhsc4Type value) {
  assert(::atd::drivers::hsc4::Vcustatus2_22_Strgwhlanggrdhsc4Type_IsValid(value));
  set_has_strgwhlanggrdhsc4();
  strgwhlanggrdhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus2_22.strgwhlanggrdhsc4)
}

// optional .atd.drivers.hsc4.Vcustatus2_22.Strgwhlangsnsrcalstshsc4Type strgwhlangsnsrcalstshsc4 = 5;
bool Vcustatus2_22::has_strgwhlangsnsrcalstshsc4() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Vcustatus2_22::set_has_strgwhlangsnsrcalstshsc4() {
  _has_bits_[0] |= 0x00000010u;
}
void Vcustatus2_22::clear_has_strgwhlangsnsrcalstshsc4() {
  _has_bits_[0] &= ~0x00000010u;
}
void Vcustatus2_22::clear_strgwhlangsnsrcalstshsc4() {
  strgwhlangsnsrcalstshsc4_ = 0;
  clear_has_strgwhlangsnsrcalstshsc4();
}
::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangsnsrcalstshsc4Type Vcustatus2_22::strgwhlangsnsrcalstshsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus2_22.strgwhlangsnsrcalstshsc4)
  return static_cast< ::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangsnsrcalstshsc4Type >(strgwhlangsnsrcalstshsc4_);
}
void Vcustatus2_22::set_strgwhlangsnsrcalstshsc4(::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangsnsrcalstshsc4Type value) {
  assert(::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangsnsrcalstshsc4Type_IsValid(value));
  set_has_strgwhlangsnsrcalstshsc4();
  strgwhlangsnsrcalstshsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus2_22.strgwhlangsnsrcalstshsc4)
}

// optional .atd.drivers.hsc4.Vcustatus2_22.Strgwhlangsnsrchksmhsc4Type strgwhlangsnsrchksmhsc4 = 6;
bool Vcustatus2_22::has_strgwhlangsnsrchksmhsc4() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Vcustatus2_22::set_has_strgwhlangsnsrchksmhsc4() {
  _has_bits_[0] |= 0x00000020u;
}
void Vcustatus2_22::clear_has_strgwhlangsnsrchksmhsc4() {
  _has_bits_[0] &= ~0x00000020u;
}
void Vcustatus2_22::clear_strgwhlangsnsrchksmhsc4() {
  strgwhlangsnsrchksmhsc4_ = 0;
  clear_has_strgwhlangsnsrchksmhsc4();
}
::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangsnsrchksmhsc4Type Vcustatus2_22::strgwhlangsnsrchksmhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus2_22.strgwhlangsnsrchksmhsc4)
  return static_cast< ::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangsnsrchksmhsc4Type >(strgwhlangsnsrchksmhsc4_);
}
void Vcustatus2_22::set_strgwhlangsnsrchksmhsc4(::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangsnsrchksmhsc4Type value) {
  assert(::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangsnsrchksmhsc4Type_IsValid(value));
  set_has_strgwhlangsnsrchksmhsc4();
  strgwhlangsnsrchksmhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus2_22.strgwhlangsnsrchksmhsc4)
}

// optional .atd.drivers.hsc4.Vcustatus2_22.Strgwhlangsnsrflthsc4Type strgwhlangsnsrflthsc4 = 7;
bool Vcustatus2_22::has_strgwhlangsnsrflthsc4() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Vcustatus2_22::set_has_strgwhlangsnsrflthsc4() {
  _has_bits_[0] |= 0x00000040u;
}
void Vcustatus2_22::clear_has_strgwhlangsnsrflthsc4() {
  _has_bits_[0] &= ~0x00000040u;
}
void Vcustatus2_22::clear_strgwhlangsnsrflthsc4() {
  strgwhlangsnsrflthsc4_ = 0;
  clear_has_strgwhlangsnsrflthsc4();
}
::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangsnsrflthsc4Type Vcustatus2_22::strgwhlangsnsrflthsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus2_22.strgwhlangsnsrflthsc4)
  return static_cast< ::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangsnsrflthsc4Type >(strgwhlangsnsrflthsc4_);
}
void Vcustatus2_22::set_strgwhlangsnsrflthsc4(::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangsnsrflthsc4Type value) {
  assert(::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangsnsrflthsc4Type_IsValid(value));
  set_has_strgwhlangsnsrflthsc4();
  strgwhlangsnsrflthsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus2_22.strgwhlangsnsrflthsc4)
}

// optional .atd.drivers.hsc4.Vcustatus2_22.Strgwhlangsnsrinidhsc4Type strgwhlangsnsrinidhsc4 = 8;
bool Vcustatus2_22::has_strgwhlangsnsrinidhsc4() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Vcustatus2_22::set_has_strgwhlangsnsrinidhsc4() {
  _has_bits_[0] |= 0x00000080u;
}
void Vcustatus2_22::clear_has_strgwhlangsnsrinidhsc4() {
  _has_bits_[0] &= ~0x00000080u;
}
void Vcustatus2_22::clear_strgwhlangsnsrinidhsc4() {
  strgwhlangsnsrinidhsc4_ = 0;
  clear_has_strgwhlangsnsrinidhsc4();
}
::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangsnsrinidhsc4Type Vcustatus2_22::strgwhlangsnsrinidhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus2_22.strgwhlangsnsrinidhsc4)
  return static_cast< ::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangsnsrinidhsc4Type >(strgwhlangsnsrinidhsc4_);
}
void Vcustatus2_22::set_strgwhlangsnsrinidhsc4(::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangsnsrinidhsc4Type value) {
  assert(::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangsnsrinidhsc4Type_IsValid(value));
  set_has_strgwhlangsnsrinidhsc4();
  strgwhlangsnsrinidhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus2_22.strgwhlangsnsrinidhsc4)
}

// optional .atd.drivers.hsc4.Vcustatus2_22.Strgwhlangsnsrmultcapbhsc4Type strgwhlangsnsrmultcapbhsc4 = 9;
bool Vcustatus2_22::has_strgwhlangsnsrmultcapbhsc4() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Vcustatus2_22::set_has_strgwhlangsnsrmultcapbhsc4() {
  _has_bits_[0] |= 0x00000100u;
}
void Vcustatus2_22::clear_has_strgwhlangsnsrmultcapbhsc4() {
  _has_bits_[0] &= ~0x00000100u;
}
void Vcustatus2_22::clear_strgwhlangsnsrmultcapbhsc4() {
  strgwhlangsnsrmultcapbhsc4_ = 0;
  clear_has_strgwhlangsnsrmultcapbhsc4();
}
::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangsnsrmultcapbhsc4Type Vcustatus2_22::strgwhlangsnsrmultcapbhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus2_22.strgwhlangsnsrmultcapbhsc4)
  return static_cast< ::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangsnsrmultcapbhsc4Type >(strgwhlangsnsrmultcapbhsc4_);
}
void Vcustatus2_22::set_strgwhlangsnsrmultcapbhsc4(::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangsnsrmultcapbhsc4Type value) {
  assert(::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangsnsrmultcapbhsc4Type_IsValid(value));
  set_has_strgwhlangsnsrmultcapbhsc4();
  strgwhlangsnsrmultcapbhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus2_22.strgwhlangsnsrmultcapbhsc4)
}

// optional .atd.drivers.hsc4.Vcustatus2_22.Strgwhlangvhsc4Type strgwhlangvhsc4 = 10;
bool Vcustatus2_22::has_strgwhlangvhsc4() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Vcustatus2_22::set_has_strgwhlangvhsc4() {
  _has_bits_[0] |= 0x00000200u;
}
void Vcustatus2_22::clear_has_strgwhlangvhsc4() {
  _has_bits_[0] &= ~0x00000200u;
}
void Vcustatus2_22::clear_strgwhlangvhsc4() {
  strgwhlangvhsc4_ = 0;
  clear_has_strgwhlangvhsc4();
}
::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangvhsc4Type Vcustatus2_22::strgwhlangvhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus2_22.strgwhlangvhsc4)
  return static_cast< ::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangvhsc4Type >(strgwhlangvhsc4_);
}
void Vcustatus2_22::set_strgwhlangvhsc4(::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangvhsc4Type value) {
  assert(::atd::drivers::hsc4::Vcustatus2_22_Strgwhlangvhsc4Type_IsValid(value));
  set_has_strgwhlangvhsc4();
  strgwhlangvhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus2_22.strgwhlangvhsc4)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vcustatus3_23::kSysvolHsc4FieldNumber;
const int Vcustatus3_23::kEpbappcnstshsc4FieldNumber;
const int Vcustatus3_23::kVehspdavgvhsc4FieldNumber;
const int Vcustatus3_23::kVehspdavghsc4FieldNumber;
const int Vcustatus3_23::kVselongtaccvhsc4FieldNumber;
const int Vcustatus3_23::kVselongtacchsc4FieldNumber;
const int Vcustatus3_23::kVehdynyawratevhsc4FieldNumber;
const int Vcustatus3_23::kVehdynyawratehsc4FieldNumber;
const int Vcustatus3_23::kAirbagdplhsc4FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vcustatus3_23::Vcustatus3_23()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:atd.drivers.hsc4.Vcustatus3_23)
}
Vcustatus3_23::Vcustatus3_23(const Vcustatus3_23& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&sysvol_hsc4_, &from.sysvol_hsc4_,
    reinterpret_cast<char*>(&vehdynyawratehsc4_) -
    reinterpret_cast<char*>(&sysvol_hsc4_) + sizeof(vehdynyawratehsc4_));
  // @@protoc_insertion_point(copy_constructor:atd.drivers.hsc4.Vcustatus3_23)
}

void Vcustatus3_23::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&sysvol_hsc4_, 0, reinterpret_cast<char*>(&airbagdplhsc4_) -
    reinterpret_cast<char*>(&sysvol_hsc4_) + sizeof(airbagdplhsc4_));
  vehdynyawratehsc4_ = -2048;
}

Vcustatus3_23::~Vcustatus3_23() {
  // @@protoc_insertion_point(destructor:atd.drivers.hsc4.Vcustatus3_23)
  SharedDtor();
}

void Vcustatus3_23::SharedDtor() {
}

void Vcustatus3_23::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Vcustatus3_23& Vcustatus3_23::default_instance() {
  protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  return *internal_default_instance();
}

Vcustatus3_23* Vcustatus3_23::New(::google::protobuf::Arena* arena) const {
  Vcustatus3_23* n = new Vcustatus3_23;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vcustatus3_23::Clear() {
// @@protoc_insertion_point(message_clear_start:atd.drivers.hsc4.Vcustatus3_23)
  if (_has_bits_[0 / 32] & 255u) {
    ::memset(&sysvol_hsc4_, 0, reinterpret_cast<char*>(&airbagdplhsc4_) -
      reinterpret_cast<char*>(&sysvol_hsc4_) + sizeof(airbagdplhsc4_));
  }
  vehdynyawratehsc4_ = -2048;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Vcustatus3_23::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:atd.drivers.hsc4.Vcustatus3_23)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double sysvol_hsc4 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_sysvol_hsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sysvol_hsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Vcustatus3_23.Epbappcnstshsc4Type epbappcnstshsc4 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::atd::drivers::hsc4::Vcustatus3_23_Epbappcnstshsc4Type_IsValid(value)) {
            set_epbappcnstshsc4(static_cast< ::atd::drivers::hsc4::Vcustatus3_23_Epbappcnstshsc4Type >(value));
          } else {
            unknown_fields_stream.WriteVarint32(16u);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Vcustatus3_23.Vehspdavgvhsc4Type vehspdavgvhsc4 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::atd::drivers::hsc4::Vcustatus3_23_Vehspdavgvhsc4Type_IsValid(value)) {
            set_vehspdavgvhsc4(static_cast< ::atd::drivers::hsc4::Vcustatus3_23_Vehspdavgvhsc4Type >(value));
          } else {
            unknown_fields_stream.WriteVarint32(24u);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double vehspdavghsc4 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u)) {
          set_has_vehspdavghsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vehspdavghsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Vcustatus3_23.Vselongtaccvhsc4Type vselongtaccvhsc4 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::atd::drivers::hsc4::Vcustatus3_23_Vselongtaccvhsc4Type_IsValid(value)) {
            set_vselongtaccvhsc4(static_cast< ::atd::drivers::hsc4::Vcustatus3_23_Vselongtaccvhsc4Type >(value));
          } else {
            unknown_fields_stream.WriteVarint32(40u);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double vselongtacchsc4 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u)) {
          set_has_vselongtacchsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vselongtacchsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Vcustatus3_23.Vehdynyawratevhsc4Type vehdynyawratevhsc4 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::atd::drivers::hsc4::Vcustatus3_23_Vehdynyawratevhsc4Type_IsValid(value)) {
            set_vehdynyawratevhsc4(static_cast< ::atd::drivers::hsc4::Vcustatus3_23_Vehdynyawratevhsc4Type >(value));
          } else {
            unknown_fields_stream.WriteVarint32(56u);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Vcustatus3_23.Vehdynyawratehsc4Type vehdynyawratehsc4 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::atd::drivers::hsc4::Vcustatus3_23_Vehdynyawratehsc4Type_IsValid(value)) {
            set_vehdynyawratehsc4(static_cast< ::atd::drivers::hsc4::Vcustatus3_23_Vehdynyawratehsc4Type >(value));
          } else {
            unknown_fields_stream.WriteVarint32(64u);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Vcustatus3_23.Airbagdplhsc4Type airbagdplhsc4 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::atd::drivers::hsc4::Vcustatus3_23_Airbagdplhsc4Type_IsValid(value)) {
            set_airbagdplhsc4(static_cast< ::atd::drivers::hsc4::Vcustatus3_23_Airbagdplhsc4Type >(value));
          } else {
            unknown_fields_stream.WriteVarint32(72u);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:atd.drivers.hsc4.Vcustatus3_23)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:atd.drivers.hsc4.Vcustatus3_23)
  return false;
#undef DO_
}

void Vcustatus3_23::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:atd.drivers.hsc4.Vcustatus3_23)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double sysvol_hsc4 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->sysvol_hsc4(), output);
  }

  // optional .atd.drivers.hsc4.Vcustatus3_23.Epbappcnstshsc4Type epbappcnstshsc4 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->epbappcnstshsc4(), output);
  }

  // optional .atd.drivers.hsc4.Vcustatus3_23.Vehspdavgvhsc4Type vehspdavgvhsc4 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->vehspdavgvhsc4(), output);
  }

  // optional double vehspdavghsc4 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->vehspdavghsc4(), output);
  }

  // optional .atd.drivers.hsc4.Vcustatus3_23.Vselongtaccvhsc4Type vselongtaccvhsc4 = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->vselongtaccvhsc4(), output);
  }

  // optional double vselongtacchsc4 = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->vselongtacchsc4(), output);
  }

  // optional .atd.drivers.hsc4.Vcustatus3_23.Vehdynyawratevhsc4Type vehdynyawratevhsc4 = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->vehdynyawratevhsc4(), output);
  }

  // optional .atd.drivers.hsc4.Vcustatus3_23.Vehdynyawratehsc4Type vehdynyawratehsc4 = 8;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->vehdynyawratehsc4(), output);
  }

  // optional .atd.drivers.hsc4.Vcustatus3_23.Airbagdplhsc4Type airbagdplhsc4 = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->airbagdplhsc4(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:atd.drivers.hsc4.Vcustatus3_23)
}

size_t Vcustatus3_23::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:atd.drivers.hsc4.Vcustatus3_23)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 255u) {
    // optional double sysvol_hsc4 = 1;
    if (has_sysvol_hsc4()) {
      total_size += 1 + 8;
    }

    // optional .atd.drivers.hsc4.Vcustatus3_23.Epbappcnstshsc4Type epbappcnstshsc4 = 2;
    if (has_epbappcnstshsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->epbappcnstshsc4());
    }

    // optional .atd.drivers.hsc4.Vcustatus3_23.Vehspdavgvhsc4Type vehspdavgvhsc4 = 3;
    if (has_vehspdavgvhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vehspdavgvhsc4());
    }

    // optional double vehspdavghsc4 = 4;
    if (has_vehspdavghsc4()) {
      total_size += 1 + 8;
    }

    // optional double vselongtacchsc4 = 6;
    if (has_vselongtacchsc4()) {
      total_size += 1 + 8;
    }

    // optional .atd.drivers.hsc4.Vcustatus3_23.Vselongtaccvhsc4Type vselongtaccvhsc4 = 5;
    if (has_vselongtaccvhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vselongtaccvhsc4());
    }

    // optional .atd.drivers.hsc4.Vcustatus3_23.Vehdynyawratevhsc4Type vehdynyawratevhsc4 = 7;
    if (has_vehdynyawratevhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vehdynyawratevhsc4());
    }

    // optional .atd.drivers.hsc4.Vcustatus3_23.Airbagdplhsc4Type airbagdplhsc4 = 9;
    if (has_airbagdplhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->airbagdplhsc4());
    }

  }
  // optional .atd.drivers.hsc4.Vcustatus3_23.Vehdynyawratehsc4Type vehdynyawratehsc4 = 8;
  if (has_vehdynyawratehsc4()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->vehdynyawratehsc4());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Vcustatus3_23::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Vcustatus3_23*>(&from));
}

void Vcustatus3_23::MergeFrom(const Vcustatus3_23& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:atd.drivers.hsc4.Vcustatus3_23)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      sysvol_hsc4_ = from.sysvol_hsc4_;
    }
    if (cached_has_bits & 0x00000002u) {
      epbappcnstshsc4_ = from.epbappcnstshsc4_;
    }
    if (cached_has_bits & 0x00000004u) {
      vehspdavgvhsc4_ = from.vehspdavgvhsc4_;
    }
    if (cached_has_bits & 0x00000008u) {
      vehspdavghsc4_ = from.vehspdavghsc4_;
    }
    if (cached_has_bits & 0x00000010u) {
      vselongtacchsc4_ = from.vselongtacchsc4_;
    }
    if (cached_has_bits & 0x00000020u) {
      vselongtaccvhsc4_ = from.vselongtaccvhsc4_;
    }
    if (cached_has_bits & 0x00000040u) {
      vehdynyawratevhsc4_ = from.vehdynyawratevhsc4_;
    }
    if (cached_has_bits & 0x00000080u) {
      airbagdplhsc4_ = from.airbagdplhsc4_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_vehdynyawratehsc4(from.vehdynyawratehsc4());
  }
}

void Vcustatus3_23::CopyFrom(const Vcustatus3_23& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:atd.drivers.hsc4.Vcustatus3_23)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vcustatus3_23::IsInitialized() const {
  return true;
}

void Vcustatus3_23::Swap(Vcustatus3_23* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vcustatus3_23::InternalSwap(Vcustatus3_23* other) {
  std::swap(sysvol_hsc4_, other->sysvol_hsc4_);
  std::swap(epbappcnstshsc4_, other->epbappcnstshsc4_);
  std::swap(vehspdavgvhsc4_, other->vehspdavgvhsc4_);
  std::swap(vehspdavghsc4_, other->vehspdavghsc4_);
  std::swap(vselongtacchsc4_, other->vselongtacchsc4_);
  std::swap(vselongtaccvhsc4_, other->vselongtaccvhsc4_);
  std::swap(vehdynyawratevhsc4_, other->vehdynyawratevhsc4_);
  std::swap(airbagdplhsc4_, other->airbagdplhsc4_);
  std::swap(vehdynyawratehsc4_, other->vehdynyawratehsc4_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Vcustatus3_23::GetTypeName() const {
  return "atd.drivers.hsc4.Vcustatus3_23";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Vcustatus3_23

// optional double sysvol_hsc4 = 1;
bool Vcustatus3_23::has_sysvol_hsc4() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Vcustatus3_23::set_has_sysvol_hsc4() {
  _has_bits_[0] |= 0x00000001u;
}
void Vcustatus3_23::clear_has_sysvol_hsc4() {
  _has_bits_[0] &= ~0x00000001u;
}
void Vcustatus3_23::clear_sysvol_hsc4() {
  sysvol_hsc4_ = 0;
  clear_has_sysvol_hsc4();
}
double Vcustatus3_23::sysvol_hsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus3_23.sysvol_hsc4)
  return sysvol_hsc4_;
}
void Vcustatus3_23::set_sysvol_hsc4(double value) {
  set_has_sysvol_hsc4();
  sysvol_hsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus3_23.sysvol_hsc4)
}

// optional .atd.drivers.hsc4.Vcustatus3_23.Epbappcnstshsc4Type epbappcnstshsc4 = 2;
bool Vcustatus3_23::has_epbappcnstshsc4() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Vcustatus3_23::set_has_epbappcnstshsc4() {
  _has_bits_[0] |= 0x00000002u;
}
void Vcustatus3_23::clear_has_epbappcnstshsc4() {
  _has_bits_[0] &= ~0x00000002u;
}
void Vcustatus3_23::clear_epbappcnstshsc4() {
  epbappcnstshsc4_ = 0;
  clear_has_epbappcnstshsc4();
}
::atd::drivers::hsc4::Vcustatus3_23_Epbappcnstshsc4Type Vcustatus3_23::epbappcnstshsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus3_23.epbappcnstshsc4)
  return static_cast< ::atd::drivers::hsc4::Vcustatus3_23_Epbappcnstshsc4Type >(epbappcnstshsc4_);
}
void Vcustatus3_23::set_epbappcnstshsc4(::atd::drivers::hsc4::Vcustatus3_23_Epbappcnstshsc4Type value) {
  assert(::atd::drivers::hsc4::Vcustatus3_23_Epbappcnstshsc4Type_IsValid(value));
  set_has_epbappcnstshsc4();
  epbappcnstshsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus3_23.epbappcnstshsc4)
}

// optional .atd.drivers.hsc4.Vcustatus3_23.Vehspdavgvhsc4Type vehspdavgvhsc4 = 3;
bool Vcustatus3_23::has_vehspdavgvhsc4() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Vcustatus3_23::set_has_vehspdavgvhsc4() {
  _has_bits_[0] |= 0x00000004u;
}
void Vcustatus3_23::clear_has_vehspdavgvhsc4() {
  _has_bits_[0] &= ~0x00000004u;
}
void Vcustatus3_23::clear_vehspdavgvhsc4() {
  vehspdavgvhsc4_ = 0;
  clear_has_vehspdavgvhsc4();
}
::atd::drivers::hsc4::Vcustatus3_23_Vehspdavgvhsc4Type Vcustatus3_23::vehspdavgvhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus3_23.vehspdavgvhsc4)
  return static_cast< ::atd::drivers::hsc4::Vcustatus3_23_Vehspdavgvhsc4Type >(vehspdavgvhsc4_);
}
void Vcustatus3_23::set_vehspdavgvhsc4(::atd::drivers::hsc4::Vcustatus3_23_Vehspdavgvhsc4Type value) {
  assert(::atd::drivers::hsc4::Vcustatus3_23_Vehspdavgvhsc4Type_IsValid(value));
  set_has_vehspdavgvhsc4();
  vehspdavgvhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus3_23.vehspdavgvhsc4)
}

// optional double vehspdavghsc4 = 4;
bool Vcustatus3_23::has_vehspdavghsc4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Vcustatus3_23::set_has_vehspdavghsc4() {
  _has_bits_[0] |= 0x00000008u;
}
void Vcustatus3_23::clear_has_vehspdavghsc4() {
  _has_bits_[0] &= ~0x00000008u;
}
void Vcustatus3_23::clear_vehspdavghsc4() {
  vehspdavghsc4_ = 0;
  clear_has_vehspdavghsc4();
}
double Vcustatus3_23::vehspdavghsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus3_23.vehspdavghsc4)
  return vehspdavghsc4_;
}
void Vcustatus3_23::set_vehspdavghsc4(double value) {
  set_has_vehspdavghsc4();
  vehspdavghsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus3_23.vehspdavghsc4)
}

// optional .atd.drivers.hsc4.Vcustatus3_23.Vselongtaccvhsc4Type vselongtaccvhsc4 = 5;
bool Vcustatus3_23::has_vselongtaccvhsc4() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Vcustatus3_23::set_has_vselongtaccvhsc4() {
  _has_bits_[0] |= 0x00000020u;
}
void Vcustatus3_23::clear_has_vselongtaccvhsc4() {
  _has_bits_[0] &= ~0x00000020u;
}
void Vcustatus3_23::clear_vselongtaccvhsc4() {
  vselongtaccvhsc4_ = 0;
  clear_has_vselongtaccvhsc4();
}
::atd::drivers::hsc4::Vcustatus3_23_Vselongtaccvhsc4Type Vcustatus3_23::vselongtaccvhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus3_23.vselongtaccvhsc4)
  return static_cast< ::atd::drivers::hsc4::Vcustatus3_23_Vselongtaccvhsc4Type >(vselongtaccvhsc4_);
}
void Vcustatus3_23::set_vselongtaccvhsc4(::atd::drivers::hsc4::Vcustatus3_23_Vselongtaccvhsc4Type value) {
  assert(::atd::drivers::hsc4::Vcustatus3_23_Vselongtaccvhsc4Type_IsValid(value));
  set_has_vselongtaccvhsc4();
  vselongtaccvhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus3_23.vselongtaccvhsc4)
}

// optional double vselongtacchsc4 = 6;
bool Vcustatus3_23::has_vselongtacchsc4() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Vcustatus3_23::set_has_vselongtacchsc4() {
  _has_bits_[0] |= 0x00000010u;
}
void Vcustatus3_23::clear_has_vselongtacchsc4() {
  _has_bits_[0] &= ~0x00000010u;
}
void Vcustatus3_23::clear_vselongtacchsc4() {
  vselongtacchsc4_ = 0;
  clear_has_vselongtacchsc4();
}
double Vcustatus3_23::vselongtacchsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus3_23.vselongtacchsc4)
  return vselongtacchsc4_;
}
void Vcustatus3_23::set_vselongtacchsc4(double value) {
  set_has_vselongtacchsc4();
  vselongtacchsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus3_23.vselongtacchsc4)
}

// optional .atd.drivers.hsc4.Vcustatus3_23.Vehdynyawratevhsc4Type vehdynyawratevhsc4 = 7;
bool Vcustatus3_23::has_vehdynyawratevhsc4() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Vcustatus3_23::set_has_vehdynyawratevhsc4() {
  _has_bits_[0] |= 0x00000040u;
}
void Vcustatus3_23::clear_has_vehdynyawratevhsc4() {
  _has_bits_[0] &= ~0x00000040u;
}
void Vcustatus3_23::clear_vehdynyawratevhsc4() {
  vehdynyawratevhsc4_ = 0;
  clear_has_vehdynyawratevhsc4();
}
::atd::drivers::hsc4::Vcustatus3_23_Vehdynyawratevhsc4Type Vcustatus3_23::vehdynyawratevhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus3_23.vehdynyawratevhsc4)
  return static_cast< ::atd::drivers::hsc4::Vcustatus3_23_Vehdynyawratevhsc4Type >(vehdynyawratevhsc4_);
}
void Vcustatus3_23::set_vehdynyawratevhsc4(::atd::drivers::hsc4::Vcustatus3_23_Vehdynyawratevhsc4Type value) {
  assert(::atd::drivers::hsc4::Vcustatus3_23_Vehdynyawratevhsc4Type_IsValid(value));
  set_has_vehdynyawratevhsc4();
  vehdynyawratevhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus3_23.vehdynyawratevhsc4)
}

// optional .atd.drivers.hsc4.Vcustatus3_23.Vehdynyawratehsc4Type vehdynyawratehsc4 = 8;
bool Vcustatus3_23::has_vehdynyawratehsc4() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Vcustatus3_23::set_has_vehdynyawratehsc4() {
  _has_bits_[0] |= 0x00000100u;
}
void Vcustatus3_23::clear_has_vehdynyawratehsc4() {
  _has_bits_[0] &= ~0x00000100u;
}
void Vcustatus3_23::clear_vehdynyawratehsc4() {
  vehdynyawratehsc4_ = -2048;
  clear_has_vehdynyawratehsc4();
}
::atd::drivers::hsc4::Vcustatus3_23_Vehdynyawratehsc4Type Vcustatus3_23::vehdynyawratehsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus3_23.vehdynyawratehsc4)
  return static_cast< ::atd::drivers::hsc4::Vcustatus3_23_Vehdynyawratehsc4Type >(vehdynyawratehsc4_);
}
void Vcustatus3_23::set_vehdynyawratehsc4(::atd::drivers::hsc4::Vcustatus3_23_Vehdynyawratehsc4Type value) {
  assert(::atd::drivers::hsc4::Vcustatus3_23_Vehdynyawratehsc4Type_IsValid(value));
  set_has_vehdynyawratehsc4();
  vehdynyawratehsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus3_23.vehdynyawratehsc4)
}

// optional .atd.drivers.hsc4.Vcustatus3_23.Airbagdplhsc4Type airbagdplhsc4 = 9;
bool Vcustatus3_23::has_airbagdplhsc4() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Vcustatus3_23::set_has_airbagdplhsc4() {
  _has_bits_[0] |= 0x00000080u;
}
void Vcustatus3_23::clear_has_airbagdplhsc4() {
  _has_bits_[0] &= ~0x00000080u;
}
void Vcustatus3_23::clear_airbagdplhsc4() {
  airbagdplhsc4_ = 0;
  clear_has_airbagdplhsc4();
}
::atd::drivers::hsc4::Vcustatus3_23_Airbagdplhsc4Type Vcustatus3_23::airbagdplhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus3_23.airbagdplhsc4)
  return static_cast< ::atd::drivers::hsc4::Vcustatus3_23_Airbagdplhsc4Type >(airbagdplhsc4_);
}
void Vcustatus3_23::set_airbagdplhsc4(::atd::drivers::hsc4::Vcustatus3_23_Airbagdplhsc4Type value) {
  assert(::atd::drivers::hsc4::Vcustatus3_23_Airbagdplhsc4Type_IsValid(value));
  set_has_airbagdplhsc4();
  airbagdplhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus3_23.airbagdplhsc4)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Idcstatus9_19::kGpsanglehsc4FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Idcstatus9_19::Idcstatus9_19()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:atd.drivers.hsc4.Idcstatus9_19)
}
Idcstatus9_19::Idcstatus9_19(const Idcstatus9_19& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gpsanglehsc4_ = from.gpsanglehsc4_;
  // @@protoc_insertion_point(copy_constructor:atd.drivers.hsc4.Idcstatus9_19)
}

void Idcstatus9_19::SharedCtor() {
  _cached_size_ = 0;
  gpsanglehsc4_ = 0;
}

Idcstatus9_19::~Idcstatus9_19() {
  // @@protoc_insertion_point(destructor:atd.drivers.hsc4.Idcstatus9_19)
  SharedDtor();
}

void Idcstatus9_19::SharedDtor() {
}

void Idcstatus9_19::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Idcstatus9_19& Idcstatus9_19::default_instance() {
  protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  return *internal_default_instance();
}

Idcstatus9_19* Idcstatus9_19::New(::google::protobuf::Arena* arena) const {
  Idcstatus9_19* n = new Idcstatus9_19;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Idcstatus9_19::Clear() {
// @@protoc_insertion_point(message_clear_start:atd.drivers.hsc4.Idcstatus9_19)
  gpsanglehsc4_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Idcstatus9_19::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:atd.drivers.hsc4.Idcstatus9_19)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 gpsanglehsc4 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_gpsanglehsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gpsanglehsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:atd.drivers.hsc4.Idcstatus9_19)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:atd.drivers.hsc4.Idcstatus9_19)
  return false;
#undef DO_
}

void Idcstatus9_19::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:atd.drivers.hsc4.Idcstatus9_19)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 gpsanglehsc4 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->gpsanglehsc4(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:atd.drivers.hsc4.Idcstatus9_19)
}

size_t Idcstatus9_19::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:atd.drivers.hsc4.Idcstatus9_19)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  // optional int32 gpsanglehsc4 = 1;
  if (has_gpsanglehsc4()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gpsanglehsc4());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Idcstatus9_19::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Idcstatus9_19*>(&from));
}

void Idcstatus9_19::MergeFrom(const Idcstatus9_19& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:atd.drivers.hsc4.Idcstatus9_19)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_gpsanglehsc4()) {
    set_gpsanglehsc4(from.gpsanglehsc4());
  }
}

void Idcstatus9_19::CopyFrom(const Idcstatus9_19& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:atd.drivers.hsc4.Idcstatus9_19)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Idcstatus9_19::IsInitialized() const {
  return true;
}

void Idcstatus9_19::Swap(Idcstatus9_19* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Idcstatus9_19::InternalSwap(Idcstatus9_19* other) {
  std::swap(gpsanglehsc4_, other->gpsanglehsc4_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Idcstatus9_19::GetTypeName() const {
  return "atd.drivers.hsc4.Idcstatus9_19";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Idcstatus9_19

// optional int32 gpsanglehsc4 = 1;
bool Idcstatus9_19::has_gpsanglehsc4() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Idcstatus9_19::set_has_gpsanglehsc4() {
  _has_bits_[0] |= 0x00000001u;
}
void Idcstatus9_19::clear_has_gpsanglehsc4() {
  _has_bits_[0] &= ~0x00000001u;
}
void Idcstatus9_19::clear_gpsanglehsc4() {
  gpsanglehsc4_ = 0;
  clear_has_gpsanglehsc4();
}
::google::protobuf::int32 Idcstatus9_19::gpsanglehsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus9_19.gpsanglehsc4)
  return gpsanglehsc4_;
}
void Idcstatus9_19::set_gpsanglehsc4(::google::protobuf::int32 value) {
  set_has_gpsanglehsc4();
  gpsanglehsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus9_19.gpsanglehsc4)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Idcstatus8_18::kDistancetostopFieldNumber;
const int Idcstatus8_18::kParmtrobg2Hsc4FieldNumber;
const int Idcstatus8_18::kParmtrobg1Hsc4FieldNumber;
const int Idcstatus8_18::kBrklghtscmdhsc4FieldNumber;
const int Idcstatus8_18::kDangerouswrnnglghtcmdhsc4FieldNumber;
const int Idcstatus8_18::kDipdbeamlampscmdhsc4FieldNumber;
const int Idcstatus8_18::kFrtfoglampcmdhsc4FieldNumber;
const int Idcstatus8_18::kHorncmdhsc4FieldNumber;
const int Idcstatus8_18::kLdircnlampscmdhsc4FieldNumber;
const int Idcstatus8_18::kMainbeamlampscmdhsc4FieldNumber;
const int Idcstatus8_18::kRdircnlampscmdhsc4FieldNumber;
const int Idcstatus8_18::kRevsnglghtcmdhsc4FieldNumber;
const int Idcstatus8_18::kRrfoglampcmdhsc4FieldNumber;
const int Idcstatus8_18::kWidthlmptaillightcmdhsc4FieldNumber;
const int Idcstatus8_18::kWipercmdhsc4FieldNumber;
const int Idcstatus8_18::kWshrcmdhsc4FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Idcstatus8_18::Idcstatus8_18()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:atd.drivers.hsc4.Idcstatus8_18)
}
Idcstatus8_18::Idcstatus8_18(const Idcstatus8_18& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&distancetostop_, &from.distancetostop_,
    reinterpret_cast<char*>(&wshrcmdhsc4_) -
    reinterpret_cast<char*>(&distancetostop_) + sizeof(wshrcmdhsc4_));
  // @@protoc_insertion_point(copy_constructor:atd.drivers.hsc4.Idcstatus8_18)
}

void Idcstatus8_18::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&distancetostop_, 0, reinterpret_cast<char*>(&wshrcmdhsc4_) -
    reinterpret_cast<char*>(&distancetostop_) + sizeof(wshrcmdhsc4_));
}

Idcstatus8_18::~Idcstatus8_18() {
  // @@protoc_insertion_point(destructor:atd.drivers.hsc4.Idcstatus8_18)
  SharedDtor();
}

void Idcstatus8_18::SharedDtor() {
}

void Idcstatus8_18::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Idcstatus8_18& Idcstatus8_18::default_instance() {
  protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  return *internal_default_instance();
}

Idcstatus8_18* Idcstatus8_18::New(::google::protobuf::Arena* arena) const {
  Idcstatus8_18* n = new Idcstatus8_18;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Idcstatus8_18::Clear() {
// @@protoc_insertion_point(message_clear_start:atd.drivers.hsc4.Idcstatus8_18)
  if (_has_bits_[0 / 32] & 255u) {
    ::memset(&distancetostop_, 0, reinterpret_cast<char*>(&horncmdhsc4_) -
      reinterpret_cast<char*>(&distancetostop_) + sizeof(horncmdhsc4_));
  }
  if (_has_bits_[8 / 32] & 65280u) {
    ::memset(&ldircnlampscmdhsc4_, 0, reinterpret_cast<char*>(&wshrcmdhsc4_) -
      reinterpret_cast<char*>(&ldircnlampscmdhsc4_) + sizeof(wshrcmdhsc4_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Idcstatus8_18::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:atd.drivers.hsc4.Idcstatus8_18)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double distancetostop = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_distancetostop();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &distancetostop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double parmtrobg2hsc4 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_parmtrobg2hsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &parmtrobg2hsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double parmtrobg1hsc4 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {
          set_has_parmtrobg1hsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &parmtrobg1hsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 brklghtscmdhsc4 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_brklghtscmdhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &brklghtscmdhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 dangerouswrnnglghtcmdhsc4 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_dangerouswrnnglghtcmdhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dangerouswrnnglghtcmdhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 dipdbeamlampscmdhsc4 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_dipdbeamlampscmdhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dipdbeamlampscmdhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 frtfoglampcmdhsc4 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_frtfoglampcmdhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &frtfoglampcmdhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 horncmdhsc4 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_horncmdhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &horncmdhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ldircnlampscmdhsc4 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has_ldircnlampscmdhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ldircnlampscmdhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 mainbeamlampscmdhsc4 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          set_has_mainbeamlampscmdhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mainbeamlampscmdhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 rdircnlampscmdhsc4 = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {
          set_has_rdircnlampscmdhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rdircnlampscmdhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 revsnglghtcmdhsc4 = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {
          set_has_revsnglghtcmdhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &revsnglghtcmdhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 rrfoglampcmdhsc4 = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {
          set_has_rrfoglampcmdhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rrfoglampcmdhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 widthlmptaillightcmdhsc4 = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u)) {
          set_has_widthlmptaillightcmdhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &widthlmptaillightcmdhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 wipercmdhsc4 = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u)) {
          set_has_wipercmdhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wipercmdhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 wshrcmdhsc4 = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u)) {
          set_has_wshrcmdhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wshrcmdhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:atd.drivers.hsc4.Idcstatus8_18)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:atd.drivers.hsc4.Idcstatus8_18)
  return false;
#undef DO_
}

void Idcstatus8_18::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:atd.drivers.hsc4.Idcstatus8_18)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double distancetostop = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->distancetostop(), output);
  }

  // optional double parmtrobg2hsc4 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->parmtrobg2hsc4(), output);
  }

  // optional double parmtrobg1hsc4 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->parmtrobg1hsc4(), output);
  }

  // optional int32 brklghtscmdhsc4 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->brklghtscmdhsc4(), output);
  }

  // optional int32 dangerouswrnnglghtcmdhsc4 = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->dangerouswrnnglghtcmdhsc4(), output);
  }

  // optional int32 dipdbeamlampscmdhsc4 = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->dipdbeamlampscmdhsc4(), output);
  }

  // optional int32 frtfoglampcmdhsc4 = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->frtfoglampcmdhsc4(), output);
  }

  // optional int32 horncmdhsc4 = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->horncmdhsc4(), output);
  }

  // optional int32 ldircnlampscmdhsc4 = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->ldircnlampscmdhsc4(), output);
  }

  // optional int32 mainbeamlampscmdhsc4 = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->mainbeamlampscmdhsc4(), output);
  }

  // optional int32 rdircnlampscmdhsc4 = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->rdircnlampscmdhsc4(), output);
  }

  // optional int32 revsnglghtcmdhsc4 = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->revsnglghtcmdhsc4(), output);
  }

  // optional int32 rrfoglampcmdhsc4 = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->rrfoglampcmdhsc4(), output);
  }

  // optional int32 widthlmptaillightcmdhsc4 = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->widthlmptaillightcmdhsc4(), output);
  }

  // optional int32 wipercmdhsc4 = 15;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->wipercmdhsc4(), output);
  }

  // optional int32 wshrcmdhsc4 = 16;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->wshrcmdhsc4(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:atd.drivers.hsc4.Idcstatus8_18)
}

size_t Idcstatus8_18::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:atd.drivers.hsc4.Idcstatus8_18)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 255u) {
    // optional double distancetostop = 1;
    if (has_distancetostop()) {
      total_size += 1 + 8;
    }

    // optional double parmtrobg2hsc4 = 2;
    if (has_parmtrobg2hsc4()) {
      total_size += 1 + 8;
    }

    // optional double parmtrobg1hsc4 = 3;
    if (has_parmtrobg1hsc4()) {
      total_size += 1 + 8;
    }

    // optional int32 brklghtscmdhsc4 = 4;
    if (has_brklghtscmdhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->brklghtscmdhsc4());
    }

    // optional int32 dangerouswrnnglghtcmdhsc4 = 5;
    if (has_dangerouswrnnglghtcmdhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dangerouswrnnglghtcmdhsc4());
    }

    // optional int32 dipdbeamlampscmdhsc4 = 6;
    if (has_dipdbeamlampscmdhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dipdbeamlampscmdhsc4());
    }

    // optional int32 frtfoglampcmdhsc4 = 7;
    if (has_frtfoglampcmdhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->frtfoglampcmdhsc4());
    }

    // optional int32 horncmdhsc4 = 8;
    if (has_horncmdhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->horncmdhsc4());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional int32 ldircnlampscmdhsc4 = 9;
    if (has_ldircnlampscmdhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ldircnlampscmdhsc4());
    }

    // optional int32 mainbeamlampscmdhsc4 = 10;
    if (has_mainbeamlampscmdhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mainbeamlampscmdhsc4());
    }

    // optional int32 rdircnlampscmdhsc4 = 11;
    if (has_rdircnlampscmdhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rdircnlampscmdhsc4());
    }

    // optional int32 revsnglghtcmdhsc4 = 12;
    if (has_revsnglghtcmdhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->revsnglghtcmdhsc4());
    }

    // optional int32 rrfoglampcmdhsc4 = 13;
    if (has_rrfoglampcmdhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rrfoglampcmdhsc4());
    }

    // optional int32 widthlmptaillightcmdhsc4 = 14;
    if (has_widthlmptaillightcmdhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->widthlmptaillightcmdhsc4());
    }

    // optional int32 wipercmdhsc4 = 15;
    if (has_wipercmdhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wipercmdhsc4());
    }

    // optional int32 wshrcmdhsc4 = 16;
    if (has_wshrcmdhsc4()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wshrcmdhsc4());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Idcstatus8_18::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Idcstatus8_18*>(&from));
}

void Idcstatus8_18::MergeFrom(const Idcstatus8_18& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:atd.drivers.hsc4.Idcstatus8_18)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      distancetostop_ = from.distancetostop_;
    }
    if (cached_has_bits & 0x00000002u) {
      parmtrobg2hsc4_ = from.parmtrobg2hsc4_;
    }
    if (cached_has_bits & 0x00000004u) {
      parmtrobg1hsc4_ = from.parmtrobg1hsc4_;
    }
    if (cached_has_bits & 0x00000008u) {
      brklghtscmdhsc4_ = from.brklghtscmdhsc4_;
    }
    if (cached_has_bits & 0x00000010u) {
      dangerouswrnnglghtcmdhsc4_ = from.dangerouswrnnglghtcmdhsc4_;
    }
    if (cached_has_bits & 0x00000020u) {
      dipdbeamlampscmdhsc4_ = from.dipdbeamlampscmdhsc4_;
    }
    if (cached_has_bits & 0x00000040u) {
      frtfoglampcmdhsc4_ = from.frtfoglampcmdhsc4_;
    }
    if (cached_has_bits & 0x00000080u) {
      horncmdhsc4_ = from.horncmdhsc4_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      ldircnlampscmdhsc4_ = from.ldircnlampscmdhsc4_;
    }
    if (cached_has_bits & 0x00000200u) {
      mainbeamlampscmdhsc4_ = from.mainbeamlampscmdhsc4_;
    }
    if (cached_has_bits & 0x00000400u) {
      rdircnlampscmdhsc4_ = from.rdircnlampscmdhsc4_;
    }
    if (cached_has_bits & 0x00000800u) {
      revsnglghtcmdhsc4_ = from.revsnglghtcmdhsc4_;
    }
    if (cached_has_bits & 0x00001000u) {
      rrfoglampcmdhsc4_ = from.rrfoglampcmdhsc4_;
    }
    if (cached_has_bits & 0x00002000u) {
      widthlmptaillightcmdhsc4_ = from.widthlmptaillightcmdhsc4_;
    }
    if (cached_has_bits & 0x00004000u) {
      wipercmdhsc4_ = from.wipercmdhsc4_;
    }
    if (cached_has_bits & 0x00008000u) {
      wshrcmdhsc4_ = from.wshrcmdhsc4_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Idcstatus8_18::CopyFrom(const Idcstatus8_18& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:atd.drivers.hsc4.Idcstatus8_18)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Idcstatus8_18::IsInitialized() const {
  return true;
}

void Idcstatus8_18::Swap(Idcstatus8_18* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Idcstatus8_18::InternalSwap(Idcstatus8_18* other) {
  std::swap(distancetostop_, other->distancetostop_);
  std::swap(parmtrobg2hsc4_, other->parmtrobg2hsc4_);
  std::swap(parmtrobg1hsc4_, other->parmtrobg1hsc4_);
  std::swap(brklghtscmdhsc4_, other->brklghtscmdhsc4_);
  std::swap(dangerouswrnnglghtcmdhsc4_, other->dangerouswrnnglghtcmdhsc4_);
  std::swap(dipdbeamlampscmdhsc4_, other->dipdbeamlampscmdhsc4_);
  std::swap(frtfoglampcmdhsc4_, other->frtfoglampcmdhsc4_);
  std::swap(horncmdhsc4_, other->horncmdhsc4_);
  std::swap(ldircnlampscmdhsc4_, other->ldircnlampscmdhsc4_);
  std::swap(mainbeamlampscmdhsc4_, other->mainbeamlampscmdhsc4_);
  std::swap(rdircnlampscmdhsc4_, other->rdircnlampscmdhsc4_);
  std::swap(revsnglghtcmdhsc4_, other->revsnglghtcmdhsc4_);
  std::swap(rrfoglampcmdhsc4_, other->rrfoglampcmdhsc4_);
  std::swap(widthlmptaillightcmdhsc4_, other->widthlmptaillightcmdhsc4_);
  std::swap(wipercmdhsc4_, other->wipercmdhsc4_);
  std::swap(wshrcmdhsc4_, other->wshrcmdhsc4_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Idcstatus8_18::GetTypeName() const {
  return "atd.drivers.hsc4.Idcstatus8_18";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Idcstatus8_18

// optional double distancetostop = 1;
bool Idcstatus8_18::has_distancetostop() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Idcstatus8_18::set_has_distancetostop() {
  _has_bits_[0] |= 0x00000001u;
}
void Idcstatus8_18::clear_has_distancetostop() {
  _has_bits_[0] &= ~0x00000001u;
}
void Idcstatus8_18::clear_distancetostop() {
  distancetostop_ = 0;
  clear_has_distancetostop();
}
double Idcstatus8_18::distancetostop() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus8_18.distancetostop)
  return distancetostop_;
}
void Idcstatus8_18::set_distancetostop(double value) {
  set_has_distancetostop();
  distancetostop_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus8_18.distancetostop)
}

// optional double parmtrobg2hsc4 = 2;
bool Idcstatus8_18::has_parmtrobg2hsc4() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Idcstatus8_18::set_has_parmtrobg2hsc4() {
  _has_bits_[0] |= 0x00000002u;
}
void Idcstatus8_18::clear_has_parmtrobg2hsc4() {
  _has_bits_[0] &= ~0x00000002u;
}
void Idcstatus8_18::clear_parmtrobg2hsc4() {
  parmtrobg2hsc4_ = 0;
  clear_has_parmtrobg2hsc4();
}
double Idcstatus8_18::parmtrobg2hsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus8_18.parmtrobg2hsc4)
  return parmtrobg2hsc4_;
}
void Idcstatus8_18::set_parmtrobg2hsc4(double value) {
  set_has_parmtrobg2hsc4();
  parmtrobg2hsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus8_18.parmtrobg2hsc4)
}

// optional double parmtrobg1hsc4 = 3;
bool Idcstatus8_18::has_parmtrobg1hsc4() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Idcstatus8_18::set_has_parmtrobg1hsc4() {
  _has_bits_[0] |= 0x00000004u;
}
void Idcstatus8_18::clear_has_parmtrobg1hsc4() {
  _has_bits_[0] &= ~0x00000004u;
}
void Idcstatus8_18::clear_parmtrobg1hsc4() {
  parmtrobg1hsc4_ = 0;
  clear_has_parmtrobg1hsc4();
}
double Idcstatus8_18::parmtrobg1hsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus8_18.parmtrobg1hsc4)
  return parmtrobg1hsc4_;
}
void Idcstatus8_18::set_parmtrobg1hsc4(double value) {
  set_has_parmtrobg1hsc4();
  parmtrobg1hsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus8_18.parmtrobg1hsc4)
}

// optional int32 brklghtscmdhsc4 = 4;
bool Idcstatus8_18::has_brklghtscmdhsc4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Idcstatus8_18::set_has_brklghtscmdhsc4() {
  _has_bits_[0] |= 0x00000008u;
}
void Idcstatus8_18::clear_has_brklghtscmdhsc4() {
  _has_bits_[0] &= ~0x00000008u;
}
void Idcstatus8_18::clear_brklghtscmdhsc4() {
  brklghtscmdhsc4_ = 0;
  clear_has_brklghtscmdhsc4();
}
::google::protobuf::int32 Idcstatus8_18::brklghtscmdhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus8_18.brklghtscmdhsc4)
  return brklghtscmdhsc4_;
}
void Idcstatus8_18::set_brklghtscmdhsc4(::google::protobuf::int32 value) {
  set_has_brklghtscmdhsc4();
  brklghtscmdhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus8_18.brklghtscmdhsc4)
}

// optional int32 dangerouswrnnglghtcmdhsc4 = 5;
bool Idcstatus8_18::has_dangerouswrnnglghtcmdhsc4() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Idcstatus8_18::set_has_dangerouswrnnglghtcmdhsc4() {
  _has_bits_[0] |= 0x00000010u;
}
void Idcstatus8_18::clear_has_dangerouswrnnglghtcmdhsc4() {
  _has_bits_[0] &= ~0x00000010u;
}
void Idcstatus8_18::clear_dangerouswrnnglghtcmdhsc4() {
  dangerouswrnnglghtcmdhsc4_ = 0;
  clear_has_dangerouswrnnglghtcmdhsc4();
}
::google::protobuf::int32 Idcstatus8_18::dangerouswrnnglghtcmdhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus8_18.dangerouswrnnglghtcmdhsc4)
  return dangerouswrnnglghtcmdhsc4_;
}
void Idcstatus8_18::set_dangerouswrnnglghtcmdhsc4(::google::protobuf::int32 value) {
  set_has_dangerouswrnnglghtcmdhsc4();
  dangerouswrnnglghtcmdhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus8_18.dangerouswrnnglghtcmdhsc4)
}

// optional int32 dipdbeamlampscmdhsc4 = 6;
bool Idcstatus8_18::has_dipdbeamlampscmdhsc4() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Idcstatus8_18::set_has_dipdbeamlampscmdhsc4() {
  _has_bits_[0] |= 0x00000020u;
}
void Idcstatus8_18::clear_has_dipdbeamlampscmdhsc4() {
  _has_bits_[0] &= ~0x00000020u;
}
void Idcstatus8_18::clear_dipdbeamlampscmdhsc4() {
  dipdbeamlampscmdhsc4_ = 0;
  clear_has_dipdbeamlampscmdhsc4();
}
::google::protobuf::int32 Idcstatus8_18::dipdbeamlampscmdhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus8_18.dipdbeamlampscmdhsc4)
  return dipdbeamlampscmdhsc4_;
}
void Idcstatus8_18::set_dipdbeamlampscmdhsc4(::google::protobuf::int32 value) {
  set_has_dipdbeamlampscmdhsc4();
  dipdbeamlampscmdhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus8_18.dipdbeamlampscmdhsc4)
}

// optional int32 frtfoglampcmdhsc4 = 7;
bool Idcstatus8_18::has_frtfoglampcmdhsc4() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Idcstatus8_18::set_has_frtfoglampcmdhsc4() {
  _has_bits_[0] |= 0x00000040u;
}
void Idcstatus8_18::clear_has_frtfoglampcmdhsc4() {
  _has_bits_[0] &= ~0x00000040u;
}
void Idcstatus8_18::clear_frtfoglampcmdhsc4() {
  frtfoglampcmdhsc4_ = 0;
  clear_has_frtfoglampcmdhsc4();
}
::google::protobuf::int32 Idcstatus8_18::frtfoglampcmdhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus8_18.frtfoglampcmdhsc4)
  return frtfoglampcmdhsc4_;
}
void Idcstatus8_18::set_frtfoglampcmdhsc4(::google::protobuf::int32 value) {
  set_has_frtfoglampcmdhsc4();
  frtfoglampcmdhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus8_18.frtfoglampcmdhsc4)
}

// optional int32 horncmdhsc4 = 8;
bool Idcstatus8_18::has_horncmdhsc4() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Idcstatus8_18::set_has_horncmdhsc4() {
  _has_bits_[0] |= 0x00000080u;
}
void Idcstatus8_18::clear_has_horncmdhsc4() {
  _has_bits_[0] &= ~0x00000080u;
}
void Idcstatus8_18::clear_horncmdhsc4() {
  horncmdhsc4_ = 0;
  clear_has_horncmdhsc4();
}
::google::protobuf::int32 Idcstatus8_18::horncmdhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus8_18.horncmdhsc4)
  return horncmdhsc4_;
}
void Idcstatus8_18::set_horncmdhsc4(::google::protobuf::int32 value) {
  set_has_horncmdhsc4();
  horncmdhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus8_18.horncmdhsc4)
}

// optional int32 ldircnlampscmdhsc4 = 9;
bool Idcstatus8_18::has_ldircnlampscmdhsc4() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Idcstatus8_18::set_has_ldircnlampscmdhsc4() {
  _has_bits_[0] |= 0x00000100u;
}
void Idcstatus8_18::clear_has_ldircnlampscmdhsc4() {
  _has_bits_[0] &= ~0x00000100u;
}
void Idcstatus8_18::clear_ldircnlampscmdhsc4() {
  ldircnlampscmdhsc4_ = 0;
  clear_has_ldircnlampscmdhsc4();
}
::google::protobuf::int32 Idcstatus8_18::ldircnlampscmdhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus8_18.ldircnlampscmdhsc4)
  return ldircnlampscmdhsc4_;
}
void Idcstatus8_18::set_ldircnlampscmdhsc4(::google::protobuf::int32 value) {
  set_has_ldircnlampscmdhsc4();
  ldircnlampscmdhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus8_18.ldircnlampscmdhsc4)
}

// optional int32 mainbeamlampscmdhsc4 = 10;
bool Idcstatus8_18::has_mainbeamlampscmdhsc4() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Idcstatus8_18::set_has_mainbeamlampscmdhsc4() {
  _has_bits_[0] |= 0x00000200u;
}
void Idcstatus8_18::clear_has_mainbeamlampscmdhsc4() {
  _has_bits_[0] &= ~0x00000200u;
}
void Idcstatus8_18::clear_mainbeamlampscmdhsc4() {
  mainbeamlampscmdhsc4_ = 0;
  clear_has_mainbeamlampscmdhsc4();
}
::google::protobuf::int32 Idcstatus8_18::mainbeamlampscmdhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus8_18.mainbeamlampscmdhsc4)
  return mainbeamlampscmdhsc4_;
}
void Idcstatus8_18::set_mainbeamlampscmdhsc4(::google::protobuf::int32 value) {
  set_has_mainbeamlampscmdhsc4();
  mainbeamlampscmdhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus8_18.mainbeamlampscmdhsc4)
}

// optional int32 rdircnlampscmdhsc4 = 11;
bool Idcstatus8_18::has_rdircnlampscmdhsc4() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void Idcstatus8_18::set_has_rdircnlampscmdhsc4() {
  _has_bits_[0] |= 0x00000400u;
}
void Idcstatus8_18::clear_has_rdircnlampscmdhsc4() {
  _has_bits_[0] &= ~0x00000400u;
}
void Idcstatus8_18::clear_rdircnlampscmdhsc4() {
  rdircnlampscmdhsc4_ = 0;
  clear_has_rdircnlampscmdhsc4();
}
::google::protobuf::int32 Idcstatus8_18::rdircnlampscmdhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus8_18.rdircnlampscmdhsc4)
  return rdircnlampscmdhsc4_;
}
void Idcstatus8_18::set_rdircnlampscmdhsc4(::google::protobuf::int32 value) {
  set_has_rdircnlampscmdhsc4();
  rdircnlampscmdhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus8_18.rdircnlampscmdhsc4)
}

// optional int32 revsnglghtcmdhsc4 = 12;
bool Idcstatus8_18::has_revsnglghtcmdhsc4() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void Idcstatus8_18::set_has_revsnglghtcmdhsc4() {
  _has_bits_[0] |= 0x00000800u;
}
void Idcstatus8_18::clear_has_revsnglghtcmdhsc4() {
  _has_bits_[0] &= ~0x00000800u;
}
void Idcstatus8_18::clear_revsnglghtcmdhsc4() {
  revsnglghtcmdhsc4_ = 0;
  clear_has_revsnglghtcmdhsc4();
}
::google::protobuf::int32 Idcstatus8_18::revsnglghtcmdhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus8_18.revsnglghtcmdhsc4)
  return revsnglghtcmdhsc4_;
}
void Idcstatus8_18::set_revsnglghtcmdhsc4(::google::protobuf::int32 value) {
  set_has_revsnglghtcmdhsc4();
  revsnglghtcmdhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus8_18.revsnglghtcmdhsc4)
}

// optional int32 rrfoglampcmdhsc4 = 13;
bool Idcstatus8_18::has_rrfoglampcmdhsc4() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void Idcstatus8_18::set_has_rrfoglampcmdhsc4() {
  _has_bits_[0] |= 0x00001000u;
}
void Idcstatus8_18::clear_has_rrfoglampcmdhsc4() {
  _has_bits_[0] &= ~0x00001000u;
}
void Idcstatus8_18::clear_rrfoglampcmdhsc4() {
  rrfoglampcmdhsc4_ = 0;
  clear_has_rrfoglampcmdhsc4();
}
::google::protobuf::int32 Idcstatus8_18::rrfoglampcmdhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus8_18.rrfoglampcmdhsc4)
  return rrfoglampcmdhsc4_;
}
void Idcstatus8_18::set_rrfoglampcmdhsc4(::google::protobuf::int32 value) {
  set_has_rrfoglampcmdhsc4();
  rrfoglampcmdhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus8_18.rrfoglampcmdhsc4)
}

// optional int32 widthlmptaillightcmdhsc4 = 14;
bool Idcstatus8_18::has_widthlmptaillightcmdhsc4() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void Idcstatus8_18::set_has_widthlmptaillightcmdhsc4() {
  _has_bits_[0] |= 0x00002000u;
}
void Idcstatus8_18::clear_has_widthlmptaillightcmdhsc4() {
  _has_bits_[0] &= ~0x00002000u;
}
void Idcstatus8_18::clear_widthlmptaillightcmdhsc4() {
  widthlmptaillightcmdhsc4_ = 0;
  clear_has_widthlmptaillightcmdhsc4();
}
::google::protobuf::int32 Idcstatus8_18::widthlmptaillightcmdhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus8_18.widthlmptaillightcmdhsc4)
  return widthlmptaillightcmdhsc4_;
}
void Idcstatus8_18::set_widthlmptaillightcmdhsc4(::google::protobuf::int32 value) {
  set_has_widthlmptaillightcmdhsc4();
  widthlmptaillightcmdhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus8_18.widthlmptaillightcmdhsc4)
}

// optional int32 wipercmdhsc4 = 15;
bool Idcstatus8_18::has_wipercmdhsc4() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void Idcstatus8_18::set_has_wipercmdhsc4() {
  _has_bits_[0] |= 0x00004000u;
}
void Idcstatus8_18::clear_has_wipercmdhsc4() {
  _has_bits_[0] &= ~0x00004000u;
}
void Idcstatus8_18::clear_wipercmdhsc4() {
  wipercmdhsc4_ = 0;
  clear_has_wipercmdhsc4();
}
::google::protobuf::int32 Idcstatus8_18::wipercmdhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus8_18.wipercmdhsc4)
  return wipercmdhsc4_;
}
void Idcstatus8_18::set_wipercmdhsc4(::google::protobuf::int32 value) {
  set_has_wipercmdhsc4();
  wipercmdhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus8_18.wipercmdhsc4)
}

// optional int32 wshrcmdhsc4 = 16;
bool Idcstatus8_18::has_wshrcmdhsc4() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void Idcstatus8_18::set_has_wshrcmdhsc4() {
  _has_bits_[0] |= 0x00008000u;
}
void Idcstatus8_18::clear_has_wshrcmdhsc4() {
  _has_bits_[0] &= ~0x00008000u;
}
void Idcstatus8_18::clear_wshrcmdhsc4() {
  wshrcmdhsc4_ = 0;
  clear_has_wshrcmdhsc4();
}
::google::protobuf::int32 Idcstatus8_18::wshrcmdhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus8_18.wshrcmdhsc4)
  return wshrcmdhsc4_;
}
void Idcstatus8_18::set_wshrcmdhsc4(::google::protobuf::int32 value) {
  set_has_wshrcmdhsc4();
  wshrcmdhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus8_18.wshrcmdhsc4)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Idcstatus6_16::kTrackcoefficiantx5Vhsc4FieldNumber;
const int Idcstatus6_16::kTrackcoefficiantx5Hsc4FieldNumber;
const int Idcstatus6_16::kTrackcoefficianty2Vhsc4FieldNumber;
const int Idcstatus6_16::kTrackcoefficianty2Hsc4FieldNumber;
const int Idcstatus6_16::kTrackcoefficianty1Vhsc4FieldNumber;
const int Idcstatus6_16::kTrackcoefficianty1Hsc4FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Idcstatus6_16::Idcstatus6_16()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:atd.drivers.hsc4.Idcstatus6_16)
}
Idcstatus6_16::Idcstatus6_16(const Idcstatus6_16& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&trackcoefficiantx5hsc4_, &from.trackcoefficiantx5hsc4_,
    reinterpret_cast<char*>(&trackcoefficianty1vhsc4_) -
    reinterpret_cast<char*>(&trackcoefficiantx5hsc4_) + sizeof(trackcoefficianty1vhsc4_));
  // @@protoc_insertion_point(copy_constructor:atd.drivers.hsc4.Idcstatus6_16)
}

void Idcstatus6_16::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&trackcoefficiantx5hsc4_, 0, reinterpret_cast<char*>(&trackcoefficianty1vhsc4_) -
    reinterpret_cast<char*>(&trackcoefficiantx5hsc4_) + sizeof(trackcoefficianty1vhsc4_));
}

Idcstatus6_16::~Idcstatus6_16() {
  // @@protoc_insertion_point(destructor:atd.drivers.hsc4.Idcstatus6_16)
  SharedDtor();
}

void Idcstatus6_16::SharedDtor() {
}

void Idcstatus6_16::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Idcstatus6_16& Idcstatus6_16::default_instance() {
  protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  return *internal_default_instance();
}

Idcstatus6_16* Idcstatus6_16::New(::google::protobuf::Arena* arena) const {
  Idcstatus6_16* n = new Idcstatus6_16;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Idcstatus6_16::Clear() {
// @@protoc_insertion_point(message_clear_start:atd.drivers.hsc4.Idcstatus6_16)
  if (_has_bits_[0 / 32] & 63u) {
    ::memset(&trackcoefficiantx5hsc4_, 0, reinterpret_cast<char*>(&trackcoefficianty1vhsc4_) -
      reinterpret_cast<char*>(&trackcoefficiantx5hsc4_) + sizeof(trackcoefficianty1vhsc4_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Idcstatus6_16::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:atd.drivers.hsc4.Idcstatus6_16)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 trackcoefficiantx5vhsc4 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_trackcoefficiantx5vhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &trackcoefficiantx5vhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double trackcoefficiantx5hsc4 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_trackcoefficiantx5hsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &trackcoefficiantx5hsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 trackcoefficianty2vhsc4 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_trackcoefficianty2vhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &trackcoefficianty2vhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double trackcoefficianty2hsc4 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u)) {
          set_has_trackcoefficianty2hsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &trackcoefficianty2hsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 trackcoefficianty1vhsc4 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_trackcoefficianty1vhsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &trackcoefficianty1vhsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double trackcoefficianty1hsc4 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u)) {
          set_has_trackcoefficianty1hsc4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &trackcoefficianty1hsc4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:atd.drivers.hsc4.Idcstatus6_16)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:atd.drivers.hsc4.Idcstatus6_16)
  return false;
#undef DO_
}

void Idcstatus6_16::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:atd.drivers.hsc4.Idcstatus6_16)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 trackcoefficiantx5vhsc4 = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->trackcoefficiantx5vhsc4(), output);
  }

  // optional double trackcoefficiantx5hsc4 = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->trackcoefficiantx5hsc4(), output);
  }

  // optional int32 trackcoefficianty2vhsc4 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->trackcoefficianty2vhsc4(), output);
  }

  // optional double trackcoefficianty2hsc4 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->trackcoefficianty2hsc4(), output);
  }

  // optional int32 trackcoefficianty1vhsc4 = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->trackcoefficianty1vhsc4(), output);
  }

  // optional double trackcoefficianty1hsc4 = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->trackcoefficianty1hsc4(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:atd.drivers.hsc4.Idcstatus6_16)
}

size_t Idcstatus6_16::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:atd.drivers.hsc4.Idcstatus6_16)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 63u) {
    // optional double trackcoefficiantx5hsc4 = 2;
    if (has_trackcoefficiantx5hsc4()) {
      total_size += 1 + 8;
    }

    // optional int32 trackcoefficiantx5vhsc4 = 1;
    if (has_trackcoefficiantx5vhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->trackcoefficiantx5vhsc4());
    }

    // optional int32 trackcoefficianty2vhsc4 = 3;
    if (has_trackcoefficianty2vhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->trackcoefficianty2vhsc4());
    }

    // optional double trackcoefficianty2hsc4 = 4;
    if (has_trackcoefficianty2hsc4()) {
      total_size += 1 + 8;
    }

    // optional double trackcoefficianty1hsc4 = 6;
    if (has_trackcoefficianty1hsc4()) {
      total_size += 1 + 8;
    }

    // optional int32 trackcoefficianty1vhsc4 = 5;
    if (has_trackcoefficianty1vhsc4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->trackcoefficianty1vhsc4());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Idcstatus6_16::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Idcstatus6_16*>(&from));
}

void Idcstatus6_16::MergeFrom(const Idcstatus6_16& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:atd.drivers.hsc4.Idcstatus6_16)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      trackcoefficiantx5hsc4_ = from.trackcoefficiantx5hsc4_;
    }
    if (cached_has_bits & 0x00000002u) {
      trackcoefficiantx5vhsc4_ = from.trackcoefficiantx5vhsc4_;
    }
    if (cached_has_bits & 0x00000004u) {
      trackcoefficianty2vhsc4_ = from.trackcoefficianty2vhsc4_;
    }
    if (cached_has_bits & 0x00000008u) {
      trackcoefficianty2hsc4_ = from.trackcoefficianty2hsc4_;
    }
    if (cached_has_bits & 0x00000010u) {
      trackcoefficianty1hsc4_ = from.trackcoefficianty1hsc4_;
    }
    if (cached_has_bits & 0x00000020u) {
      trackcoefficianty1vhsc4_ = from.trackcoefficianty1vhsc4_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Idcstatus6_16::CopyFrom(const Idcstatus6_16& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:atd.drivers.hsc4.Idcstatus6_16)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Idcstatus6_16::IsInitialized() const {
  return true;
}

void Idcstatus6_16::Swap(Idcstatus6_16* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Idcstatus6_16::InternalSwap(Idcstatus6_16* other) {
  std::swap(trackcoefficiantx5hsc4_, other->trackcoefficiantx5hsc4_);
  std::swap(trackcoefficiantx5vhsc4_, other->trackcoefficiantx5vhsc4_);
  std::swap(trackcoefficianty2vhsc4_, other->trackcoefficianty2vhsc4_);
  std::swap(trackcoefficianty2hsc4_, other->trackcoefficianty2hsc4_);
  std::swap(trackcoefficianty1hsc4_, other->trackcoefficianty1hsc4_);
  std::swap(trackcoefficianty1vhsc4_, other->trackcoefficianty1vhsc4_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Idcstatus6_16::GetTypeName() const {
  return "atd.drivers.hsc4.Idcstatus6_16";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Idcstatus6_16

// optional int32 trackcoefficiantx5vhsc4 = 1;
bool Idcstatus6_16::has_trackcoefficiantx5vhsc4() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Idcstatus6_16::set_has_trackcoefficiantx5vhsc4() {
  _has_bits_[0] |= 0x00000002u;
}
void Idcstatus6_16::clear_has_trackcoefficiantx5vhsc4() {
  _has_bits_[0] &= ~0x00000002u;
}
void Idcstatus6_16::clear_trackcoefficiantx5vhsc4() {
  trackcoefficiantx5vhsc4_ = 0;
  clear_has_trackcoefficiantx5vhsc4();
}
::google::protobuf::int32 Idcstatus6_16::trackcoefficiantx5vhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus6_16.trackcoefficiantx5vhsc4)
  return trackcoefficiantx5vhsc4_;
}
void Idcstatus6_16::set_trackcoefficiantx5vhsc4(::google::protobuf::int32 value) {
  set_has_trackcoefficiantx5vhsc4();
  trackcoefficiantx5vhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus6_16.trackcoefficiantx5vhsc4)
}

// optional double trackcoefficiantx5hsc4 = 2;
bool Idcstatus6_16::has_trackcoefficiantx5hsc4() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Idcstatus6_16::set_has_trackcoefficiantx5hsc4() {
  _has_bits_[0] |= 0x00000001u;
}
void Idcstatus6_16::clear_has_trackcoefficiantx5hsc4() {
  _has_bits_[0] &= ~0x00000001u;
}
void Idcstatus6_16::clear_trackcoefficiantx5hsc4() {
  trackcoefficiantx5hsc4_ = 0;
  clear_has_trackcoefficiantx5hsc4();
}
double Idcstatus6_16::trackcoefficiantx5hsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus6_16.trackcoefficiantx5hsc4)
  return trackcoefficiantx5hsc4_;
}
void Idcstatus6_16::set_trackcoefficiantx5hsc4(double value) {
  set_has_trackcoefficiantx5hsc4();
  trackcoefficiantx5hsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus6_16.trackcoefficiantx5hsc4)
}

// optional int32 trackcoefficianty2vhsc4 = 3;
bool Idcstatus6_16::has_trackcoefficianty2vhsc4() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Idcstatus6_16::set_has_trackcoefficianty2vhsc4() {
  _has_bits_[0] |= 0x00000004u;
}
void Idcstatus6_16::clear_has_trackcoefficianty2vhsc4() {
  _has_bits_[0] &= ~0x00000004u;
}
void Idcstatus6_16::clear_trackcoefficianty2vhsc4() {
  trackcoefficianty2vhsc4_ = 0;
  clear_has_trackcoefficianty2vhsc4();
}
::google::protobuf::int32 Idcstatus6_16::trackcoefficianty2vhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus6_16.trackcoefficianty2vhsc4)
  return trackcoefficianty2vhsc4_;
}
void Idcstatus6_16::set_trackcoefficianty2vhsc4(::google::protobuf::int32 value) {
  set_has_trackcoefficianty2vhsc4();
  trackcoefficianty2vhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus6_16.trackcoefficianty2vhsc4)
}

// optional double trackcoefficianty2hsc4 = 4;
bool Idcstatus6_16::has_trackcoefficianty2hsc4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Idcstatus6_16::set_has_trackcoefficianty2hsc4() {
  _has_bits_[0] |= 0x00000008u;
}
void Idcstatus6_16::clear_has_trackcoefficianty2hsc4() {
  _has_bits_[0] &= ~0x00000008u;
}
void Idcstatus6_16::clear_trackcoefficianty2hsc4() {
  trackcoefficianty2hsc4_ = 0;
  clear_has_trackcoefficianty2hsc4();
}
double Idcstatus6_16::trackcoefficianty2hsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus6_16.trackcoefficianty2hsc4)
  return trackcoefficianty2hsc4_;
}
void Idcstatus6_16::set_trackcoefficianty2hsc4(double value) {
  set_has_trackcoefficianty2hsc4();
  trackcoefficianty2hsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus6_16.trackcoefficianty2hsc4)
}

// optional int32 trackcoefficianty1vhsc4 = 5;
bool Idcstatus6_16::has_trackcoefficianty1vhsc4() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Idcstatus6_16::set_has_trackcoefficianty1vhsc4() {
  _has_bits_[0] |= 0x00000020u;
}
void Idcstatus6_16::clear_has_trackcoefficianty1vhsc4() {
  _has_bits_[0] &= ~0x00000020u;
}
void Idcstatus6_16::clear_trackcoefficianty1vhsc4() {
  trackcoefficianty1vhsc4_ = 0;
  clear_has_trackcoefficianty1vhsc4();
}
::google::protobuf::int32 Idcstatus6_16::trackcoefficianty1vhsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus6_16.trackcoefficianty1vhsc4)
  return trackcoefficianty1vhsc4_;
}
void Idcstatus6_16::set_trackcoefficianty1vhsc4(::google::protobuf::int32 value) {
  set_has_trackcoefficianty1vhsc4();
  trackcoefficianty1vhsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus6_16.trackcoefficianty1vhsc4)
}

// optional double trackcoefficianty1hsc4 = 6;
bool Idcstatus6_16::has_trackcoefficianty1hsc4() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Idcstatus6_16::set_has_trackcoefficianty1hsc4() {
  _has_bits_[0] |= 0x00000010u;
}
void Idcstatus6_16::clear_has_trackcoefficianty1hsc4() {
  _has_bits_[0] &= ~0x00000010u;
}
void Idcstatus6_16::clear_trackcoefficianty1hsc4() {
  trackcoefficianty1hsc4_ = 0;
  clear_has_trackcoefficianty1hsc4();
}
double Idcstatus6_16::trackcoefficianty1hsc4() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Idcstatus6_16.trackcoefficianty1hsc4)
  return trackcoefficianty1hsc4_;
}
void Idcstatus6_16::set_trackcoefficianty1hsc4(double value) {
  set_has_trackcoefficianty1hsc4();
  trackcoefficianty1hsc4_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Idcstatus6_16.trackcoefficianty1hsc4)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vcustatus8_28::kTimedspfmthsc2FieldNumber;
const int Vcustatus8_28::kSecsofminutehsc2FieldNumber;
const int Vcustatus8_28::kMinuteofhourhsc2FieldNumber;
const int Vcustatus8_28::kHourofdayhsc2FieldNumber;
const int Vcustatus8_28::kCalendaryearhsc5FieldNumber;
const int Vcustatus8_28::kCalendarmonthhsc2FieldNumber;
const int Vcustatus8_28::kCalendardayhsc2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vcustatus8_28::Vcustatus8_28()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:atd.drivers.hsc4.Vcustatus8_28)
}
Vcustatus8_28::Vcustatus8_28(const Vcustatus8_28& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&timedspfmthsc2_, &from.timedspfmthsc2_,
    reinterpret_cast<char*>(&calendardayhsc2_) -
    reinterpret_cast<char*>(&timedspfmthsc2_) + sizeof(calendardayhsc2_));
  // @@protoc_insertion_point(copy_constructor:atd.drivers.hsc4.Vcustatus8_28)
}

void Vcustatus8_28::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&timedspfmthsc2_, 0, reinterpret_cast<char*>(&calendardayhsc2_) -
    reinterpret_cast<char*>(&timedspfmthsc2_) + sizeof(calendardayhsc2_));
}

Vcustatus8_28::~Vcustatus8_28() {
  // @@protoc_insertion_point(destructor:atd.drivers.hsc4.Vcustatus8_28)
  SharedDtor();
}

void Vcustatus8_28::SharedDtor() {
}

void Vcustatus8_28::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Vcustatus8_28& Vcustatus8_28::default_instance() {
  protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  return *internal_default_instance();
}

Vcustatus8_28* Vcustatus8_28::New(::google::protobuf::Arena* arena) const {
  Vcustatus8_28* n = new Vcustatus8_28;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vcustatus8_28::Clear() {
// @@protoc_insertion_point(message_clear_start:atd.drivers.hsc4.Vcustatus8_28)
  if (_has_bits_[0 / 32] & 127u) {
    ::memset(&timedspfmthsc2_, 0, reinterpret_cast<char*>(&calendardayhsc2_) -
      reinterpret_cast<char*>(&timedspfmthsc2_) + sizeof(calendardayhsc2_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Vcustatus8_28::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:atd.drivers.hsc4.Vcustatus8_28)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool timedspfmthsc2 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_timedspfmthsc2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &timedspfmthsc2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 secsofminutehsc2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_secsofminutehsc2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &secsofminutehsc2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 minuteofhourhsc2 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_minuteofhourhsc2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &minuteofhourhsc2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 hourofdayhsc2 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_hourofdayhsc2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hourofdayhsc2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 calendaryearhsc5 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_calendaryearhsc5();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &calendaryearhsc5_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 calendarmonthhsc2 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_calendarmonthhsc2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &calendarmonthhsc2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 calendardayhsc2 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_calendardayhsc2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &calendardayhsc2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:atd.drivers.hsc4.Vcustatus8_28)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:atd.drivers.hsc4.Vcustatus8_28)
  return false;
#undef DO_
}

void Vcustatus8_28::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:atd.drivers.hsc4.Vcustatus8_28)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool timedspfmthsc2 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->timedspfmthsc2(), output);
  }

  // optional int32 secsofminutehsc2 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->secsofminutehsc2(), output);
  }

  // optional int32 minuteofhourhsc2 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->minuteofhourhsc2(), output);
  }

  // optional int32 hourofdayhsc2 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->hourofdayhsc2(), output);
  }

  // optional int32 calendaryearhsc5 = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->calendaryearhsc5(), output);
  }

  // optional int32 calendarmonthhsc2 = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->calendarmonthhsc2(), output);
  }

  // optional int32 calendardayhsc2 = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->calendardayhsc2(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:atd.drivers.hsc4.Vcustatus8_28)
}

size_t Vcustatus8_28::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:atd.drivers.hsc4.Vcustatus8_28)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 127u) {
    // optional bool timedspfmthsc2 = 1;
    if (has_timedspfmthsc2()) {
      total_size += 1 + 1;
    }

    // optional int32 secsofminutehsc2 = 2;
    if (has_secsofminutehsc2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->secsofminutehsc2());
    }

    // optional int32 minuteofhourhsc2 = 3;
    if (has_minuteofhourhsc2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->minuteofhourhsc2());
    }

    // optional int32 hourofdayhsc2 = 4;
    if (has_hourofdayhsc2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hourofdayhsc2());
    }

    // optional int32 calendaryearhsc5 = 5;
    if (has_calendaryearhsc5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->calendaryearhsc5());
    }

    // optional int32 calendarmonthhsc2 = 6;
    if (has_calendarmonthhsc2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->calendarmonthhsc2());
    }

    // optional int32 calendardayhsc2 = 7;
    if (has_calendardayhsc2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->calendardayhsc2());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Vcustatus8_28::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Vcustatus8_28*>(&from));
}

void Vcustatus8_28::MergeFrom(const Vcustatus8_28& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:atd.drivers.hsc4.Vcustatus8_28)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      timedspfmthsc2_ = from.timedspfmthsc2_;
    }
    if (cached_has_bits & 0x00000002u) {
      secsofminutehsc2_ = from.secsofminutehsc2_;
    }
    if (cached_has_bits & 0x00000004u) {
      minuteofhourhsc2_ = from.minuteofhourhsc2_;
    }
    if (cached_has_bits & 0x00000008u) {
      hourofdayhsc2_ = from.hourofdayhsc2_;
    }
    if (cached_has_bits & 0x00000010u) {
      calendaryearhsc5_ = from.calendaryearhsc5_;
    }
    if (cached_has_bits & 0x00000020u) {
      calendarmonthhsc2_ = from.calendarmonthhsc2_;
    }
    if (cached_has_bits & 0x00000040u) {
      calendardayhsc2_ = from.calendardayhsc2_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Vcustatus8_28::CopyFrom(const Vcustatus8_28& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:atd.drivers.hsc4.Vcustatus8_28)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vcustatus8_28::IsInitialized() const {
  return true;
}

void Vcustatus8_28::Swap(Vcustatus8_28* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vcustatus8_28::InternalSwap(Vcustatus8_28* other) {
  std::swap(timedspfmthsc2_, other->timedspfmthsc2_);
  std::swap(secsofminutehsc2_, other->secsofminutehsc2_);
  std::swap(minuteofhourhsc2_, other->minuteofhourhsc2_);
  std::swap(hourofdayhsc2_, other->hourofdayhsc2_);
  std::swap(calendaryearhsc5_, other->calendaryearhsc5_);
  std::swap(calendarmonthhsc2_, other->calendarmonthhsc2_);
  std::swap(calendardayhsc2_, other->calendardayhsc2_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Vcustatus8_28::GetTypeName() const {
  return "atd.drivers.hsc4.Vcustatus8_28";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Vcustatus8_28

// optional bool timedspfmthsc2 = 1;
bool Vcustatus8_28::has_timedspfmthsc2() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Vcustatus8_28::set_has_timedspfmthsc2() {
  _has_bits_[0] |= 0x00000001u;
}
void Vcustatus8_28::clear_has_timedspfmthsc2() {
  _has_bits_[0] &= ~0x00000001u;
}
void Vcustatus8_28::clear_timedspfmthsc2() {
  timedspfmthsc2_ = false;
  clear_has_timedspfmthsc2();
}
bool Vcustatus8_28::timedspfmthsc2() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus8_28.timedspfmthsc2)
  return timedspfmthsc2_;
}
void Vcustatus8_28::set_timedspfmthsc2(bool value) {
  set_has_timedspfmthsc2();
  timedspfmthsc2_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus8_28.timedspfmthsc2)
}

// optional int32 secsofminutehsc2 = 2;
bool Vcustatus8_28::has_secsofminutehsc2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Vcustatus8_28::set_has_secsofminutehsc2() {
  _has_bits_[0] |= 0x00000002u;
}
void Vcustatus8_28::clear_has_secsofminutehsc2() {
  _has_bits_[0] &= ~0x00000002u;
}
void Vcustatus8_28::clear_secsofminutehsc2() {
  secsofminutehsc2_ = 0;
  clear_has_secsofminutehsc2();
}
::google::protobuf::int32 Vcustatus8_28::secsofminutehsc2() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus8_28.secsofminutehsc2)
  return secsofminutehsc2_;
}
void Vcustatus8_28::set_secsofminutehsc2(::google::protobuf::int32 value) {
  set_has_secsofminutehsc2();
  secsofminutehsc2_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus8_28.secsofminutehsc2)
}

// optional int32 minuteofhourhsc2 = 3;
bool Vcustatus8_28::has_minuteofhourhsc2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Vcustatus8_28::set_has_minuteofhourhsc2() {
  _has_bits_[0] |= 0x00000004u;
}
void Vcustatus8_28::clear_has_minuteofhourhsc2() {
  _has_bits_[0] &= ~0x00000004u;
}
void Vcustatus8_28::clear_minuteofhourhsc2() {
  minuteofhourhsc2_ = 0;
  clear_has_minuteofhourhsc2();
}
::google::protobuf::int32 Vcustatus8_28::minuteofhourhsc2() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus8_28.minuteofhourhsc2)
  return minuteofhourhsc2_;
}
void Vcustatus8_28::set_minuteofhourhsc2(::google::protobuf::int32 value) {
  set_has_minuteofhourhsc2();
  minuteofhourhsc2_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus8_28.minuteofhourhsc2)
}

// optional int32 hourofdayhsc2 = 4;
bool Vcustatus8_28::has_hourofdayhsc2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Vcustatus8_28::set_has_hourofdayhsc2() {
  _has_bits_[0] |= 0x00000008u;
}
void Vcustatus8_28::clear_has_hourofdayhsc2() {
  _has_bits_[0] &= ~0x00000008u;
}
void Vcustatus8_28::clear_hourofdayhsc2() {
  hourofdayhsc2_ = 0;
  clear_has_hourofdayhsc2();
}
::google::protobuf::int32 Vcustatus8_28::hourofdayhsc2() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus8_28.hourofdayhsc2)
  return hourofdayhsc2_;
}
void Vcustatus8_28::set_hourofdayhsc2(::google::protobuf::int32 value) {
  set_has_hourofdayhsc2();
  hourofdayhsc2_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus8_28.hourofdayhsc2)
}

// optional int32 calendaryearhsc5 = 5;
bool Vcustatus8_28::has_calendaryearhsc5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Vcustatus8_28::set_has_calendaryearhsc5() {
  _has_bits_[0] |= 0x00000010u;
}
void Vcustatus8_28::clear_has_calendaryearhsc5() {
  _has_bits_[0] &= ~0x00000010u;
}
void Vcustatus8_28::clear_calendaryearhsc5() {
  calendaryearhsc5_ = 0;
  clear_has_calendaryearhsc5();
}
::google::protobuf::int32 Vcustatus8_28::calendaryearhsc5() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus8_28.calendaryearhsc5)
  return calendaryearhsc5_;
}
void Vcustatus8_28::set_calendaryearhsc5(::google::protobuf::int32 value) {
  set_has_calendaryearhsc5();
  calendaryearhsc5_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus8_28.calendaryearhsc5)
}

// optional int32 calendarmonthhsc2 = 6;
bool Vcustatus8_28::has_calendarmonthhsc2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Vcustatus8_28::set_has_calendarmonthhsc2() {
  _has_bits_[0] |= 0x00000020u;
}
void Vcustatus8_28::clear_has_calendarmonthhsc2() {
  _has_bits_[0] &= ~0x00000020u;
}
void Vcustatus8_28::clear_calendarmonthhsc2() {
  calendarmonthhsc2_ = 0;
  clear_has_calendarmonthhsc2();
}
::google::protobuf::int32 Vcustatus8_28::calendarmonthhsc2() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus8_28.calendarmonthhsc2)
  return calendarmonthhsc2_;
}
void Vcustatus8_28::set_calendarmonthhsc2(::google::protobuf::int32 value) {
  set_has_calendarmonthhsc2();
  calendarmonthhsc2_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus8_28.calendarmonthhsc2)
}

// optional int32 calendardayhsc2 = 7;
bool Vcustatus8_28::has_calendardayhsc2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Vcustatus8_28::set_has_calendardayhsc2() {
  _has_bits_[0] |= 0x00000040u;
}
void Vcustatus8_28::clear_has_calendardayhsc2() {
  _has_bits_[0] &= ~0x00000040u;
}
void Vcustatus8_28::clear_calendardayhsc2() {
  calendardayhsc2_ = 0;
  clear_has_calendardayhsc2();
}
::google::protobuf::int32 Vcustatus8_28::calendardayhsc2() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus8_28.calendardayhsc2)
  return calendardayhsc2_;
}
void Vcustatus8_28::set_calendardayhsc2(::google::protobuf::int32 value) {
  set_has_calendardayhsc2();
  calendardayhsc2_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus8_28.calendardayhsc2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vcustatus9_29::kVcumainidFieldNumber;
const int Vcustatus9_29::kVcuaddonsidFieldNumber;
const int Vcustatus9_29::kVehicleplatformFieldNumber;
const int Vcustatus9_29::kVcustageFieldNumber;
const int Vcustatus9_29::kProjectnameFieldNumber;
const int Vcustatus9_29::kComponentFieldNumber;
const int Vcustatus9_29::kVehodohsc2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vcustatus9_29::Vcustatus9_29()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:atd.drivers.hsc4.Vcustatus9_29)
}
Vcustatus9_29::Vcustatus9_29(const Vcustatus9_29& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&vcumainid_, &from.vcumainid_,
    reinterpret_cast<char*>(&vehodohsc2_) -
    reinterpret_cast<char*>(&vcumainid_) + sizeof(vehodohsc2_));
  // @@protoc_insertion_point(copy_constructor:atd.drivers.hsc4.Vcustatus9_29)
}

void Vcustatus9_29::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&vcumainid_, 0, reinterpret_cast<char*>(&vehodohsc2_) -
    reinterpret_cast<char*>(&vcumainid_) + sizeof(vehodohsc2_));
}

Vcustatus9_29::~Vcustatus9_29() {
  // @@protoc_insertion_point(destructor:atd.drivers.hsc4.Vcustatus9_29)
  SharedDtor();
}

void Vcustatus9_29::SharedDtor() {
}

void Vcustatus9_29::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Vcustatus9_29& Vcustatus9_29::default_instance() {
  protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  return *internal_default_instance();
}

Vcustatus9_29* Vcustatus9_29::New(::google::protobuf::Arena* arena) const {
  Vcustatus9_29* n = new Vcustatus9_29;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vcustatus9_29::Clear() {
// @@protoc_insertion_point(message_clear_start:atd.drivers.hsc4.Vcustatus9_29)
  if (_has_bits_[0 / 32] & 127u) {
    ::memset(&vcumainid_, 0, reinterpret_cast<char*>(&vehodohsc2_) -
      reinterpret_cast<char*>(&vcumainid_) + sizeof(vehodohsc2_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Vcustatus9_29::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:atd.drivers.hsc4.Vcustatus9_29)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 vcumainid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_vcumainid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vcumainid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vcuaddonsid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_vcuaddonsid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vcuaddonsid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vehicleplatform = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_vehicleplatform();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vehicleplatform_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vcustage = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_vcustage();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vcustage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 projectname = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_projectname();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectname_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 component = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_component();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &component_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vehodohsc2 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_vehodohsc2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vehodohsc2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:atd.drivers.hsc4.Vcustatus9_29)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:atd.drivers.hsc4.Vcustatus9_29)
  return false;
#undef DO_
}

void Vcustatus9_29::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:atd.drivers.hsc4.Vcustatus9_29)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 vcumainid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->vcumainid(), output);
  }

  // optional int32 vcuaddonsid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->vcuaddonsid(), output);
  }

  // optional int32 vehicleplatform = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->vehicleplatform(), output);
  }

  // optional int32 vcustage = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->vcustage(), output);
  }

  // optional int32 projectname = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->projectname(), output);
  }

  // optional int32 component = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->component(), output);
  }

  // optional int32 vehodohsc2 = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->vehodohsc2(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:atd.drivers.hsc4.Vcustatus9_29)
}

size_t Vcustatus9_29::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:atd.drivers.hsc4.Vcustatus9_29)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 127u) {
    // optional int32 vcumainid = 1;
    if (has_vcumainid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vcumainid());
    }

    // optional int32 vcuaddonsid = 2;
    if (has_vcuaddonsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vcuaddonsid());
    }

    // optional int32 vehicleplatform = 3;
    if (has_vehicleplatform()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vehicleplatform());
    }

    // optional int32 vcustage = 4;
    if (has_vcustage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vcustage());
    }

    // optional int32 projectname = 5;
    if (has_projectname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectname());
    }

    // optional int32 component = 6;
    if (has_component()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->component());
    }

    // optional int32 vehodohsc2 = 7;
    if (has_vehodohsc2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vehodohsc2());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Vcustatus9_29::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Vcustatus9_29*>(&from));
}

void Vcustatus9_29::MergeFrom(const Vcustatus9_29& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:atd.drivers.hsc4.Vcustatus9_29)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      vcumainid_ = from.vcumainid_;
    }
    if (cached_has_bits & 0x00000002u) {
      vcuaddonsid_ = from.vcuaddonsid_;
    }
    if (cached_has_bits & 0x00000004u) {
      vehicleplatform_ = from.vehicleplatform_;
    }
    if (cached_has_bits & 0x00000008u) {
      vcustage_ = from.vcustage_;
    }
    if (cached_has_bits & 0x00000010u) {
      projectname_ = from.projectname_;
    }
    if (cached_has_bits & 0x00000020u) {
      component_ = from.component_;
    }
    if (cached_has_bits & 0x00000040u) {
      vehodohsc2_ = from.vehodohsc2_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Vcustatus9_29::CopyFrom(const Vcustatus9_29& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:atd.drivers.hsc4.Vcustatus9_29)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vcustatus9_29::IsInitialized() const {
  return true;
}

void Vcustatus9_29::Swap(Vcustatus9_29* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vcustatus9_29::InternalSwap(Vcustatus9_29* other) {
  std::swap(vcumainid_, other->vcumainid_);
  std::swap(vcuaddonsid_, other->vcuaddonsid_);
  std::swap(vehicleplatform_, other->vehicleplatform_);
  std::swap(vcustage_, other->vcustage_);
  std::swap(projectname_, other->projectname_);
  std::swap(component_, other->component_);
  std::swap(vehodohsc2_, other->vehodohsc2_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Vcustatus9_29::GetTypeName() const {
  return "atd.drivers.hsc4.Vcustatus9_29";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Vcustatus9_29

// optional int32 vcumainid = 1;
bool Vcustatus9_29::has_vcumainid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Vcustatus9_29::set_has_vcumainid() {
  _has_bits_[0] |= 0x00000001u;
}
void Vcustatus9_29::clear_has_vcumainid() {
  _has_bits_[0] &= ~0x00000001u;
}
void Vcustatus9_29::clear_vcumainid() {
  vcumainid_ = 0;
  clear_has_vcumainid();
}
::google::protobuf::int32 Vcustatus9_29::vcumainid() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus9_29.vcumainid)
  return vcumainid_;
}
void Vcustatus9_29::set_vcumainid(::google::protobuf::int32 value) {
  set_has_vcumainid();
  vcumainid_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus9_29.vcumainid)
}

// optional int32 vcuaddonsid = 2;
bool Vcustatus9_29::has_vcuaddonsid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Vcustatus9_29::set_has_vcuaddonsid() {
  _has_bits_[0] |= 0x00000002u;
}
void Vcustatus9_29::clear_has_vcuaddonsid() {
  _has_bits_[0] &= ~0x00000002u;
}
void Vcustatus9_29::clear_vcuaddonsid() {
  vcuaddonsid_ = 0;
  clear_has_vcuaddonsid();
}
::google::protobuf::int32 Vcustatus9_29::vcuaddonsid() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus9_29.vcuaddonsid)
  return vcuaddonsid_;
}
void Vcustatus9_29::set_vcuaddonsid(::google::protobuf::int32 value) {
  set_has_vcuaddonsid();
  vcuaddonsid_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus9_29.vcuaddonsid)
}

// optional int32 vehicleplatform = 3;
bool Vcustatus9_29::has_vehicleplatform() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Vcustatus9_29::set_has_vehicleplatform() {
  _has_bits_[0] |= 0x00000004u;
}
void Vcustatus9_29::clear_has_vehicleplatform() {
  _has_bits_[0] &= ~0x00000004u;
}
void Vcustatus9_29::clear_vehicleplatform() {
  vehicleplatform_ = 0;
  clear_has_vehicleplatform();
}
::google::protobuf::int32 Vcustatus9_29::vehicleplatform() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus9_29.vehicleplatform)
  return vehicleplatform_;
}
void Vcustatus9_29::set_vehicleplatform(::google::protobuf::int32 value) {
  set_has_vehicleplatform();
  vehicleplatform_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus9_29.vehicleplatform)
}

// optional int32 vcustage = 4;
bool Vcustatus9_29::has_vcustage() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Vcustatus9_29::set_has_vcustage() {
  _has_bits_[0] |= 0x00000008u;
}
void Vcustatus9_29::clear_has_vcustage() {
  _has_bits_[0] &= ~0x00000008u;
}
void Vcustatus9_29::clear_vcustage() {
  vcustage_ = 0;
  clear_has_vcustage();
}
::google::protobuf::int32 Vcustatus9_29::vcustage() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus9_29.vcustage)
  return vcustage_;
}
void Vcustatus9_29::set_vcustage(::google::protobuf::int32 value) {
  set_has_vcustage();
  vcustage_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus9_29.vcustage)
}

// optional int32 projectname = 5;
bool Vcustatus9_29::has_projectname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Vcustatus9_29::set_has_projectname() {
  _has_bits_[0] |= 0x00000010u;
}
void Vcustatus9_29::clear_has_projectname() {
  _has_bits_[0] &= ~0x00000010u;
}
void Vcustatus9_29::clear_projectname() {
  projectname_ = 0;
  clear_has_projectname();
}
::google::protobuf::int32 Vcustatus9_29::projectname() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus9_29.projectname)
  return projectname_;
}
void Vcustatus9_29::set_projectname(::google::protobuf::int32 value) {
  set_has_projectname();
  projectname_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus9_29.projectname)
}

// optional int32 component = 6;
bool Vcustatus9_29::has_component() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Vcustatus9_29::set_has_component() {
  _has_bits_[0] |= 0x00000020u;
}
void Vcustatus9_29::clear_has_component() {
  _has_bits_[0] &= ~0x00000020u;
}
void Vcustatus9_29::clear_component() {
  component_ = 0;
  clear_has_component();
}
::google::protobuf::int32 Vcustatus9_29::component() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus9_29.component)
  return component_;
}
void Vcustatus9_29::set_component(::google::protobuf::int32 value) {
  set_has_component();
  component_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus9_29.component)
}

// optional int32 vehodohsc2 = 7;
bool Vcustatus9_29::has_vehodohsc2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Vcustatus9_29::set_has_vehodohsc2() {
  _has_bits_[0] |= 0x00000040u;
}
void Vcustatus9_29::clear_has_vehodohsc2() {
  _has_bits_[0] &= ~0x00000040u;
}
void Vcustatus9_29::clear_vehodohsc2() {
  vehodohsc2_ = 0;
  clear_has_vehodohsc2();
}
::google::protobuf::int32 Vcustatus9_29::vehodohsc2() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Vcustatus9_29.vehodohsc2)
  return vehodohsc2_;
}
void Vcustatus9_29::set_vehodohsc2(::google::protobuf::int32 value) {
  set_has_vehodohsc2();
  vehodohsc2_ = value;
  // @@protoc_insertion_point(field_set:atd.drivers.hsc4.Vcustatus9_29.vehodohsc2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Hsc4::kIdcstatus111FieldNumber;
const int Hsc4::kVcustatus1030FieldNumber;
const int Hsc4::kMecommon2V2560FieldNumber;
const int Hsc4::kIdcstatus91191FieldNumber;
const int Hsc4::kIdcstatus313FieldNumber;
const int Hsc4::kIdcstatus93193FieldNumber;
const int Hsc4::kIdcstatus92192FieldNumber;
const int Hsc4::kIdcstatus212FieldNumber;
const int Hsc4::kIdcstatus717FieldNumber;
const int Hsc4::kIdcstatus414FieldNumber;
const int Hsc4::kVcustatus424FieldNumber;
const int Hsc4::kVcustatus525FieldNumber;
const int Hsc4::kVcustatus626FieldNumber;
const int Hsc4::kVcustatus727FieldNumber;
const int Hsc4::kIdcstatus515FieldNumber;
const int Hsc4::kVcustatus121FieldNumber;
const int Hsc4::kVcustatus222FieldNumber;
const int Hsc4::kVcustatus323FieldNumber;
const int Hsc4::kIdcstatus919FieldNumber;
const int Hsc4::kIdcstatus818FieldNumber;
const int Hsc4::kIdcstatus616FieldNumber;
const int Hsc4::kVcustatus828FieldNumber;
const int Hsc4::kVcustatus929FieldNumber;
const int Hsc4::kHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Hsc4::Hsc4()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:atd.drivers.hsc4.Hsc4)
}
Hsc4::Hsc4(const Hsc4& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_idcstatus1_11()) {
    idcstatus1_11_ = new ::atd::drivers::hsc4::Idcstatus1_11(*from.idcstatus1_11_);
  } else {
    idcstatus1_11_ = NULL;
  }
  if (from.has_vcustatus10_30()) {
    vcustatus10_30_ = new ::atd::drivers::hsc4::Vcustatus10_30(*from.vcustatus10_30_);
  } else {
    vcustatus10_30_ = NULL;
  }
  if (from.has_mecommon2_v2_560()) {
    mecommon2_v2_560_ = new ::atd::drivers::hsc4::Mecommon2_v2_560(*from.mecommon2_v2_560_);
  } else {
    mecommon2_v2_560_ = NULL;
  }
  if (from.has_idcstatus91_191()) {
    idcstatus91_191_ = new ::atd::drivers::hsc4::Idcstatus91_191(*from.idcstatus91_191_);
  } else {
    idcstatus91_191_ = NULL;
  }
  if (from.has_idcstatus3_13()) {
    idcstatus3_13_ = new ::atd::drivers::hsc4::Idcstatus3_13(*from.idcstatus3_13_);
  } else {
    idcstatus3_13_ = NULL;
  }
  if (from.has_idcstatus93_193()) {
    idcstatus93_193_ = new ::atd::drivers::hsc4::Idcstatus93_193(*from.idcstatus93_193_);
  } else {
    idcstatus93_193_ = NULL;
  }
  if (from.has_idcstatus92_192()) {
    idcstatus92_192_ = new ::atd::drivers::hsc4::Idcstatus92_192(*from.idcstatus92_192_);
  } else {
    idcstatus92_192_ = NULL;
  }
  if (from.has_idcstatus2_12()) {
    idcstatus2_12_ = new ::atd::drivers::hsc4::Idcstatus2_12(*from.idcstatus2_12_);
  } else {
    idcstatus2_12_ = NULL;
  }
  if (from.has_idcstatus7_17()) {
    idcstatus7_17_ = new ::atd::drivers::hsc4::Idcstatus7_17(*from.idcstatus7_17_);
  } else {
    idcstatus7_17_ = NULL;
  }
  if (from.has_idcstatus4_14()) {
    idcstatus4_14_ = new ::atd::drivers::hsc4::Idcstatus4_14(*from.idcstatus4_14_);
  } else {
    idcstatus4_14_ = NULL;
  }
  if (from.has_vcustatus4_24()) {
    vcustatus4_24_ = new ::atd::drivers::hsc4::Vcustatus4_24(*from.vcustatus4_24_);
  } else {
    vcustatus4_24_ = NULL;
  }
  if (from.has_vcustatus5_25()) {
    vcustatus5_25_ = new ::atd::drivers::hsc4::Vcustatus5_25(*from.vcustatus5_25_);
  } else {
    vcustatus5_25_ = NULL;
  }
  if (from.has_vcustatus6_26()) {
    vcustatus6_26_ = new ::atd::drivers::hsc4::Vcustatus6_26(*from.vcustatus6_26_);
  } else {
    vcustatus6_26_ = NULL;
  }
  if (from.has_vcustatus7_27()) {
    vcustatus7_27_ = new ::atd::drivers::hsc4::Vcustatus7_27(*from.vcustatus7_27_);
  } else {
    vcustatus7_27_ = NULL;
  }
  if (from.has_idcstatus5_15()) {
    idcstatus5_15_ = new ::atd::drivers::hsc4::Idcstatus5_15(*from.idcstatus5_15_);
  } else {
    idcstatus5_15_ = NULL;
  }
  if (from.has_vcustatus1_21()) {
    vcustatus1_21_ = new ::atd::drivers::hsc4::Vcustatus1_21(*from.vcustatus1_21_);
  } else {
    vcustatus1_21_ = NULL;
  }
  if (from.has_vcustatus2_22()) {
    vcustatus2_22_ = new ::atd::drivers::hsc4::Vcustatus2_22(*from.vcustatus2_22_);
  } else {
    vcustatus2_22_ = NULL;
  }
  if (from.has_vcustatus3_23()) {
    vcustatus3_23_ = new ::atd::drivers::hsc4::Vcustatus3_23(*from.vcustatus3_23_);
  } else {
    vcustatus3_23_ = NULL;
  }
  if (from.has_idcstatus9_19()) {
    idcstatus9_19_ = new ::atd::drivers::hsc4::Idcstatus9_19(*from.idcstatus9_19_);
  } else {
    idcstatus9_19_ = NULL;
  }
  if (from.has_idcstatus8_18()) {
    idcstatus8_18_ = new ::atd::drivers::hsc4::Idcstatus8_18(*from.idcstatus8_18_);
  } else {
    idcstatus8_18_ = NULL;
  }
  if (from.has_idcstatus6_16()) {
    idcstatus6_16_ = new ::atd::drivers::hsc4::Idcstatus6_16(*from.idcstatus6_16_);
  } else {
    idcstatus6_16_ = NULL;
  }
  if (from.has_vcustatus8_28()) {
    vcustatus8_28_ = new ::atd::drivers::hsc4::Vcustatus8_28(*from.vcustatus8_28_);
  } else {
    vcustatus8_28_ = NULL;
  }
  if (from.has_vcustatus9_29()) {
    vcustatus9_29_ = new ::atd::drivers::hsc4::Vcustatus9_29(*from.vcustatus9_29_);
  } else {
    vcustatus9_29_ = NULL;
  }
  if (from.has_header()) {
    header_ = new ::atd::common::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:atd.drivers.hsc4.Hsc4)
}

void Hsc4::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&idcstatus1_11_, 0, reinterpret_cast<char*>(&header_) -
    reinterpret_cast<char*>(&idcstatus1_11_) + sizeof(header_));
}

Hsc4::~Hsc4() {
  // @@protoc_insertion_point(destructor:atd.drivers.hsc4.Hsc4)
  SharedDtor();
}

void Hsc4::SharedDtor() {
  if (this != internal_default_instance()) {
    delete idcstatus1_11_;
  }
  if (this != internal_default_instance()) {
    delete vcustatus10_30_;
  }
  if (this != internal_default_instance()) {
    delete mecommon2_v2_560_;
  }
  if (this != internal_default_instance()) {
    delete idcstatus91_191_;
  }
  if (this != internal_default_instance()) {
    delete idcstatus3_13_;
  }
  if (this != internal_default_instance()) {
    delete idcstatus93_193_;
  }
  if (this != internal_default_instance()) {
    delete idcstatus92_192_;
  }
  if (this != internal_default_instance()) {
    delete idcstatus2_12_;
  }
  if (this != internal_default_instance()) {
    delete idcstatus7_17_;
  }
  if (this != internal_default_instance()) {
    delete idcstatus4_14_;
  }
  if (this != internal_default_instance()) {
    delete vcustatus4_24_;
  }
  if (this != internal_default_instance()) {
    delete vcustatus5_25_;
  }
  if (this != internal_default_instance()) {
    delete vcustatus6_26_;
  }
  if (this != internal_default_instance()) {
    delete vcustatus7_27_;
  }
  if (this != internal_default_instance()) {
    delete idcstatus5_15_;
  }
  if (this != internal_default_instance()) {
    delete vcustatus1_21_;
  }
  if (this != internal_default_instance()) {
    delete vcustatus2_22_;
  }
  if (this != internal_default_instance()) {
    delete vcustatus3_23_;
  }
  if (this != internal_default_instance()) {
    delete idcstatus9_19_;
  }
  if (this != internal_default_instance()) {
    delete idcstatus8_18_;
  }
  if (this != internal_default_instance()) {
    delete idcstatus6_16_;
  }
  if (this != internal_default_instance()) {
    delete vcustatus8_28_;
  }
  if (this != internal_default_instance()) {
    delete vcustatus9_29_;
  }
  if (this != internal_default_instance()) {
    delete header_;
  }
}

void Hsc4::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Hsc4& Hsc4::default_instance() {
  protobuf_modules_2fdrivers_2fradar_2fHSC4_2fhsc4_2eproto::InitDefaults();
  return *internal_default_instance();
}

Hsc4* Hsc4::New(::google::protobuf::Arena* arena) const {
  Hsc4* n = new Hsc4;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Hsc4::Clear() {
// @@protoc_insertion_point(message_clear_start:atd.drivers.hsc4.Hsc4)
  if (_has_bits_[0 / 32] & 255u) {
    if (has_idcstatus1_11()) {
      GOOGLE_DCHECK(idcstatus1_11_ != NULL);
      idcstatus1_11_->::atd::drivers::hsc4::Idcstatus1_11::Clear();
    }
    if (has_vcustatus10_30()) {
      GOOGLE_DCHECK(vcustatus10_30_ != NULL);
      vcustatus10_30_->::atd::drivers::hsc4::Vcustatus10_30::Clear();
    }
    if (has_mecommon2_v2_560()) {
      GOOGLE_DCHECK(mecommon2_v2_560_ != NULL);
      mecommon2_v2_560_->::atd::drivers::hsc4::Mecommon2_v2_560::Clear();
    }
    if (has_idcstatus91_191()) {
      GOOGLE_DCHECK(idcstatus91_191_ != NULL);
      idcstatus91_191_->::atd::drivers::hsc4::Idcstatus91_191::Clear();
    }
    if (has_idcstatus3_13()) {
      GOOGLE_DCHECK(idcstatus3_13_ != NULL);
      idcstatus3_13_->::atd::drivers::hsc4::Idcstatus3_13::Clear();
    }
    if (has_idcstatus93_193()) {
      GOOGLE_DCHECK(idcstatus93_193_ != NULL);
      idcstatus93_193_->::atd::drivers::hsc4::Idcstatus93_193::Clear();
    }
    if (has_idcstatus92_192()) {
      GOOGLE_DCHECK(idcstatus92_192_ != NULL);
      idcstatus92_192_->::atd::drivers::hsc4::Idcstatus92_192::Clear();
    }
    if (has_idcstatus2_12()) {
      GOOGLE_DCHECK(idcstatus2_12_ != NULL);
      idcstatus2_12_->::atd::drivers::hsc4::Idcstatus2_12::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 65280u) {
    if (has_idcstatus7_17()) {
      GOOGLE_DCHECK(idcstatus7_17_ != NULL);
      idcstatus7_17_->::atd::drivers::hsc4::Idcstatus7_17::Clear();
    }
    if (has_idcstatus4_14()) {
      GOOGLE_DCHECK(idcstatus4_14_ != NULL);
      idcstatus4_14_->::atd::drivers::hsc4::Idcstatus4_14::Clear();
    }
    if (has_vcustatus4_24()) {
      GOOGLE_DCHECK(vcustatus4_24_ != NULL);
      vcustatus4_24_->::atd::drivers::hsc4::Vcustatus4_24::Clear();
    }
    if (has_vcustatus5_25()) {
      GOOGLE_DCHECK(vcustatus5_25_ != NULL);
      vcustatus5_25_->::atd::drivers::hsc4::Vcustatus5_25::Clear();
    }
    if (has_vcustatus6_26()) {
      GOOGLE_DCHECK(vcustatus6_26_ != NULL);
      vcustatus6_26_->::atd::drivers::hsc4::Vcustatus6_26::Clear();
    }
    if (has_vcustatus7_27()) {
      GOOGLE_DCHECK(vcustatus7_27_ != NULL);
      vcustatus7_27_->::atd::drivers::hsc4::Vcustatus7_27::Clear();
    }
    if (has_idcstatus5_15()) {
      GOOGLE_DCHECK(idcstatus5_15_ != NULL);
      idcstatus5_15_->::atd::drivers::hsc4::Idcstatus5_15::Clear();
    }
    if (has_vcustatus1_21()) {
      GOOGLE_DCHECK(vcustatus1_21_ != NULL);
      vcustatus1_21_->::atd::drivers::hsc4::Vcustatus1_21::Clear();
    }
  }
  if (_has_bits_[16 / 32] & 16711680u) {
    if (has_vcustatus2_22()) {
      GOOGLE_DCHECK(vcustatus2_22_ != NULL);
      vcustatus2_22_->::atd::drivers::hsc4::Vcustatus2_22::Clear();
    }
    if (has_vcustatus3_23()) {
      GOOGLE_DCHECK(vcustatus3_23_ != NULL);
      vcustatus3_23_->::atd::drivers::hsc4::Vcustatus3_23::Clear();
    }
    if (has_idcstatus9_19()) {
      GOOGLE_DCHECK(idcstatus9_19_ != NULL);
      idcstatus9_19_->::atd::drivers::hsc4::Idcstatus9_19::Clear();
    }
    if (has_idcstatus8_18()) {
      GOOGLE_DCHECK(idcstatus8_18_ != NULL);
      idcstatus8_18_->::atd::drivers::hsc4::Idcstatus8_18::Clear();
    }
    if (has_idcstatus6_16()) {
      GOOGLE_DCHECK(idcstatus6_16_ != NULL);
      idcstatus6_16_->::atd::drivers::hsc4::Idcstatus6_16::Clear();
    }
    if (has_vcustatus8_28()) {
      GOOGLE_DCHECK(vcustatus8_28_ != NULL);
      vcustatus8_28_->::atd::drivers::hsc4::Vcustatus8_28::Clear();
    }
    if (has_vcustatus9_29()) {
      GOOGLE_DCHECK(vcustatus9_29_ != NULL);
      vcustatus9_29_->::atd::drivers::hsc4::Vcustatus9_29::Clear();
    }
    if (has_header()) {
      GOOGLE_DCHECK(header_ != NULL);
      header_->::atd::common::Header::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Hsc4::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:atd.drivers.hsc4.Hsc4)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .atd.drivers.hsc4.Idcstatus1_11 idcstatus1_11 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_idcstatus1_11()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Vcustatus10_30 vcustatus10_30 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_vcustatus10_30()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Mecommon2_v2_560 mecommon2_v2_560 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mecommon2_v2_560()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Idcstatus91_191 idcstatus91_191 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_idcstatus91_191()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Idcstatus3_13 idcstatus3_13 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_idcstatus3_13()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Idcstatus93_193 idcstatus93_193 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_idcstatus93_193()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Idcstatus92_192 idcstatus92_192 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_idcstatus92_192()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Idcstatus2_12 idcstatus2_12 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_idcstatus2_12()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Idcstatus7_17 idcstatus7_17 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_idcstatus7_17()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Idcstatus4_14 idcstatus4_14 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_idcstatus4_14()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Vcustatus4_24 vcustatus4_24 = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_vcustatus4_24()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Vcustatus5_25 vcustatus5_25 = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_vcustatus5_25()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Vcustatus6_26 vcustatus6_26 = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_vcustatus6_26()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Vcustatus7_27 vcustatus7_27 = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_vcustatus7_27()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Idcstatus5_15 idcstatus5_15 = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_idcstatus5_15()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Vcustatus1_21 vcustatus1_21 = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_vcustatus1_21()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Vcustatus2_22 vcustatus2_22 = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_vcustatus2_22()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Vcustatus3_23 vcustatus3_23 = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_vcustatus3_23()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Idcstatus9_19 idcstatus9_19 = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_idcstatus9_19()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Idcstatus8_18 idcstatus8_18 = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_idcstatus8_18()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Idcstatus6_16 idcstatus6_16 = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_idcstatus6_16()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Vcustatus8_28 vcustatus8_28 = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_vcustatus8_28()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.drivers.hsc4.Vcustatus9_29 vcustatus9_29 = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_vcustatus9_29()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .atd.common.Header header = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:atd.drivers.hsc4.Hsc4)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:atd.drivers.hsc4.Hsc4)
  return false;
#undef DO_
}

void Hsc4::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:atd.drivers.hsc4.Hsc4)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .atd.drivers.hsc4.Idcstatus1_11 idcstatus1_11 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->idcstatus1_11_, output);
  }

  // optional .atd.drivers.hsc4.Vcustatus10_30 vcustatus10_30 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, *this->vcustatus10_30_, output);
  }

  // optional .atd.drivers.hsc4.Mecommon2_v2_560 mecommon2_v2_560 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, *this->mecommon2_v2_560_, output);
  }

  // optional .atd.drivers.hsc4.Idcstatus91_191 idcstatus91_191 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, *this->idcstatus91_191_, output);
  }

  // optional .atd.drivers.hsc4.Idcstatus3_13 idcstatus3_13 = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5, *this->idcstatus3_13_, output);
  }

  // optional .atd.drivers.hsc4.Idcstatus93_193 idcstatus93_193 = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      6, *this->idcstatus93_193_, output);
  }

  // optional .atd.drivers.hsc4.Idcstatus92_192 idcstatus92_192 = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      7, *this->idcstatus92_192_, output);
  }

  // optional .atd.drivers.hsc4.Idcstatus2_12 idcstatus2_12 = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      8, *this->idcstatus2_12_, output);
  }

  // optional .atd.drivers.hsc4.Idcstatus7_17 idcstatus7_17 = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      9, *this->idcstatus7_17_, output);
  }

  // optional .atd.drivers.hsc4.Idcstatus4_14 idcstatus4_14 = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      10, *this->idcstatus4_14_, output);
  }

  // optional .atd.drivers.hsc4.Vcustatus4_24 vcustatus4_24 = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      11, *this->vcustatus4_24_, output);
  }

  // optional .atd.drivers.hsc4.Vcustatus5_25 vcustatus5_25 = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      12, *this->vcustatus5_25_, output);
  }

  // optional .atd.drivers.hsc4.Vcustatus6_26 vcustatus6_26 = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      13, *this->vcustatus6_26_, output);
  }

  // optional .atd.drivers.hsc4.Vcustatus7_27 vcustatus7_27 = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      14, *this->vcustatus7_27_, output);
  }

  // optional .atd.drivers.hsc4.Idcstatus5_15 idcstatus5_15 = 15;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      15, *this->idcstatus5_15_, output);
  }

  // optional .atd.drivers.hsc4.Vcustatus1_21 vcustatus1_21 = 16;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      16, *this->vcustatus1_21_, output);
  }

  // optional .atd.drivers.hsc4.Vcustatus2_22 vcustatus2_22 = 17;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      17, *this->vcustatus2_22_, output);
  }

  // optional .atd.drivers.hsc4.Vcustatus3_23 vcustatus3_23 = 18;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      18, *this->vcustatus3_23_, output);
  }

  // optional .atd.drivers.hsc4.Idcstatus9_19 idcstatus9_19 = 19;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      19, *this->idcstatus9_19_, output);
  }

  // optional .atd.drivers.hsc4.Idcstatus8_18 idcstatus8_18 = 20;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      20, *this->idcstatus8_18_, output);
  }

  // optional .atd.drivers.hsc4.Idcstatus6_16 idcstatus6_16 = 21;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      21, *this->idcstatus6_16_, output);
  }

  // optional .atd.drivers.hsc4.Vcustatus8_28 vcustatus8_28 = 22;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      22, *this->vcustatus8_28_, output);
  }

  // optional .atd.drivers.hsc4.Vcustatus9_29 vcustatus9_29 = 23;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      23, *this->vcustatus9_29_, output);
  }

  // optional .atd.common.Header header = 24;
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      24, *this->header_, output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:atd.drivers.hsc4.Hsc4)
}

size_t Hsc4::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:atd.drivers.hsc4.Hsc4)
  size_t total_size = 0;

  total_size += unknown_fields().size();

  if (_has_bits_[0 / 32] & 255u) {
    // optional .atd.drivers.hsc4.Idcstatus1_11 idcstatus1_11 = 1;
    if (has_idcstatus1_11()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->idcstatus1_11_);
    }

    // optional .atd.drivers.hsc4.Vcustatus10_30 vcustatus10_30 = 2;
    if (has_vcustatus10_30()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->vcustatus10_30_);
    }

    // optional .atd.drivers.hsc4.Mecommon2_v2_560 mecommon2_v2_560 = 3;
    if (has_mecommon2_v2_560()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->mecommon2_v2_560_);
    }

    // optional .atd.drivers.hsc4.Idcstatus91_191 idcstatus91_191 = 4;
    if (has_idcstatus91_191()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->idcstatus91_191_);
    }

    // optional .atd.drivers.hsc4.Idcstatus3_13 idcstatus3_13 = 5;
    if (has_idcstatus3_13()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->idcstatus3_13_);
    }

    // optional .atd.drivers.hsc4.Idcstatus93_193 idcstatus93_193 = 6;
    if (has_idcstatus93_193()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->idcstatus93_193_);
    }

    // optional .atd.drivers.hsc4.Idcstatus92_192 idcstatus92_192 = 7;
    if (has_idcstatus92_192()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->idcstatus92_192_);
    }

    // optional .atd.drivers.hsc4.Idcstatus2_12 idcstatus2_12 = 8;
    if (has_idcstatus2_12()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->idcstatus2_12_);
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional .atd.drivers.hsc4.Idcstatus7_17 idcstatus7_17 = 9;
    if (has_idcstatus7_17()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->idcstatus7_17_);
    }

    // optional .atd.drivers.hsc4.Idcstatus4_14 idcstatus4_14 = 10;
    if (has_idcstatus4_14()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->idcstatus4_14_);
    }

    // optional .atd.drivers.hsc4.Vcustatus4_24 vcustatus4_24 = 11;
    if (has_vcustatus4_24()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->vcustatus4_24_);
    }

    // optional .atd.drivers.hsc4.Vcustatus5_25 vcustatus5_25 = 12;
    if (has_vcustatus5_25()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->vcustatus5_25_);
    }

    // optional .atd.drivers.hsc4.Vcustatus6_26 vcustatus6_26 = 13;
    if (has_vcustatus6_26()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->vcustatus6_26_);
    }

    // optional .atd.drivers.hsc4.Vcustatus7_27 vcustatus7_27 = 14;
    if (has_vcustatus7_27()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->vcustatus7_27_);
    }

    // optional .atd.drivers.hsc4.Idcstatus5_15 idcstatus5_15 = 15;
    if (has_idcstatus5_15()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->idcstatus5_15_);
    }

    // optional .atd.drivers.hsc4.Vcustatus1_21 vcustatus1_21 = 16;
    if (has_vcustatus1_21()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->vcustatus1_21_);
    }

  }
  if (_has_bits_[16 / 32] & 16711680u) {
    // optional .atd.drivers.hsc4.Vcustatus2_22 vcustatus2_22 = 17;
    if (has_vcustatus2_22()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->vcustatus2_22_);
    }

    // optional .atd.drivers.hsc4.Vcustatus3_23 vcustatus3_23 = 18;
    if (has_vcustatus3_23()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->vcustatus3_23_);
    }

    // optional .atd.drivers.hsc4.Idcstatus9_19 idcstatus9_19 = 19;
    if (has_idcstatus9_19()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->idcstatus9_19_);
    }

    // optional .atd.drivers.hsc4.Idcstatus8_18 idcstatus8_18 = 20;
    if (has_idcstatus8_18()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->idcstatus8_18_);
    }

    // optional .atd.drivers.hsc4.Idcstatus6_16 idcstatus6_16 = 21;
    if (has_idcstatus6_16()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->idcstatus6_16_);
    }

    // optional .atd.drivers.hsc4.Vcustatus8_28 vcustatus8_28 = 22;
    if (has_vcustatus8_28()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->vcustatus8_28_);
    }

    // optional .atd.drivers.hsc4.Vcustatus9_29 vcustatus9_29 = 23;
    if (has_vcustatus9_29()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->vcustatus9_29_);
    }

    // optional .atd.common.Header header = 24;
    if (has_header()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->header_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Hsc4::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Hsc4*>(&from));
}

void Hsc4::MergeFrom(const Hsc4& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:atd.drivers.hsc4.Hsc4)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_idcstatus1_11()->::atd::drivers::hsc4::Idcstatus1_11::MergeFrom(from.idcstatus1_11());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_vcustatus10_30()->::atd::drivers::hsc4::Vcustatus10_30::MergeFrom(from.vcustatus10_30());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_mecommon2_v2_560()->::atd::drivers::hsc4::Mecommon2_v2_560::MergeFrom(from.mecommon2_v2_560());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_idcstatus91_191()->::atd::drivers::hsc4::Idcstatus91_191::MergeFrom(from.idcstatus91_191());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_idcstatus3_13()->::atd::drivers::hsc4::Idcstatus3_13::MergeFrom(from.idcstatus3_13());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_idcstatus93_193()->::atd::drivers::hsc4::Idcstatus93_193::MergeFrom(from.idcstatus93_193());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_idcstatus92_192()->::atd::drivers::hsc4::Idcstatus92_192::MergeFrom(from.idcstatus92_192());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_idcstatus2_12()->::atd::drivers::hsc4::Idcstatus2_12::MergeFrom(from.idcstatus2_12());
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_idcstatus7_17()->::atd::drivers::hsc4::Idcstatus7_17::MergeFrom(from.idcstatus7_17());
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_idcstatus4_14()->::atd::drivers::hsc4::Idcstatus4_14::MergeFrom(from.idcstatus4_14());
    }
    if (cached_has_bits & 0x00000400u) {
      mutable_vcustatus4_24()->::atd::drivers::hsc4::Vcustatus4_24::MergeFrom(from.vcustatus4_24());
    }
    if (cached_has_bits & 0x00000800u) {
      mutable_vcustatus5_25()->::atd::drivers::hsc4::Vcustatus5_25::MergeFrom(from.vcustatus5_25());
    }
    if (cached_has_bits & 0x00001000u) {
      mutable_vcustatus6_26()->::atd::drivers::hsc4::Vcustatus6_26::MergeFrom(from.vcustatus6_26());
    }
    if (cached_has_bits & 0x00002000u) {
      mutable_vcustatus7_27()->::atd::drivers::hsc4::Vcustatus7_27::MergeFrom(from.vcustatus7_27());
    }
    if (cached_has_bits & 0x00004000u) {
      mutable_idcstatus5_15()->::atd::drivers::hsc4::Idcstatus5_15::MergeFrom(from.idcstatus5_15());
    }
    if (cached_has_bits & 0x00008000u) {
      mutable_vcustatus1_21()->::atd::drivers::hsc4::Vcustatus1_21::MergeFrom(from.vcustatus1_21());
    }
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      mutable_vcustatus2_22()->::atd::drivers::hsc4::Vcustatus2_22::MergeFrom(from.vcustatus2_22());
    }
    if (cached_has_bits & 0x00020000u) {
      mutable_vcustatus3_23()->::atd::drivers::hsc4::Vcustatus3_23::MergeFrom(from.vcustatus3_23());
    }
    if (cached_has_bits & 0x00040000u) {
      mutable_idcstatus9_19()->::atd::drivers::hsc4::Idcstatus9_19::MergeFrom(from.idcstatus9_19());
    }
    if (cached_has_bits & 0x00080000u) {
      mutable_idcstatus8_18()->::atd::drivers::hsc4::Idcstatus8_18::MergeFrom(from.idcstatus8_18());
    }
    if (cached_has_bits & 0x00100000u) {
      mutable_idcstatus6_16()->::atd::drivers::hsc4::Idcstatus6_16::MergeFrom(from.idcstatus6_16());
    }
    if (cached_has_bits & 0x00200000u) {
      mutable_vcustatus8_28()->::atd::drivers::hsc4::Vcustatus8_28::MergeFrom(from.vcustatus8_28());
    }
    if (cached_has_bits & 0x00400000u) {
      mutable_vcustatus9_29()->::atd::drivers::hsc4::Vcustatus9_29::MergeFrom(from.vcustatus9_29());
    }
    if (cached_has_bits & 0x00800000u) {
      mutable_header()->::atd::common::Header::MergeFrom(from.header());
    }
  }
}

void Hsc4::CopyFrom(const Hsc4& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:atd.drivers.hsc4.Hsc4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Hsc4::IsInitialized() const {
  return true;
}

void Hsc4::Swap(Hsc4* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Hsc4::InternalSwap(Hsc4* other) {
  std::swap(idcstatus1_11_, other->idcstatus1_11_);
  std::swap(vcustatus10_30_, other->vcustatus10_30_);
  std::swap(mecommon2_v2_560_, other->mecommon2_v2_560_);
  std::swap(idcstatus91_191_, other->idcstatus91_191_);
  std::swap(idcstatus3_13_, other->idcstatus3_13_);
  std::swap(idcstatus93_193_, other->idcstatus93_193_);
  std::swap(idcstatus92_192_, other->idcstatus92_192_);
  std::swap(idcstatus2_12_, other->idcstatus2_12_);
  std::swap(idcstatus7_17_, other->idcstatus7_17_);
  std::swap(idcstatus4_14_, other->idcstatus4_14_);
  std::swap(vcustatus4_24_, other->vcustatus4_24_);
  std::swap(vcustatus5_25_, other->vcustatus5_25_);
  std::swap(vcustatus6_26_, other->vcustatus6_26_);
  std::swap(vcustatus7_27_, other->vcustatus7_27_);
  std::swap(idcstatus5_15_, other->idcstatus5_15_);
  std::swap(vcustatus1_21_, other->vcustatus1_21_);
  std::swap(vcustatus2_22_, other->vcustatus2_22_);
  std::swap(vcustatus3_23_, other->vcustatus3_23_);
  std::swap(idcstatus9_19_, other->idcstatus9_19_);
  std::swap(idcstatus8_18_, other->idcstatus8_18_);
  std::swap(idcstatus6_16_, other->idcstatus6_16_);
  std::swap(vcustatus8_28_, other->vcustatus8_28_);
  std::swap(vcustatus9_29_, other->vcustatus9_29_);
  std::swap(header_, other->header_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Hsc4::GetTypeName() const {
  return "atd.drivers.hsc4.Hsc4";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Hsc4

// optional .atd.drivers.hsc4.Idcstatus1_11 idcstatus1_11 = 1;
bool Hsc4::has_idcstatus1_11() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Hsc4::set_has_idcstatus1_11() {
  _has_bits_[0] |= 0x00000001u;
}
void Hsc4::clear_has_idcstatus1_11() {
  _has_bits_[0] &= ~0x00000001u;
}
void Hsc4::clear_idcstatus1_11() {
  if (idcstatus1_11_ != NULL) idcstatus1_11_->::atd::drivers::hsc4::Idcstatus1_11::Clear();
  clear_has_idcstatus1_11();
}
const ::atd::drivers::hsc4::Idcstatus1_11& Hsc4::idcstatus1_11() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Hsc4.idcstatus1_11)
  return idcstatus1_11_ != NULL ? *idcstatus1_11_
                         : *::atd::drivers::hsc4::Idcstatus1_11::internal_default_instance();
}
::atd::drivers::hsc4::Idcstatus1_11* Hsc4::mutable_idcstatus1_11() {
  set_has_idcstatus1_11();
  if (idcstatus1_11_ == NULL) {
    idcstatus1_11_ = new ::atd::drivers::hsc4::Idcstatus1_11;
  }
  // @@protoc_insertion_point(field_mutable:atd.drivers.hsc4.Hsc4.idcstatus1_11)
  return idcstatus1_11_;
}
::atd::drivers::hsc4::Idcstatus1_11* Hsc4::release_idcstatus1_11() {
  // @@protoc_insertion_point(field_release:atd.drivers.hsc4.Hsc4.idcstatus1_11)
  clear_has_idcstatus1_11();
  ::atd::drivers::hsc4::Idcstatus1_11* temp = idcstatus1_11_;
  idcstatus1_11_ = NULL;
  return temp;
}
void Hsc4::set_allocated_idcstatus1_11(::atd::drivers::hsc4::Idcstatus1_11* idcstatus1_11) {
  delete idcstatus1_11_;
  idcstatus1_11_ = idcstatus1_11;
  if (idcstatus1_11) {
    set_has_idcstatus1_11();
  } else {
    clear_has_idcstatus1_11();
  }
  // @@protoc_insertion_point(field_set_allocated:atd.drivers.hsc4.Hsc4.idcstatus1_11)
}

// optional .atd.drivers.hsc4.Vcustatus10_30 vcustatus10_30 = 2;
bool Hsc4::has_vcustatus10_30() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Hsc4::set_has_vcustatus10_30() {
  _has_bits_[0] |= 0x00000002u;
}
void Hsc4::clear_has_vcustatus10_30() {
  _has_bits_[0] &= ~0x00000002u;
}
void Hsc4::clear_vcustatus10_30() {
  if (vcustatus10_30_ != NULL) vcustatus10_30_->::atd::drivers::hsc4::Vcustatus10_30::Clear();
  clear_has_vcustatus10_30();
}
const ::atd::drivers::hsc4::Vcustatus10_30& Hsc4::vcustatus10_30() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Hsc4.vcustatus10_30)
  return vcustatus10_30_ != NULL ? *vcustatus10_30_
                         : *::atd::drivers::hsc4::Vcustatus10_30::internal_default_instance();
}
::atd::drivers::hsc4::Vcustatus10_30* Hsc4::mutable_vcustatus10_30() {
  set_has_vcustatus10_30();
  if (vcustatus10_30_ == NULL) {
    vcustatus10_30_ = new ::atd::drivers::hsc4::Vcustatus10_30;
  }
  // @@protoc_insertion_point(field_mutable:atd.drivers.hsc4.Hsc4.vcustatus10_30)
  return vcustatus10_30_;
}
::atd::drivers::hsc4::Vcustatus10_30* Hsc4::release_vcustatus10_30() {
  // @@protoc_insertion_point(field_release:atd.drivers.hsc4.Hsc4.vcustatus10_30)
  clear_has_vcustatus10_30();
  ::atd::drivers::hsc4::Vcustatus10_30* temp = vcustatus10_30_;
  vcustatus10_30_ = NULL;
  return temp;
}
void Hsc4::set_allocated_vcustatus10_30(::atd::drivers::hsc4::Vcustatus10_30* vcustatus10_30) {
  delete vcustatus10_30_;
  vcustatus10_30_ = vcustatus10_30;
  if (vcustatus10_30) {
    set_has_vcustatus10_30();
  } else {
    clear_has_vcustatus10_30();
  }
  // @@protoc_insertion_point(field_set_allocated:atd.drivers.hsc4.Hsc4.vcustatus10_30)
}

// optional .atd.drivers.hsc4.Mecommon2_v2_560 mecommon2_v2_560 = 3;
bool Hsc4::has_mecommon2_v2_560() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Hsc4::set_has_mecommon2_v2_560() {
  _has_bits_[0] |= 0x00000004u;
}
void Hsc4::clear_has_mecommon2_v2_560() {
  _has_bits_[0] &= ~0x00000004u;
}
void Hsc4::clear_mecommon2_v2_560() {
  if (mecommon2_v2_560_ != NULL) mecommon2_v2_560_->::atd::drivers::hsc4::Mecommon2_v2_560::Clear();
  clear_has_mecommon2_v2_560();
}
const ::atd::drivers::hsc4::Mecommon2_v2_560& Hsc4::mecommon2_v2_560() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Hsc4.mecommon2_v2_560)
  return mecommon2_v2_560_ != NULL ? *mecommon2_v2_560_
                         : *::atd::drivers::hsc4::Mecommon2_v2_560::internal_default_instance();
}
::atd::drivers::hsc4::Mecommon2_v2_560* Hsc4::mutable_mecommon2_v2_560() {
  set_has_mecommon2_v2_560();
  if (mecommon2_v2_560_ == NULL) {
    mecommon2_v2_560_ = new ::atd::drivers::hsc4::Mecommon2_v2_560;
  }
  // @@protoc_insertion_point(field_mutable:atd.drivers.hsc4.Hsc4.mecommon2_v2_560)
  return mecommon2_v2_560_;
}
::atd::drivers::hsc4::Mecommon2_v2_560* Hsc4::release_mecommon2_v2_560() {
  // @@protoc_insertion_point(field_release:atd.drivers.hsc4.Hsc4.mecommon2_v2_560)
  clear_has_mecommon2_v2_560();
  ::atd::drivers::hsc4::Mecommon2_v2_560* temp = mecommon2_v2_560_;
  mecommon2_v2_560_ = NULL;
  return temp;
}
void Hsc4::set_allocated_mecommon2_v2_560(::atd::drivers::hsc4::Mecommon2_v2_560* mecommon2_v2_560) {
  delete mecommon2_v2_560_;
  mecommon2_v2_560_ = mecommon2_v2_560;
  if (mecommon2_v2_560) {
    set_has_mecommon2_v2_560();
  } else {
    clear_has_mecommon2_v2_560();
  }
  // @@protoc_insertion_point(field_set_allocated:atd.drivers.hsc4.Hsc4.mecommon2_v2_560)
}

// optional .atd.drivers.hsc4.Idcstatus91_191 idcstatus91_191 = 4;
bool Hsc4::has_idcstatus91_191() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Hsc4::set_has_idcstatus91_191() {
  _has_bits_[0] |= 0x00000008u;
}
void Hsc4::clear_has_idcstatus91_191() {
  _has_bits_[0] &= ~0x00000008u;
}
void Hsc4::clear_idcstatus91_191() {
  if (idcstatus91_191_ != NULL) idcstatus91_191_->::atd::drivers::hsc4::Idcstatus91_191::Clear();
  clear_has_idcstatus91_191();
}
const ::atd::drivers::hsc4::Idcstatus91_191& Hsc4::idcstatus91_191() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Hsc4.idcstatus91_191)
  return idcstatus91_191_ != NULL ? *idcstatus91_191_
                         : *::atd::drivers::hsc4::Idcstatus91_191::internal_default_instance();
}
::atd::drivers::hsc4::Idcstatus91_191* Hsc4::mutable_idcstatus91_191() {
  set_has_idcstatus91_191();
  if (idcstatus91_191_ == NULL) {
    idcstatus91_191_ = new ::atd::drivers::hsc4::Idcstatus91_191;
  }
  // @@protoc_insertion_point(field_mutable:atd.drivers.hsc4.Hsc4.idcstatus91_191)
  return idcstatus91_191_;
}
::atd::drivers::hsc4::Idcstatus91_191* Hsc4::release_idcstatus91_191() {
  // @@protoc_insertion_point(field_release:atd.drivers.hsc4.Hsc4.idcstatus91_191)
  clear_has_idcstatus91_191();
  ::atd::drivers::hsc4::Idcstatus91_191* temp = idcstatus91_191_;
  idcstatus91_191_ = NULL;
  return temp;
}
void Hsc4::set_allocated_idcstatus91_191(::atd::drivers::hsc4::Idcstatus91_191* idcstatus91_191) {
  delete idcstatus91_191_;
  idcstatus91_191_ = idcstatus91_191;
  if (idcstatus91_191) {
    set_has_idcstatus91_191();
  } else {
    clear_has_idcstatus91_191();
  }
  // @@protoc_insertion_point(field_set_allocated:atd.drivers.hsc4.Hsc4.idcstatus91_191)
}

// optional .atd.drivers.hsc4.Idcstatus3_13 idcstatus3_13 = 5;
bool Hsc4::has_idcstatus3_13() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Hsc4::set_has_idcstatus3_13() {
  _has_bits_[0] |= 0x00000010u;
}
void Hsc4::clear_has_idcstatus3_13() {
  _has_bits_[0] &= ~0x00000010u;
}
void Hsc4::clear_idcstatus3_13() {
  if (idcstatus3_13_ != NULL) idcstatus3_13_->::atd::drivers::hsc4::Idcstatus3_13::Clear();
  clear_has_idcstatus3_13();
}
const ::atd::drivers::hsc4::Idcstatus3_13& Hsc4::idcstatus3_13() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Hsc4.idcstatus3_13)
  return idcstatus3_13_ != NULL ? *idcstatus3_13_
                         : *::atd::drivers::hsc4::Idcstatus3_13::internal_default_instance();
}
::atd::drivers::hsc4::Idcstatus3_13* Hsc4::mutable_idcstatus3_13() {
  set_has_idcstatus3_13();
  if (idcstatus3_13_ == NULL) {
    idcstatus3_13_ = new ::atd::drivers::hsc4::Idcstatus3_13;
  }
  // @@protoc_insertion_point(field_mutable:atd.drivers.hsc4.Hsc4.idcstatus3_13)
  return idcstatus3_13_;
}
::atd::drivers::hsc4::Idcstatus3_13* Hsc4::release_idcstatus3_13() {
  // @@protoc_insertion_point(field_release:atd.drivers.hsc4.Hsc4.idcstatus3_13)
  clear_has_idcstatus3_13();
  ::atd::drivers::hsc4::Idcstatus3_13* temp = idcstatus3_13_;
  idcstatus3_13_ = NULL;
  return temp;
}
void Hsc4::set_allocated_idcstatus3_13(::atd::drivers::hsc4::Idcstatus3_13* idcstatus3_13) {
  delete idcstatus3_13_;
  idcstatus3_13_ = idcstatus3_13;
  if (idcstatus3_13) {
    set_has_idcstatus3_13();
  } else {
    clear_has_idcstatus3_13();
  }
  // @@protoc_insertion_point(field_set_allocated:atd.drivers.hsc4.Hsc4.idcstatus3_13)
}

// optional .atd.drivers.hsc4.Idcstatus93_193 idcstatus93_193 = 6;
bool Hsc4::has_idcstatus93_193() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Hsc4::set_has_idcstatus93_193() {
  _has_bits_[0] |= 0x00000020u;
}
void Hsc4::clear_has_idcstatus93_193() {
  _has_bits_[0] &= ~0x00000020u;
}
void Hsc4::clear_idcstatus93_193() {
  if (idcstatus93_193_ != NULL) idcstatus93_193_->::atd::drivers::hsc4::Idcstatus93_193::Clear();
  clear_has_idcstatus93_193();
}
const ::atd::drivers::hsc4::Idcstatus93_193& Hsc4::idcstatus93_193() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Hsc4.idcstatus93_193)
  return idcstatus93_193_ != NULL ? *idcstatus93_193_
                         : *::atd::drivers::hsc4::Idcstatus93_193::internal_default_instance();
}
::atd::drivers::hsc4::Idcstatus93_193* Hsc4::mutable_idcstatus93_193() {
  set_has_idcstatus93_193();
  if (idcstatus93_193_ == NULL) {
    idcstatus93_193_ = new ::atd::drivers::hsc4::Idcstatus93_193;
  }
  // @@protoc_insertion_point(field_mutable:atd.drivers.hsc4.Hsc4.idcstatus93_193)
  return idcstatus93_193_;
}
::atd::drivers::hsc4::Idcstatus93_193* Hsc4::release_idcstatus93_193() {
  // @@protoc_insertion_point(field_release:atd.drivers.hsc4.Hsc4.idcstatus93_193)
  clear_has_idcstatus93_193();
  ::atd::drivers::hsc4::Idcstatus93_193* temp = idcstatus93_193_;
  idcstatus93_193_ = NULL;
  return temp;
}
void Hsc4::set_allocated_idcstatus93_193(::atd::drivers::hsc4::Idcstatus93_193* idcstatus93_193) {
  delete idcstatus93_193_;
  idcstatus93_193_ = idcstatus93_193;
  if (idcstatus93_193) {
    set_has_idcstatus93_193();
  } else {
    clear_has_idcstatus93_193();
  }
  // @@protoc_insertion_point(field_set_allocated:atd.drivers.hsc4.Hsc4.idcstatus93_193)
}

// optional .atd.drivers.hsc4.Idcstatus92_192 idcstatus92_192 = 7;
bool Hsc4::has_idcstatus92_192() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Hsc4::set_has_idcstatus92_192() {
  _has_bits_[0] |= 0x00000040u;
}
void Hsc4::clear_has_idcstatus92_192() {
  _has_bits_[0] &= ~0x00000040u;
}
void Hsc4::clear_idcstatus92_192() {
  if (idcstatus92_192_ != NULL) idcstatus92_192_->::atd::drivers::hsc4::Idcstatus92_192::Clear();
  clear_has_idcstatus92_192();
}
const ::atd::drivers::hsc4::Idcstatus92_192& Hsc4::idcstatus92_192() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Hsc4.idcstatus92_192)
  return idcstatus92_192_ != NULL ? *idcstatus92_192_
                         : *::atd::drivers::hsc4::Idcstatus92_192::internal_default_instance();
}
::atd::drivers::hsc4::Idcstatus92_192* Hsc4::mutable_idcstatus92_192() {
  set_has_idcstatus92_192();
  if (idcstatus92_192_ == NULL) {
    idcstatus92_192_ = new ::atd::drivers::hsc4::Idcstatus92_192;
  }
  // @@protoc_insertion_point(field_mutable:atd.drivers.hsc4.Hsc4.idcstatus92_192)
  return idcstatus92_192_;
}
::atd::drivers::hsc4::Idcstatus92_192* Hsc4::release_idcstatus92_192() {
  // @@protoc_insertion_point(field_release:atd.drivers.hsc4.Hsc4.idcstatus92_192)
  clear_has_idcstatus92_192();
  ::atd::drivers::hsc4::Idcstatus92_192* temp = idcstatus92_192_;
  idcstatus92_192_ = NULL;
  return temp;
}
void Hsc4::set_allocated_idcstatus92_192(::atd::drivers::hsc4::Idcstatus92_192* idcstatus92_192) {
  delete idcstatus92_192_;
  idcstatus92_192_ = idcstatus92_192;
  if (idcstatus92_192) {
    set_has_idcstatus92_192();
  } else {
    clear_has_idcstatus92_192();
  }
  // @@protoc_insertion_point(field_set_allocated:atd.drivers.hsc4.Hsc4.idcstatus92_192)
}

// optional .atd.drivers.hsc4.Idcstatus2_12 idcstatus2_12 = 8;
bool Hsc4::has_idcstatus2_12() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Hsc4::set_has_idcstatus2_12() {
  _has_bits_[0] |= 0x00000080u;
}
void Hsc4::clear_has_idcstatus2_12() {
  _has_bits_[0] &= ~0x00000080u;
}
void Hsc4::clear_idcstatus2_12() {
  if (idcstatus2_12_ != NULL) idcstatus2_12_->::atd::drivers::hsc4::Idcstatus2_12::Clear();
  clear_has_idcstatus2_12();
}
const ::atd::drivers::hsc4::Idcstatus2_12& Hsc4::idcstatus2_12() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Hsc4.idcstatus2_12)
  return idcstatus2_12_ != NULL ? *idcstatus2_12_
                         : *::atd::drivers::hsc4::Idcstatus2_12::internal_default_instance();
}
::atd::drivers::hsc4::Idcstatus2_12* Hsc4::mutable_idcstatus2_12() {
  set_has_idcstatus2_12();
  if (idcstatus2_12_ == NULL) {
    idcstatus2_12_ = new ::atd::drivers::hsc4::Idcstatus2_12;
  }
  // @@protoc_insertion_point(field_mutable:atd.drivers.hsc4.Hsc4.idcstatus2_12)
  return idcstatus2_12_;
}
::atd::drivers::hsc4::Idcstatus2_12* Hsc4::release_idcstatus2_12() {
  // @@protoc_insertion_point(field_release:atd.drivers.hsc4.Hsc4.idcstatus2_12)
  clear_has_idcstatus2_12();
  ::atd::drivers::hsc4::Idcstatus2_12* temp = idcstatus2_12_;
  idcstatus2_12_ = NULL;
  return temp;
}
void Hsc4::set_allocated_idcstatus2_12(::atd::drivers::hsc4::Idcstatus2_12* idcstatus2_12) {
  delete idcstatus2_12_;
  idcstatus2_12_ = idcstatus2_12;
  if (idcstatus2_12) {
    set_has_idcstatus2_12();
  } else {
    clear_has_idcstatus2_12();
  }
  // @@protoc_insertion_point(field_set_allocated:atd.drivers.hsc4.Hsc4.idcstatus2_12)
}

// optional .atd.drivers.hsc4.Idcstatus7_17 idcstatus7_17 = 9;
bool Hsc4::has_idcstatus7_17() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Hsc4::set_has_idcstatus7_17() {
  _has_bits_[0] |= 0x00000100u;
}
void Hsc4::clear_has_idcstatus7_17() {
  _has_bits_[0] &= ~0x00000100u;
}
void Hsc4::clear_idcstatus7_17() {
  if (idcstatus7_17_ != NULL) idcstatus7_17_->::atd::drivers::hsc4::Idcstatus7_17::Clear();
  clear_has_idcstatus7_17();
}
const ::atd::drivers::hsc4::Idcstatus7_17& Hsc4::idcstatus7_17() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Hsc4.idcstatus7_17)
  return idcstatus7_17_ != NULL ? *idcstatus7_17_
                         : *::atd::drivers::hsc4::Idcstatus7_17::internal_default_instance();
}
::atd::drivers::hsc4::Idcstatus7_17* Hsc4::mutable_idcstatus7_17() {
  set_has_idcstatus7_17();
  if (idcstatus7_17_ == NULL) {
    idcstatus7_17_ = new ::atd::drivers::hsc4::Idcstatus7_17;
  }
  // @@protoc_insertion_point(field_mutable:atd.drivers.hsc4.Hsc4.idcstatus7_17)
  return idcstatus7_17_;
}
::atd::drivers::hsc4::Idcstatus7_17* Hsc4::release_idcstatus7_17() {
  // @@protoc_insertion_point(field_release:atd.drivers.hsc4.Hsc4.idcstatus7_17)
  clear_has_idcstatus7_17();
  ::atd::drivers::hsc4::Idcstatus7_17* temp = idcstatus7_17_;
  idcstatus7_17_ = NULL;
  return temp;
}
void Hsc4::set_allocated_idcstatus7_17(::atd::drivers::hsc4::Idcstatus7_17* idcstatus7_17) {
  delete idcstatus7_17_;
  idcstatus7_17_ = idcstatus7_17;
  if (idcstatus7_17) {
    set_has_idcstatus7_17();
  } else {
    clear_has_idcstatus7_17();
  }
  // @@protoc_insertion_point(field_set_allocated:atd.drivers.hsc4.Hsc4.idcstatus7_17)
}

// optional .atd.drivers.hsc4.Idcstatus4_14 idcstatus4_14 = 10;
bool Hsc4::has_idcstatus4_14() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Hsc4::set_has_idcstatus4_14() {
  _has_bits_[0] |= 0x00000200u;
}
void Hsc4::clear_has_idcstatus4_14() {
  _has_bits_[0] &= ~0x00000200u;
}
void Hsc4::clear_idcstatus4_14() {
  if (idcstatus4_14_ != NULL) idcstatus4_14_->::atd::drivers::hsc4::Idcstatus4_14::Clear();
  clear_has_idcstatus4_14();
}
const ::atd::drivers::hsc4::Idcstatus4_14& Hsc4::idcstatus4_14() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Hsc4.idcstatus4_14)
  return idcstatus4_14_ != NULL ? *idcstatus4_14_
                         : *::atd::drivers::hsc4::Idcstatus4_14::internal_default_instance();
}
::atd::drivers::hsc4::Idcstatus4_14* Hsc4::mutable_idcstatus4_14() {
  set_has_idcstatus4_14();
  if (idcstatus4_14_ == NULL) {
    idcstatus4_14_ = new ::atd::drivers::hsc4::Idcstatus4_14;
  }
  // @@protoc_insertion_point(field_mutable:atd.drivers.hsc4.Hsc4.idcstatus4_14)
  return idcstatus4_14_;
}
::atd::drivers::hsc4::Idcstatus4_14* Hsc4::release_idcstatus4_14() {
  // @@protoc_insertion_point(field_release:atd.drivers.hsc4.Hsc4.idcstatus4_14)
  clear_has_idcstatus4_14();
  ::atd::drivers::hsc4::Idcstatus4_14* temp = idcstatus4_14_;
  idcstatus4_14_ = NULL;
  return temp;
}
void Hsc4::set_allocated_idcstatus4_14(::atd::drivers::hsc4::Idcstatus4_14* idcstatus4_14) {
  delete idcstatus4_14_;
  idcstatus4_14_ = idcstatus4_14;
  if (idcstatus4_14) {
    set_has_idcstatus4_14();
  } else {
    clear_has_idcstatus4_14();
  }
  // @@protoc_insertion_point(field_set_allocated:atd.drivers.hsc4.Hsc4.idcstatus4_14)
}

// optional .atd.drivers.hsc4.Vcustatus4_24 vcustatus4_24 = 11;
bool Hsc4::has_vcustatus4_24() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void Hsc4::set_has_vcustatus4_24() {
  _has_bits_[0] |= 0x00000400u;
}
void Hsc4::clear_has_vcustatus4_24() {
  _has_bits_[0] &= ~0x00000400u;
}
void Hsc4::clear_vcustatus4_24() {
  if (vcustatus4_24_ != NULL) vcustatus4_24_->::atd::drivers::hsc4::Vcustatus4_24::Clear();
  clear_has_vcustatus4_24();
}
const ::atd::drivers::hsc4::Vcustatus4_24& Hsc4::vcustatus4_24() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Hsc4.vcustatus4_24)
  return vcustatus4_24_ != NULL ? *vcustatus4_24_
                         : *::atd::drivers::hsc4::Vcustatus4_24::internal_default_instance();
}
::atd::drivers::hsc4::Vcustatus4_24* Hsc4::mutable_vcustatus4_24() {
  set_has_vcustatus4_24();
  if (vcustatus4_24_ == NULL) {
    vcustatus4_24_ = new ::atd::drivers::hsc4::Vcustatus4_24;
  }
  // @@protoc_insertion_point(field_mutable:atd.drivers.hsc4.Hsc4.vcustatus4_24)
  return vcustatus4_24_;
}
::atd::drivers::hsc4::Vcustatus4_24* Hsc4::release_vcustatus4_24() {
  // @@protoc_insertion_point(field_release:atd.drivers.hsc4.Hsc4.vcustatus4_24)
  clear_has_vcustatus4_24();
  ::atd::drivers::hsc4::Vcustatus4_24* temp = vcustatus4_24_;
  vcustatus4_24_ = NULL;
  return temp;
}
void Hsc4::set_allocated_vcustatus4_24(::atd::drivers::hsc4::Vcustatus4_24* vcustatus4_24) {
  delete vcustatus4_24_;
  vcustatus4_24_ = vcustatus4_24;
  if (vcustatus4_24) {
    set_has_vcustatus4_24();
  } else {
    clear_has_vcustatus4_24();
  }
  // @@protoc_insertion_point(field_set_allocated:atd.drivers.hsc4.Hsc4.vcustatus4_24)
}

// optional .atd.drivers.hsc4.Vcustatus5_25 vcustatus5_25 = 12;
bool Hsc4::has_vcustatus5_25() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void Hsc4::set_has_vcustatus5_25() {
  _has_bits_[0] |= 0x00000800u;
}
void Hsc4::clear_has_vcustatus5_25() {
  _has_bits_[0] &= ~0x00000800u;
}
void Hsc4::clear_vcustatus5_25() {
  if (vcustatus5_25_ != NULL) vcustatus5_25_->::atd::drivers::hsc4::Vcustatus5_25::Clear();
  clear_has_vcustatus5_25();
}
const ::atd::drivers::hsc4::Vcustatus5_25& Hsc4::vcustatus5_25() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Hsc4.vcustatus5_25)
  return vcustatus5_25_ != NULL ? *vcustatus5_25_
                         : *::atd::drivers::hsc4::Vcustatus5_25::internal_default_instance();
}
::atd::drivers::hsc4::Vcustatus5_25* Hsc4::mutable_vcustatus5_25() {
  set_has_vcustatus5_25();
  if (vcustatus5_25_ == NULL) {
    vcustatus5_25_ = new ::atd::drivers::hsc4::Vcustatus5_25;
  }
  // @@protoc_insertion_point(field_mutable:atd.drivers.hsc4.Hsc4.vcustatus5_25)
  return vcustatus5_25_;
}
::atd::drivers::hsc4::Vcustatus5_25* Hsc4::release_vcustatus5_25() {
  // @@protoc_insertion_point(field_release:atd.drivers.hsc4.Hsc4.vcustatus5_25)
  clear_has_vcustatus5_25();
  ::atd::drivers::hsc4::Vcustatus5_25* temp = vcustatus5_25_;
  vcustatus5_25_ = NULL;
  return temp;
}
void Hsc4::set_allocated_vcustatus5_25(::atd::drivers::hsc4::Vcustatus5_25* vcustatus5_25) {
  delete vcustatus5_25_;
  vcustatus5_25_ = vcustatus5_25;
  if (vcustatus5_25) {
    set_has_vcustatus5_25();
  } else {
    clear_has_vcustatus5_25();
  }
  // @@protoc_insertion_point(field_set_allocated:atd.drivers.hsc4.Hsc4.vcustatus5_25)
}

// optional .atd.drivers.hsc4.Vcustatus6_26 vcustatus6_26 = 13;
bool Hsc4::has_vcustatus6_26() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void Hsc4::set_has_vcustatus6_26() {
  _has_bits_[0] |= 0x00001000u;
}
void Hsc4::clear_has_vcustatus6_26() {
  _has_bits_[0] &= ~0x00001000u;
}
void Hsc4::clear_vcustatus6_26() {
  if (vcustatus6_26_ != NULL) vcustatus6_26_->::atd::drivers::hsc4::Vcustatus6_26::Clear();
  clear_has_vcustatus6_26();
}
const ::atd::drivers::hsc4::Vcustatus6_26& Hsc4::vcustatus6_26() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Hsc4.vcustatus6_26)
  return vcustatus6_26_ != NULL ? *vcustatus6_26_
                         : *::atd::drivers::hsc4::Vcustatus6_26::internal_default_instance();
}
::atd::drivers::hsc4::Vcustatus6_26* Hsc4::mutable_vcustatus6_26() {
  set_has_vcustatus6_26();
  if (vcustatus6_26_ == NULL) {
    vcustatus6_26_ = new ::atd::drivers::hsc4::Vcustatus6_26;
  }
  // @@protoc_insertion_point(field_mutable:atd.drivers.hsc4.Hsc4.vcustatus6_26)
  return vcustatus6_26_;
}
::atd::drivers::hsc4::Vcustatus6_26* Hsc4::release_vcustatus6_26() {
  // @@protoc_insertion_point(field_release:atd.drivers.hsc4.Hsc4.vcustatus6_26)
  clear_has_vcustatus6_26();
  ::atd::drivers::hsc4::Vcustatus6_26* temp = vcustatus6_26_;
  vcustatus6_26_ = NULL;
  return temp;
}
void Hsc4::set_allocated_vcustatus6_26(::atd::drivers::hsc4::Vcustatus6_26* vcustatus6_26) {
  delete vcustatus6_26_;
  vcustatus6_26_ = vcustatus6_26;
  if (vcustatus6_26) {
    set_has_vcustatus6_26();
  } else {
    clear_has_vcustatus6_26();
  }
  // @@protoc_insertion_point(field_set_allocated:atd.drivers.hsc4.Hsc4.vcustatus6_26)
}

// optional .atd.drivers.hsc4.Vcustatus7_27 vcustatus7_27 = 14;
bool Hsc4::has_vcustatus7_27() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void Hsc4::set_has_vcustatus7_27() {
  _has_bits_[0] |= 0x00002000u;
}
void Hsc4::clear_has_vcustatus7_27() {
  _has_bits_[0] &= ~0x00002000u;
}
void Hsc4::clear_vcustatus7_27() {
  if (vcustatus7_27_ != NULL) vcustatus7_27_->::atd::drivers::hsc4::Vcustatus7_27::Clear();
  clear_has_vcustatus7_27();
}
const ::atd::drivers::hsc4::Vcustatus7_27& Hsc4::vcustatus7_27() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Hsc4.vcustatus7_27)
  return vcustatus7_27_ != NULL ? *vcustatus7_27_
                         : *::atd::drivers::hsc4::Vcustatus7_27::internal_default_instance();
}
::atd::drivers::hsc4::Vcustatus7_27* Hsc4::mutable_vcustatus7_27() {
  set_has_vcustatus7_27();
  if (vcustatus7_27_ == NULL) {
    vcustatus7_27_ = new ::atd::drivers::hsc4::Vcustatus7_27;
  }
  // @@protoc_insertion_point(field_mutable:atd.drivers.hsc4.Hsc4.vcustatus7_27)
  return vcustatus7_27_;
}
::atd::drivers::hsc4::Vcustatus7_27* Hsc4::release_vcustatus7_27() {
  // @@protoc_insertion_point(field_release:atd.drivers.hsc4.Hsc4.vcustatus7_27)
  clear_has_vcustatus7_27();
  ::atd::drivers::hsc4::Vcustatus7_27* temp = vcustatus7_27_;
  vcustatus7_27_ = NULL;
  return temp;
}
void Hsc4::set_allocated_vcustatus7_27(::atd::drivers::hsc4::Vcustatus7_27* vcustatus7_27) {
  delete vcustatus7_27_;
  vcustatus7_27_ = vcustatus7_27;
  if (vcustatus7_27) {
    set_has_vcustatus7_27();
  } else {
    clear_has_vcustatus7_27();
  }
  // @@protoc_insertion_point(field_set_allocated:atd.drivers.hsc4.Hsc4.vcustatus7_27)
}

// optional .atd.drivers.hsc4.Idcstatus5_15 idcstatus5_15 = 15;
bool Hsc4::has_idcstatus5_15() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void Hsc4::set_has_idcstatus5_15() {
  _has_bits_[0] |= 0x00004000u;
}
void Hsc4::clear_has_idcstatus5_15() {
  _has_bits_[0] &= ~0x00004000u;
}
void Hsc4::clear_idcstatus5_15() {
  if (idcstatus5_15_ != NULL) idcstatus5_15_->::atd::drivers::hsc4::Idcstatus5_15::Clear();
  clear_has_idcstatus5_15();
}
const ::atd::drivers::hsc4::Idcstatus5_15& Hsc4::idcstatus5_15() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Hsc4.idcstatus5_15)
  return idcstatus5_15_ != NULL ? *idcstatus5_15_
                         : *::atd::drivers::hsc4::Idcstatus5_15::internal_default_instance();
}
::atd::drivers::hsc4::Idcstatus5_15* Hsc4::mutable_idcstatus5_15() {
  set_has_idcstatus5_15();
  if (idcstatus5_15_ == NULL) {
    idcstatus5_15_ = new ::atd::drivers::hsc4::Idcstatus5_15;
  }
  // @@protoc_insertion_point(field_mutable:atd.drivers.hsc4.Hsc4.idcstatus5_15)
  return idcstatus5_15_;
}
::atd::drivers::hsc4::Idcstatus5_15* Hsc4::release_idcstatus5_15() {
  // @@protoc_insertion_point(field_release:atd.drivers.hsc4.Hsc4.idcstatus5_15)
  clear_has_idcstatus5_15();
  ::atd::drivers::hsc4::Idcstatus5_15* temp = idcstatus5_15_;
  idcstatus5_15_ = NULL;
  return temp;
}
void Hsc4::set_allocated_idcstatus5_15(::atd::drivers::hsc4::Idcstatus5_15* idcstatus5_15) {
  delete idcstatus5_15_;
  idcstatus5_15_ = idcstatus5_15;
  if (idcstatus5_15) {
    set_has_idcstatus5_15();
  } else {
    clear_has_idcstatus5_15();
  }
  // @@protoc_insertion_point(field_set_allocated:atd.drivers.hsc4.Hsc4.idcstatus5_15)
}

// optional .atd.drivers.hsc4.Vcustatus1_21 vcustatus1_21 = 16;
bool Hsc4::has_vcustatus1_21() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void Hsc4::set_has_vcustatus1_21() {
  _has_bits_[0] |= 0x00008000u;
}
void Hsc4::clear_has_vcustatus1_21() {
  _has_bits_[0] &= ~0x00008000u;
}
void Hsc4::clear_vcustatus1_21() {
  if (vcustatus1_21_ != NULL) vcustatus1_21_->::atd::drivers::hsc4::Vcustatus1_21::Clear();
  clear_has_vcustatus1_21();
}
const ::atd::drivers::hsc4::Vcustatus1_21& Hsc4::vcustatus1_21() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Hsc4.vcustatus1_21)
  return vcustatus1_21_ != NULL ? *vcustatus1_21_
                         : *::atd::drivers::hsc4::Vcustatus1_21::internal_default_instance();
}
::atd::drivers::hsc4::Vcustatus1_21* Hsc4::mutable_vcustatus1_21() {
  set_has_vcustatus1_21();
  if (vcustatus1_21_ == NULL) {
    vcustatus1_21_ = new ::atd::drivers::hsc4::Vcustatus1_21;
  }
  // @@protoc_insertion_point(field_mutable:atd.drivers.hsc4.Hsc4.vcustatus1_21)
  return vcustatus1_21_;
}
::atd::drivers::hsc4::Vcustatus1_21* Hsc4::release_vcustatus1_21() {
  // @@protoc_insertion_point(field_release:atd.drivers.hsc4.Hsc4.vcustatus1_21)
  clear_has_vcustatus1_21();
  ::atd::drivers::hsc4::Vcustatus1_21* temp = vcustatus1_21_;
  vcustatus1_21_ = NULL;
  return temp;
}
void Hsc4::set_allocated_vcustatus1_21(::atd::drivers::hsc4::Vcustatus1_21* vcustatus1_21) {
  delete vcustatus1_21_;
  vcustatus1_21_ = vcustatus1_21;
  if (vcustatus1_21) {
    set_has_vcustatus1_21();
  } else {
    clear_has_vcustatus1_21();
  }
  // @@protoc_insertion_point(field_set_allocated:atd.drivers.hsc4.Hsc4.vcustatus1_21)
}

// optional .atd.drivers.hsc4.Vcustatus2_22 vcustatus2_22 = 17;
bool Hsc4::has_vcustatus2_22() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void Hsc4::set_has_vcustatus2_22() {
  _has_bits_[0] |= 0x00010000u;
}
void Hsc4::clear_has_vcustatus2_22() {
  _has_bits_[0] &= ~0x00010000u;
}
void Hsc4::clear_vcustatus2_22() {
  if (vcustatus2_22_ != NULL) vcustatus2_22_->::atd::drivers::hsc4::Vcustatus2_22::Clear();
  clear_has_vcustatus2_22();
}
const ::atd::drivers::hsc4::Vcustatus2_22& Hsc4::vcustatus2_22() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Hsc4.vcustatus2_22)
  return vcustatus2_22_ != NULL ? *vcustatus2_22_
                         : *::atd::drivers::hsc4::Vcustatus2_22::internal_default_instance();
}
::atd::drivers::hsc4::Vcustatus2_22* Hsc4::mutable_vcustatus2_22() {
  set_has_vcustatus2_22();
  if (vcustatus2_22_ == NULL) {
    vcustatus2_22_ = new ::atd::drivers::hsc4::Vcustatus2_22;
  }
  // @@protoc_insertion_point(field_mutable:atd.drivers.hsc4.Hsc4.vcustatus2_22)
  return vcustatus2_22_;
}
::atd::drivers::hsc4::Vcustatus2_22* Hsc4::release_vcustatus2_22() {
  // @@protoc_insertion_point(field_release:atd.drivers.hsc4.Hsc4.vcustatus2_22)
  clear_has_vcustatus2_22();
  ::atd::drivers::hsc4::Vcustatus2_22* temp = vcustatus2_22_;
  vcustatus2_22_ = NULL;
  return temp;
}
void Hsc4::set_allocated_vcustatus2_22(::atd::drivers::hsc4::Vcustatus2_22* vcustatus2_22) {
  delete vcustatus2_22_;
  vcustatus2_22_ = vcustatus2_22;
  if (vcustatus2_22) {
    set_has_vcustatus2_22();
  } else {
    clear_has_vcustatus2_22();
  }
  // @@protoc_insertion_point(field_set_allocated:atd.drivers.hsc4.Hsc4.vcustatus2_22)
}

// optional .atd.drivers.hsc4.Vcustatus3_23 vcustatus3_23 = 18;
bool Hsc4::has_vcustatus3_23() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void Hsc4::set_has_vcustatus3_23() {
  _has_bits_[0] |= 0x00020000u;
}
void Hsc4::clear_has_vcustatus3_23() {
  _has_bits_[0] &= ~0x00020000u;
}
void Hsc4::clear_vcustatus3_23() {
  if (vcustatus3_23_ != NULL) vcustatus3_23_->::atd::drivers::hsc4::Vcustatus3_23::Clear();
  clear_has_vcustatus3_23();
}
const ::atd::drivers::hsc4::Vcustatus3_23& Hsc4::vcustatus3_23() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Hsc4.vcustatus3_23)
  return vcustatus3_23_ != NULL ? *vcustatus3_23_
                         : *::atd::drivers::hsc4::Vcustatus3_23::internal_default_instance();
}
::atd::drivers::hsc4::Vcustatus3_23* Hsc4::mutable_vcustatus3_23() {
  set_has_vcustatus3_23();
  if (vcustatus3_23_ == NULL) {
    vcustatus3_23_ = new ::atd::drivers::hsc4::Vcustatus3_23;
  }
  // @@protoc_insertion_point(field_mutable:atd.drivers.hsc4.Hsc4.vcustatus3_23)
  return vcustatus3_23_;
}
::atd::drivers::hsc4::Vcustatus3_23* Hsc4::release_vcustatus3_23() {
  // @@protoc_insertion_point(field_release:atd.drivers.hsc4.Hsc4.vcustatus3_23)
  clear_has_vcustatus3_23();
  ::atd::drivers::hsc4::Vcustatus3_23* temp = vcustatus3_23_;
  vcustatus3_23_ = NULL;
  return temp;
}
void Hsc4::set_allocated_vcustatus3_23(::atd::drivers::hsc4::Vcustatus3_23* vcustatus3_23) {
  delete vcustatus3_23_;
  vcustatus3_23_ = vcustatus3_23;
  if (vcustatus3_23) {
    set_has_vcustatus3_23();
  } else {
    clear_has_vcustatus3_23();
  }
  // @@protoc_insertion_point(field_set_allocated:atd.drivers.hsc4.Hsc4.vcustatus3_23)
}

// optional .atd.drivers.hsc4.Idcstatus9_19 idcstatus9_19 = 19;
bool Hsc4::has_idcstatus9_19() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void Hsc4::set_has_idcstatus9_19() {
  _has_bits_[0] |= 0x00040000u;
}
void Hsc4::clear_has_idcstatus9_19() {
  _has_bits_[0] &= ~0x00040000u;
}
void Hsc4::clear_idcstatus9_19() {
  if (idcstatus9_19_ != NULL) idcstatus9_19_->::atd::drivers::hsc4::Idcstatus9_19::Clear();
  clear_has_idcstatus9_19();
}
const ::atd::drivers::hsc4::Idcstatus9_19& Hsc4::idcstatus9_19() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Hsc4.idcstatus9_19)
  return idcstatus9_19_ != NULL ? *idcstatus9_19_
                         : *::atd::drivers::hsc4::Idcstatus9_19::internal_default_instance();
}
::atd::drivers::hsc4::Idcstatus9_19* Hsc4::mutable_idcstatus9_19() {
  set_has_idcstatus9_19();
  if (idcstatus9_19_ == NULL) {
    idcstatus9_19_ = new ::atd::drivers::hsc4::Idcstatus9_19;
  }
  // @@protoc_insertion_point(field_mutable:atd.drivers.hsc4.Hsc4.idcstatus9_19)
  return idcstatus9_19_;
}
::atd::drivers::hsc4::Idcstatus9_19* Hsc4::release_idcstatus9_19() {
  // @@protoc_insertion_point(field_release:atd.drivers.hsc4.Hsc4.idcstatus9_19)
  clear_has_idcstatus9_19();
  ::atd::drivers::hsc4::Idcstatus9_19* temp = idcstatus9_19_;
  idcstatus9_19_ = NULL;
  return temp;
}
void Hsc4::set_allocated_idcstatus9_19(::atd::drivers::hsc4::Idcstatus9_19* idcstatus9_19) {
  delete idcstatus9_19_;
  idcstatus9_19_ = idcstatus9_19;
  if (idcstatus9_19) {
    set_has_idcstatus9_19();
  } else {
    clear_has_idcstatus9_19();
  }
  // @@protoc_insertion_point(field_set_allocated:atd.drivers.hsc4.Hsc4.idcstatus9_19)
}

// optional .atd.drivers.hsc4.Idcstatus8_18 idcstatus8_18 = 20;
bool Hsc4::has_idcstatus8_18() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void Hsc4::set_has_idcstatus8_18() {
  _has_bits_[0] |= 0x00080000u;
}
void Hsc4::clear_has_idcstatus8_18() {
  _has_bits_[0] &= ~0x00080000u;
}
void Hsc4::clear_idcstatus8_18() {
  if (idcstatus8_18_ != NULL) idcstatus8_18_->::atd::drivers::hsc4::Idcstatus8_18::Clear();
  clear_has_idcstatus8_18();
}
const ::atd::drivers::hsc4::Idcstatus8_18& Hsc4::idcstatus8_18() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Hsc4.idcstatus8_18)
  return idcstatus8_18_ != NULL ? *idcstatus8_18_
                         : *::atd::drivers::hsc4::Idcstatus8_18::internal_default_instance();
}
::atd::drivers::hsc4::Idcstatus8_18* Hsc4::mutable_idcstatus8_18() {
  set_has_idcstatus8_18();
  if (idcstatus8_18_ == NULL) {
    idcstatus8_18_ = new ::atd::drivers::hsc4::Idcstatus8_18;
  }
  // @@protoc_insertion_point(field_mutable:atd.drivers.hsc4.Hsc4.idcstatus8_18)
  return idcstatus8_18_;
}
::atd::drivers::hsc4::Idcstatus8_18* Hsc4::release_idcstatus8_18() {
  // @@protoc_insertion_point(field_release:atd.drivers.hsc4.Hsc4.idcstatus8_18)
  clear_has_idcstatus8_18();
  ::atd::drivers::hsc4::Idcstatus8_18* temp = idcstatus8_18_;
  idcstatus8_18_ = NULL;
  return temp;
}
void Hsc4::set_allocated_idcstatus8_18(::atd::drivers::hsc4::Idcstatus8_18* idcstatus8_18) {
  delete idcstatus8_18_;
  idcstatus8_18_ = idcstatus8_18;
  if (idcstatus8_18) {
    set_has_idcstatus8_18();
  } else {
    clear_has_idcstatus8_18();
  }
  // @@protoc_insertion_point(field_set_allocated:atd.drivers.hsc4.Hsc4.idcstatus8_18)
}

// optional .atd.drivers.hsc4.Idcstatus6_16 idcstatus6_16 = 21;
bool Hsc4::has_idcstatus6_16() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void Hsc4::set_has_idcstatus6_16() {
  _has_bits_[0] |= 0x00100000u;
}
void Hsc4::clear_has_idcstatus6_16() {
  _has_bits_[0] &= ~0x00100000u;
}
void Hsc4::clear_idcstatus6_16() {
  if (idcstatus6_16_ != NULL) idcstatus6_16_->::atd::drivers::hsc4::Idcstatus6_16::Clear();
  clear_has_idcstatus6_16();
}
const ::atd::drivers::hsc4::Idcstatus6_16& Hsc4::idcstatus6_16() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Hsc4.idcstatus6_16)
  return idcstatus6_16_ != NULL ? *idcstatus6_16_
                         : *::atd::drivers::hsc4::Idcstatus6_16::internal_default_instance();
}
::atd::drivers::hsc4::Idcstatus6_16* Hsc4::mutable_idcstatus6_16() {
  set_has_idcstatus6_16();
  if (idcstatus6_16_ == NULL) {
    idcstatus6_16_ = new ::atd::drivers::hsc4::Idcstatus6_16;
  }
  // @@protoc_insertion_point(field_mutable:atd.drivers.hsc4.Hsc4.idcstatus6_16)
  return idcstatus6_16_;
}
::atd::drivers::hsc4::Idcstatus6_16* Hsc4::release_idcstatus6_16() {
  // @@protoc_insertion_point(field_release:atd.drivers.hsc4.Hsc4.idcstatus6_16)
  clear_has_idcstatus6_16();
  ::atd::drivers::hsc4::Idcstatus6_16* temp = idcstatus6_16_;
  idcstatus6_16_ = NULL;
  return temp;
}
void Hsc4::set_allocated_idcstatus6_16(::atd::drivers::hsc4::Idcstatus6_16* idcstatus6_16) {
  delete idcstatus6_16_;
  idcstatus6_16_ = idcstatus6_16;
  if (idcstatus6_16) {
    set_has_idcstatus6_16();
  } else {
    clear_has_idcstatus6_16();
  }
  // @@protoc_insertion_point(field_set_allocated:atd.drivers.hsc4.Hsc4.idcstatus6_16)
}

// optional .atd.drivers.hsc4.Vcustatus8_28 vcustatus8_28 = 22;
bool Hsc4::has_vcustatus8_28() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void Hsc4::set_has_vcustatus8_28() {
  _has_bits_[0] |= 0x00200000u;
}
void Hsc4::clear_has_vcustatus8_28() {
  _has_bits_[0] &= ~0x00200000u;
}
void Hsc4::clear_vcustatus8_28() {
  if (vcustatus8_28_ != NULL) vcustatus8_28_->::atd::drivers::hsc4::Vcustatus8_28::Clear();
  clear_has_vcustatus8_28();
}
const ::atd::drivers::hsc4::Vcustatus8_28& Hsc4::vcustatus8_28() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Hsc4.vcustatus8_28)
  return vcustatus8_28_ != NULL ? *vcustatus8_28_
                         : *::atd::drivers::hsc4::Vcustatus8_28::internal_default_instance();
}
::atd::drivers::hsc4::Vcustatus8_28* Hsc4::mutable_vcustatus8_28() {
  set_has_vcustatus8_28();
  if (vcustatus8_28_ == NULL) {
    vcustatus8_28_ = new ::atd::drivers::hsc4::Vcustatus8_28;
  }
  // @@protoc_insertion_point(field_mutable:atd.drivers.hsc4.Hsc4.vcustatus8_28)
  return vcustatus8_28_;
}
::atd::drivers::hsc4::Vcustatus8_28* Hsc4::release_vcustatus8_28() {
  // @@protoc_insertion_point(field_release:atd.drivers.hsc4.Hsc4.vcustatus8_28)
  clear_has_vcustatus8_28();
  ::atd::drivers::hsc4::Vcustatus8_28* temp = vcustatus8_28_;
  vcustatus8_28_ = NULL;
  return temp;
}
void Hsc4::set_allocated_vcustatus8_28(::atd::drivers::hsc4::Vcustatus8_28* vcustatus8_28) {
  delete vcustatus8_28_;
  vcustatus8_28_ = vcustatus8_28;
  if (vcustatus8_28) {
    set_has_vcustatus8_28();
  } else {
    clear_has_vcustatus8_28();
  }
  // @@protoc_insertion_point(field_set_allocated:atd.drivers.hsc4.Hsc4.vcustatus8_28)
}

// optional .atd.drivers.hsc4.Vcustatus9_29 vcustatus9_29 = 23;
bool Hsc4::has_vcustatus9_29() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
void Hsc4::set_has_vcustatus9_29() {
  _has_bits_[0] |= 0x00400000u;
}
void Hsc4::clear_has_vcustatus9_29() {
  _has_bits_[0] &= ~0x00400000u;
}
void Hsc4::clear_vcustatus9_29() {
  if (vcustatus9_29_ != NULL) vcustatus9_29_->::atd::drivers::hsc4::Vcustatus9_29::Clear();
  clear_has_vcustatus9_29();
}
const ::atd::drivers::hsc4::Vcustatus9_29& Hsc4::vcustatus9_29() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Hsc4.vcustatus9_29)
  return vcustatus9_29_ != NULL ? *vcustatus9_29_
                         : *::atd::drivers::hsc4::Vcustatus9_29::internal_default_instance();
}
::atd::drivers::hsc4::Vcustatus9_29* Hsc4::mutable_vcustatus9_29() {
  set_has_vcustatus9_29();
  if (vcustatus9_29_ == NULL) {
    vcustatus9_29_ = new ::atd::drivers::hsc4::Vcustatus9_29;
  }
  // @@protoc_insertion_point(field_mutable:atd.drivers.hsc4.Hsc4.vcustatus9_29)
  return vcustatus9_29_;
}
::atd::drivers::hsc4::Vcustatus9_29* Hsc4::release_vcustatus9_29() {
  // @@protoc_insertion_point(field_release:atd.drivers.hsc4.Hsc4.vcustatus9_29)
  clear_has_vcustatus9_29();
  ::atd::drivers::hsc4::Vcustatus9_29* temp = vcustatus9_29_;
  vcustatus9_29_ = NULL;
  return temp;
}
void Hsc4::set_allocated_vcustatus9_29(::atd::drivers::hsc4::Vcustatus9_29* vcustatus9_29) {
  delete vcustatus9_29_;
  vcustatus9_29_ = vcustatus9_29;
  if (vcustatus9_29) {
    set_has_vcustatus9_29();
  } else {
    clear_has_vcustatus9_29();
  }
  // @@protoc_insertion_point(field_set_allocated:atd.drivers.hsc4.Hsc4.vcustatus9_29)
}

// optional .atd.common.Header header = 24;
bool Hsc4::has_header() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
void Hsc4::set_has_header() {
  _has_bits_[0] |= 0x00800000u;
}
void Hsc4::clear_has_header() {
  _has_bits_[0] &= ~0x00800000u;
}
void Hsc4::clear_header() {
  if (header_ != NULL) header_->::atd::common::Header::Clear();
  clear_has_header();
}
const ::atd::common::Header& Hsc4::header() const {
  // @@protoc_insertion_point(field_get:atd.drivers.hsc4.Hsc4.header)
  return header_ != NULL ? *header_
                         : *::atd::common::Header::internal_default_instance();
}
::atd::common::Header* Hsc4::mutable_header() {
  set_has_header();
  if (header_ == NULL) {
    header_ = new ::atd::common::Header;
  }
  // @@protoc_insertion_point(field_mutable:atd.drivers.hsc4.Hsc4.header)
  return header_;
}
::atd::common::Header* Hsc4::release_header() {
  // @@protoc_insertion_point(field_release:atd.drivers.hsc4.Hsc4.header)
  clear_has_header();
  ::atd::common::Header* temp = header_;
  header_ = NULL;
  return temp;
}
void Hsc4::set_allocated_header(::atd::common::Header* header) {
  delete header_;
  header_ = header;
  if (header) {
    set_has_header();
  } else {
    clear_has_header();
  }
  // @@protoc_insertion_point(field_set_allocated:atd.drivers.hsc4.Hsc4.header)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace hsc4
}  // namespace drivers
}  // namespace atd

// @@protoc_insertion_point(global_scope)
